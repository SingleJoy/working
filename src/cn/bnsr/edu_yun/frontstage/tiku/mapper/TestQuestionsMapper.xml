<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bnsr.edu_yun.frontstage.tiku.mapper.TestQuestionsMapper" >
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.tiku.po.TestQuestions" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 06 10:04:22 CST 2016.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="test_paper_id" property="test_paper_id" jdbcType="BIGINT" />
    <result column="question_id" property="question_id" jdbcType="BIGINT" />
    <result column="questions_number" property="questions_number" jdbcType="INTEGER" />
    <result column="questions_score" property="questions_score" jdbcType="DOUBLE" />
    <result column="parent_question_id" property="parent_question_id" jdbcType="BIGINT" />
    <result column="question_status" property="question_status" javaType="INTEGER"/>
    <result column="question_type" property="question_type" javaType="INTEGER"/>
    <result column="question_is_son" property="question_is_son" javaType="INTEGER"/>
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 06 10:04:22 CST 2016.
    -->
    id, test_paper_id, question_id, questions_number, questions_score, parent_question_id,question_status,question_type,question_is_son
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 06 10:04:22 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from test_questions
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 06 10:04:22 CST 2016.
    -->
    delete from test_questions
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.tiku.po.TestQuestions" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 06 10:04:22 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_questions (test_paper_id, question_id, questions_number, 
      questions_score, parent_question_id, question_status,question_type,question_is_son)
    values (#{test_paper_id,jdbcType=BIGINT}, #{question_id,jdbcType=BIGINT}, #{questions_number,jdbcType=INTEGER}, 
      #{questions_score,jdbcType=DOUBLE}, #{parent_question_id,jdbcType=BIGINT}, #{question_status,jdbcType=INTEGER},#{question_type,jdbcType=INTEGER},#{question_is_son,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.tiku.po.TestQuestions" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 06 10:04:22 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_questions
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="test_paper_id != null" >
        test_paper_id,
      </if>
      <if test="question_id != null" >
        question_id,
      </if>
      <if test="questions_number != null" >
        questions_number,
      </if>
      <if test="questions_score != null" >
        questions_score,
      </if>
      <if test="parent_question_id != null" >
        parent_question_id,
      </if>
      <if test="question_status">
      	question_status,
      </if>
      <if test="question_type">
      	question_type,
      </if>
      <if test="question_is_son">
      	question_is_son,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="test_paper_id != null" >
        #{test_paper_id,jdbcType=BIGINT},
      </if>
      <if test="question_id != null" >
        #{question_id,jdbcType=BIGINT},
      </if>
      <if test="questions_number != null" >
        #{questions_number,jdbcType=INTEGER},
      </if>
      <if test="questions_score != null" >
        #{questions_score,jdbcType=DOUBLE},
      </if>
      <if test="parent_question_id != null" >
        #{parent_question_id,jdbcType=BIGINT},
      </if>
      <if test="question_status != null">
      	#{question_status,jdbcType=INTEGER},
      </if>
      <if test="question_type != null">
      	#{question_type,jdbcType=INTEGER},
      </if>
      <if test="question_is_son != null">
      	#{question_is_son,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.tiku.po.TestQuestions" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 06 10:04:22 CST 2016.
    -->
    update test_questions
    <set >
      <if test="test_paper_id != null" >
        test_paper_id = #{test_paper_id,jdbcType=BIGINT},
      </if>
      <if test="question_id != null" >
        question_id = #{question_id,jdbcType=BIGINT},
      </if>
      <if test="questions_number != null" >
        questions_number = #{questions_number,jdbcType=INTEGER},
      </if>
      <if test="questions_score != null" >
        questions_score = #{questions_score,jdbcType=DOUBLE},
      </if>
      <if test="parent_question_id != null" >
        parent_question_id = #{parent_question_id,jdbcType=BIGINT},
      </if>
      <if test="question_status!=null">
      	question_status = #{question_status,jdbcType=INTEGER},
      </if>
      <if test="question_type!=null">
      	question_type = #{question_type,jdbcType=INTEGER},
      </if>
      <if test="question_is_son!=null">
      	question_is_son = #{question_is_son,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.tiku.po.TestQuestions" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 06 10:04:22 CST 2016.
    -->
    update test_questions
    set test_paper_id = #{test_paper_id,jdbcType=BIGINT},
      question_id = #{question_id,jdbcType=BIGINT},
      questions_number = #{questions_number,jdbcType=INTEGER},
      questions_score = #{questions_score,jdbcType=DOUBLE},
      parent_question_id = #{parent_question_id,jdbcType=BIGINT},
      question_status = #{question_status,jdbcType=INTEGER},
      question_type = #{question_type,jdbcType=INTEGER},
      question_is_son = #{question_is_son,jdbcType=INTEGER},
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <insert id="insertSelectiveList" parameterType="java.util.List" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_questions
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="test_paper_id != null" >
        test_paper_id,
      </if>
      <if test="question_id != null" >
        question_id,
      </if>
      <if test="questions_number != null" >
        questions_number,
      </if>
      <if test="questions_score != null" >
        questions_score,
      </if>
      <if test="parent_question_id != null" >
        parent_question_id,
      </if>
      <if test="question_status != null">
        question_status,
      </if>
      <if test="question_type != null">
        question_type,
      </if>
      <if test="question_is_son != null">
        question_is_son,
      </if>
    </trim>
     <foreach collection ="list" item="testQuestions" index= "index" separator =",">
     	 (
     	  <if test="test_paper_id != null" >
	        #{test_paper_id,jdbcType=BIGINT},
	      </if>
	      <if test="question_id != null" >
	        #{question_id,jdbcType=BIGINT},
	      </if>
	      <if test="questions_number != null" >
	        #{questions_number,jdbcType=INTEGER},
	      </if>
	      <if test="questions_score != null" >
	        #{questions_score,jdbcType=DOUBLE},
	      </if>
	      <if test="parent_question_id != null" >
	        #{parent_question_id,jdbcType=BIGINT},
	      </if>
	      <if test="question_status != null">
	      	#{question_status,jdbcType=INTEGER},
	      </if>
	      <if test="question_type != null">
	      	#{question_type,jdbcType=INTEGER},
	      </if>
	      <if test="question_is_son != null">
	      	#{question_is_son,jdbcType=INTEGER},
	      </if>
     	 )
     </foreach>
   <!--  <trim prefix="values (" suffix=")" suffixOverrides="," >
    
    </trim> -->
  </insert>
  <select id="queryTestPaperQuestionOnDoTest" parameterType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView" resultType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView">
  SELECT tq.id,tq.questions_number,q.stem,q.type,q.difficulty,tq.questions_score,tq.question_status,q.id as question_id,tq.parent_question_id,
  q.belong_to,q.belong_type,ch.hour_title,q.option_a,q.option_b,q.option_c,q.option_d,q.option_e,q.right_key
   <if test="exam_id!=0">
 ,ea.answer,ea.id as exam_answer_id,
 ea.is_right,ea.answer_comment,ea.answer_score
</if>
   FROM test_questions tq
	LEFT JOIN question q ON q.id=tq.question_id
	left join course_hour ch on ch.id=q.belong_to
	<if test="exam_id!=0">
	LEFT JOIN  exam e ON e.test_paper_id=tq.test_paper_id
	LEFT JOIN  exam_answer ea ON ea.exam_id=e.id AND ea.test_questions_id=tq.id
	</if>
	WHERE tq.test_paper_id=${testPaper_id} 
	<if test="type!=6">
		AND ((q.type=${type} AND  q.is_son=1) OR (tq.question_status =2 AND tq.question_type=${type} AND tq.question_is_son=1))
	</if>
	<if test="type==6">
		AND  ((q.is_son=0
		<if test="status==1">
			and q.type=4
		</if>
		) 
		or 
		(tq.question_status =2 
		AND tq.question_is_son=0
		))
	</if>
	<if test="exam_id!=0">
and e.id=${exam_id}
</if>
  <if test="rows!=null and rows!=0">
	LIMIT ${startLine},${rows}
	</if>
  
  </select>
  
  <select id="queryTestPaperQuestionOnDoCheck" parameterType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView" resultType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView">
  SELECT tq.id,tq.questions_number,q.stem,q.type,q.difficulty,tq.questions_score,tq.question_status,q.id as question_id,tq.parent_question_id,
  q.belong_to,q.belong_type,ch.hour_title,q.option_a,q.option_b,q.option_c,q.option_d,q.option_e,q.right_key
   <if test="exam_id!=0">
 ,ea.answer,ea.id as exam_answer_id,
 ea.is_right,ea.answer_comment,ea.answer_score
</if>
   FROM test_questions tq
	LEFT JOIN question q ON q.id=tq.question_id
	left join course_hour ch on ch.id=q.belong_to
	<if test="exam_id!=0">
	LEFT JOIN  exam e ON e.test_paper_id=tq.test_paper_id
	LEFT JOIN  exam_answer ea ON ea.exam_id=e.id AND ea.test_questions_id=tq.id
	</if>
	WHERE tq.test_paper_id=${testPaper_id} 
	<if test="type!=6">
		AND q.type=${type} AND  q.is_son=1
	</if>
	<if test="type==6">
		AND  q.is_son=0
		<if test="status==1">
			and q.type=4
		</if>
	</if>
	<if test="exam_id!=0">
and e.id=${exam_id}
</if>
  <if test="rows!=null and rows!=0">
	LIMIT ${startLine},${rows}
	</if>
  
  </select>
  
  <select id="queryAllTestPaperQuestion" parameterType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView" resultType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView">
SELECT tq.id,tq.questions_number,q.stem,q.type,q.difficulty,tq.questions_score,q.id as question_id,tq.parent_question_id,
  q.belong_to,q.belong_type,ch.hour_title,q.option_a,q.option_b,q.option_c,q.option_d,q.option_e ,q.right_key
  <if test="exam_id!=0">
 ,ea.answer,ea.id as exam_answer_id,
 ea.is_right,ea.answer_comment,e.exam_comment
</if>
   FROM test_questions tq
	LEFT JOIN question q ON q.id=tq.question_id
	left join course_hour ch on ch.id=q.belong_to
	<if test="exam_id!=0">
	LEFT JOIN  exam e ON e.test_paper_id=tq.test_paper_id
	LEFT JOIN  exam_answer ea ON ea.exam_id=e.id AND ea.test_questions_id=tq.id
	</if>
where tq.test_paper_id=${testPaper_id} 
<if test="exam_id!=0">
and e.id=${exam_id}
</if>
<if test="is_son==0">
	AND  q.is_son=0 
	</if>
	<if test="is_son==1">
	AND  q.is_son=1
	</if>
</select>

<select id="queryAllTestPaperQuestionOnDoHomework" parameterType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView" resultType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView">
SELECT tq.id,tq.questions_number,tq.question_status,q.stem,q.type,q.difficulty,tq.questions_score,q.id as question_id,tq.parent_question_id,
  q.belong_to,q.belong_type,ch.hour_title,q.option_a,q.option_b,q.option_c,q.option_d,q.option_e ,q.right_key
  <if test="exam_id!=0">
 ,ea.answer,ea.id as exam_answer_id,
 ea.is_right,ea.answer_comment,e.exam_comment
</if>
   FROM test_questions tq
	LEFT JOIN question q ON q.id=tq.question_id
	left join course_hour ch on ch.id=q.belong_to
	<if test="exam_id!=0">
	LEFT JOIN  exam e ON e.test_paper_id=tq.test_paper_id
	LEFT JOIN  exam_answer ea ON ea.exam_id=e.id AND ea.test_questions_id=tq.id
	</if>
where tq.test_paper_id=${testPaper_id} 
<if test="exam_id!=0">
and e.id=${exam_id}
</if>
<if test="is_son==0">
	AND  (q.is_son=0 or 
		(tq.question_status =2 
		AND tq.question_is_son=0
		))
	</if>
	<if test="is_son==1">
	AND  (q.is_son=1 or 
		(tq.question_status =2 
		AND tq.question_is_son=1
		))
	</if>
</select>

<select id="queryOneTestPaperQuestion" resultType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView" parameterType="java.lang.Long" >
SELECT tq.id,tq.questions_number,q.stem,q.type,q.difficulty,tq.questions_score,q.id as question_id,tq.parent_question_id,
  q.belong_to,q.belong_type,ch.hour_title,q.option_a,q.option_b,q.option_c,q.option_d,q.option_e,q.right_key
   FROM test_questions tq
	LEFT JOIN question q ON q.id=tq.question_id
	left join course_hour ch on ch.id=q.belong_to
where tq.id= #{id,jdbcType=BIGINT}

</select>
	<update id="updateTestQuestionsStatusByQid" parameterType="cn.bnsr.edu_yun.frontstage.tiku.view.TestPaperQuestionView">
		update test_questions 
		set question_status = #{question_status} , question_type = #{question_type} ,question_is_son = #{question_is_son}
		where question_id = #{question_id}
	</update>
</mapper>