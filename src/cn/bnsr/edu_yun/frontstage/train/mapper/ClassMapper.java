package cn.bnsr.edu_yun.frontstage.train.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import cn.bnsr.edu_yun.frontstage.tiku.view.ExamView;
import cn.bnsr.edu_yun.frontstage.train.po.Class;
import cn.bnsr.edu_yun.frontstage.train.view.ClassData;
import cn.bnsr.edu_yun.frontstage.train.view.ClassTestView;
import cn.bnsr.edu_yun.frontstage.train.view.ClassView;
import cn.bnsr.edu_yun.frontstage.train.view.TrainView;
import cn.bnsr.edu_yun.frontstage.train.view.TutorClassView;
import cn.bnsr.edu_yun.frontstage.train.view.UserTotalScoreView;

public interface ClassMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table class
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table class
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int insert(Class record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table class
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int insertSelective(Class record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table class
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    Class selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table class
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int updateByPrimaryKeySelective(Class record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table class
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int updateByPrimaryKey(Class record);
    
    
    List<ClassView> find(ClassView classView);
    
    
    Integer countClass(ClassView classView);
    
    String getLastClasses(ClassView classView);
    
    Long getLastId();
    
    ClassView selectOne(@Param("id")Long id ,@Param("source_type")Integer source_type);
    
	List<Class> queryClass(TrainView trainView);

	/**查询班级主页作业或考试*/
	List<ClassTestView> queryClassHomeTest(ClassView classView);
	
	/**查询班级主题讨论*/
	List<ClassTestView> queryClassTopic(ClassView classView);
	
	/**查询班级考试、作业*/
	List<ClassTestView> queryClassTest(ClassTestView testView);
	/**统计班级考试、作业数量*/
	Integer countClassTest(ClassTestView testView);
	
	/**查询班级讨论*/
	List<ClassTestView> queryClassTalking(ClassTestView testView);
	/**统计讨论数量*/
	Integer countClassTalking(ClassTestView testView);
	
	/**查询班级主题讨论(多出章节和讨论数)*/
	List<ClassTestView> searchClassTopic1(ClassView classView);
	/**查询班级学生考试成绩、作业成绩*/
	List<ExamView> queryClassExam(ExamView examView);
	/**统计班级学生考试成绩、作业成绩数量*/
	Integer countClassExam(ExamView examView);
	
	List<ExamView> queryDiscussScore(ExamView examView);
	
	Integer countDiscussScore(ExamView examView);

	List<TutorClassView> queryTutorClass(TutorClassView tutorClassView);

	int queryTotalTutorClass(TutorClassView tutorClassView);
	
	List<ClassTestView> queryClassHomeTest1(ClassView classView);
	
	List<UserTotalScoreView> queryUserTotalScore(ClassView classView);
	
	List<ClassData> queryClassData(ClassData classDataView);

	Long searchCourseTrainClass(Long courseId);

	List<ClassTestView> queryMyCommunityDiscuss(ClassView classView);
	
	int queryTotalMyCommunityDiscuss(ClassView classView);
	
	List<ClassView> queryClassesofCourse(ClassView classView);
	
	
	
	
	
	
}