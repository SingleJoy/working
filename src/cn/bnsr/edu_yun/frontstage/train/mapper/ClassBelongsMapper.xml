<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bnsr.edu_yun.frontstage.train.mapper.ClassBelongsMapper">
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.train.po.ClassBelongs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 19 11:07:06 CST 2017.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="class_id" jdbcType="BIGINT" property="class_id" />
    <result column="source_id" jdbcType="BIGINT" property="source_id" />
    <result column="source_type" jdbcType="INTEGER" property="source_type" />
    <result column="classify_relation_id" jdbcType="BIGINT" property="classify_relation_id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time"/>
  	<result column="type" jdbcType="INTEGER" property="type"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 19 11:07:06 CST 2017.
    -->
    id, class_id, source_id, source_type, classify_relation_id, status,create_time,type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 19 11:07:06 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from class_belongs
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 19 11:07:06 CST 2017.
    -->
    delete from class_belongs
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.train.po.ClassBelongs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 19 11:07:06 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into class_belongs (class_id, source_id, source_type, 
      classify_relation_id, status,create_time,type)
    values (#{class_id,jdbcType=BIGINT}, #{source_id,jdbcType=BIGINT}, #{source_type,jdbcType=INTEGER}, 
      #{classify_relation_id,jdbcType=BIGINT}, #{status,jdbcType=INTEGER},#{create_time,jdbcType=TIMESTAMP},
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.ClassBelongs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 19 11:07:06 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into class_belongs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="class_id != null">
        class_id,
      </if>
      <if test="source_id != null">
        source_id,
      </if>
      <if test="source_type != null">
        source_type,
      </if>
      <if test="classify_relation_id != null">
        classify_relation_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="create_time!=null">
      	create_time,
      </if>
      <if test="type!=null">
      	type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="class_id != null">
        #{class_id,jdbcType=BIGINT},
      </if>
      <if test="source_id != null">
        #{source_id,jdbcType=BIGINT},
      </if>
      <if test="source_type != null">
        #{source_type,jdbcType=INTEGER},
      </if>
      <if test="classify_relation_id != null">
        #{classify_relation_id,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=DATE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.ClassBelongs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 19 11:07:06 CST 2017.
    -->
    update class_belongs
    <set>
      <if test="class_id != null">
        class_id = #{class_id,jdbcType=BIGINT},
      </if>
      <if test="source_id != null">
        source_id = #{source_id,jdbcType=BIGINT},
      </if>
      <if test="source_type != null">
        source_type = #{source_type,jdbcType=INTEGER},
      </if>
      <if test="classify_relation_id != null">
        classify_relation_id = #{classify_relation_id,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=DATE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.train.po.ClassBelongs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 19 11:07:06 CST 2017.
    -->
    update class_belongs
    set class_id = #{class_id,jdbcType=BIGINT},
      source_id = #{source_id,jdbcType=BIGINT},
      source_type = #{source_type,jdbcType=INTEGER},
      classify_relation_id = #{classify_relation_id,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      create_time =#{create_time,jdbcType=DATE},
      type=#{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectClassBelongsByClassId" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from class_belongs where class_id = #{classId}
  </select>
  
  <select id="queryCommunityCourses" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCourseView" resultType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCourseView">
  	SELECT c.id,c.name,cr.name AS classifyName,cus.title AS courseName,
  	cb.status,cb.id AS classifyBelongsId,u.username AS creator,COUNT(us.id) AS total,cus.id as courseId,
  	(SELECT COUNT(*) FROM recommended r WHERE r.source_id=cus.id AND r.source_type=3 AND DATE_SUB(r.valid_time,INTERVAL -1 DAY)>NOW() ) as recommended
  	FROM classify_relation cr 
  	INNER JOIN class_belongs cb 
  	ON cr.source_id = ${id} AND cr.source_type=${source_type} AND cr.id = cb.classify_relation_id 
  	INNER JOIN  class c 
 	ON cb.class_id = c.id AND c.type = ${stamp} AND c.status=1 
  	LEFT JOIN class_relation clsr 
  	ON c.id=clsr.class_id 
  	INNER JOIN course cus 
  	ON clsr.source_id=cus.id 
  	<if test="name!=null and name!=''">
  		<![CDATA[AND  cus.title LIKE '%${name}%']]> 
  	</if>
  	LEFT JOIN user u 
  	ON cus.user_id=u.id  
  	LEFT JOIN user_study us 
  	ON c.id = us.source_id 
  	GROUP BY c.id 
  	<choose>
  			<when test="sort_type==1">
  				ORDER BY total
  			</when>
  			<when test="sort_type==2">
  				ORDER BY cb.status
  			</when>
  			<otherwise>
				ORDER BY c.id 
  			</otherwise>
  		</choose>
  		<choose>
  			<when test="sort_desc==1">
  			ASC
  			</when>
  			<otherwise>
  			DESC
  		</otherwise>
  	</choose>
  	<if test="paging==1">
  		LIMIT ${startLine} , ${rows}
  	</if>
  </select>
  
  <select id="queryCommunityCoursesTotal" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCourseView" resultType="java.lang.Integer">
  	SELECT COUNT(c.id) 
  	FROM classify_relation cr 
  	INNER JOIN class_belongs cb 
  	ON cr.source_id = ${id} AND cr.source_type=${source_type} AND cr.id = cb.classify_relation_id 
  	INNER JOIN  class c 
  	ON cb.class_id = c.id AND c.type = ${stamp} AND c.status=1 
  	LEFT JOIN class_relation clsr 
  	ON c.id=clsr.class_id 
  	INNER JOIN course cus 
  	ON clsr.source_id=cus.id 
  	<if test="name!=null and name!=''">
  		<![CDATA[AND  cus.title LIKE '%${name}%']]> 
  	</if>
  	LEFT JOIN user u 
  	ON cus.user_id=u.id  
  	LEFT JOIN user_study us 
  	ON c.id = us.source_id
  </select>
  
  <select id="queryCommunityTarins" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityTrainView" resultType="cn.bnsr.edu_yun.frontstage.train.view.CommunityTrainView">
  	SELECT c.id,cb.id AS classifyBelongsId,c.name,t.sponsor,COUNT(tc.id) AS classTotal,t.name AS trainName,
  	COUNT(us.id) AS total,cb.status,t.id as trainId,
  	(SELECT COUNT(*) FROM recommended r WHERE r.source_id=t.id AND r.source_type=4 AND DATE_SUB(r.valid_time,INTERVAL -1 DAY)>NOW() ) as recommended
  	FROM classify_relation cr 
  	INNER JOIN class_belongs cb 
  	ON cr.source_id=${id} AND cr.source_type=${source_type} AND cr.type=${stamp} AND cr.id = cb.classify_relation_id 
  	INNER JOIN class c 
  	ON cb.class_id=c.id AND c.status=1 
	LEFT JOIN class_relation clr 
	ON c.id=clr.class_id  
	INNER JOIN train t 
	ON clr.source_id = t.id 
	<if test="name!=null and name!=''">
  		<![CDATA[AND  t.name LIKE '%${name}%']]> 
  	</if>
	LEFT JOIN train_course tc 
	ON t.id = tc.source_id 
	LEFT JOIN user_study us 
	ON clr.source_id=us.source_id 
	GROUP BY c.id 
	<choose>
  			<when test="sort_type==1">
  				ORDER BY total
  			</when>
  			<when test="sort_type==2">
  				ORDER BY cb.status
  			</when>
  			<otherwise>
				ORDER BY c.id 
  			</otherwise>
  		</choose>
  		<choose>
  			<when test="sort_desc==1">
  			ASC
  			</when>
  			<otherwise>
  			DESC
  		</otherwise>
  	</choose>
	<if test="paging==1">
  		LIMIT ${startLine} , ${rows}
  	</if>
  </select>
  
  <select id="queryCommunityTarinsTotal" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityTrainView" resultType="java.lang.Integer">
  	SELECT count(cx.id) 
  	FROM 
  	(SELECT c.id 
  	FROM classify_relation cr 
  	INNER JOIN class_belongs cb 
  	ON cr.source_id=${id} AND cr.source_type=${source_type} AND cr.type=${stamp} AND cr.id = cb.classify_relation_id 
  	INNER JOIN class c 
  	ON cb.class_id=c.id AND c.status=1 
	LEFT JOIN class_relation clr 
	ON c.id=clr.class_id  
	INNER JOIN train t 
	ON clr.source_id = t.id 
	<if test="name!=null and name!=''">
  		<![CDATA[AND  t.name LIKE '%${name}%']]> 
  	</if>
	LEFT JOIN train_course tc 
	ON t.id = tc.source_id 
	LEFT JOIN user_study us 
	ON clr.source_id=us.source_id 
	GROUP BY c.id
	) cx
  </select>

  <select id="classBelongsDataStats" resultType="cn.bnsr.edu_yun.frontstage.train.view.DataStatsView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.DataStatsView">
  	SELECT DATE_FORMAT(c.create_time, '%Y-%m-%d') days, COUNT(c.id) AS newNum, t.countNum
  	FROM class_belongs c
  	LEFT JOIN (
  		SELECT COUNT(*) as countNum, cc.source_id 
  		FROM class_belongs cc
  		LEFT JOIN class cl ON cl.id = cc.class_id
		WHERE cc.source_id = ${id}
		AND cc.source_type = ${dataType}
		<if test="statsType == 1">
			AND cl.type = 0 
		</if> 
		<if test="statsType == 2">
			AND cl.type = 1 
		</if>
	) t ON t.source_id = c.source_id
	LEFT JOIN class cla ON cla.id = c.class_id
	WHERE c.source_id = ${id}
		AND c.source_type = ${dataType} 
		<if test="statsType == 1">
			AND cla.type = 0 
		</if> 
		<if test="statsType == 2">
			AND cla.type = 1 
		</if>
		<if  test="monthType == 0 or monthType == 1 ">
			<![CDATA[AND c.create_time LIKE  '${days}%']]>  
		</if>
		<if  test="monthType == 2 or monthType == 3 ">
		 	<![CDATA[ AND (c.create_time >= '${startTime}' AND c.create_time <= '${endTime}' )]]>  
		</if>
	GROUP BY days
  </select>
  
  <update id="updateStatus">
  	UPDATE class_belongs SET status = ${status} where id=${id}
  </update>
</mapper>