<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bnsr.edu_yun.frontstage.train.mapper.ClassMapper" >
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.train.po.Class" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="classes" property="classes" jdbcType="VARCHAR" />
    <result column="end_time" property="end_time" jdbcType="TIMESTAMP" />
    <result column="maximum" property="maximum" jdbcType="INTEGER" />
    <result column="continue_study" property="continue_study" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="complete_time" property="complete_time" jdbcType="TIMESTAMP" />
    <result column="discount" property="discount" jdbcType="INTEGER" />
    <result column="sign_up" property="sign_up" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="close_time" property="close_time" jdbcType="TIMESTAMP" />
    <result column="open_time" property="open_time" jdbcType="TIMESTAMP" />
    <result column="classify_id" property="classify_id" jdbcType="BIGINT" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="is_refund" property="is_refund" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    id, name, status, classes, end_time, maximum, continue_study, type, complete_time, 
    discount, sign_up, price, credit, close_time, open_time,
    classify_id, create_time, is_refund
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from class
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    delete from class
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.train.po.Class" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into class (name, status, classes, 
      end_time, maximum, continue_study, 
      type, complete_time, discount, sign_up, 
      price, credit, close_time, open_time,
      classify_id,create_time, is_refund)
    values (#{name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{classes,jdbcType=VARCHAR}, 
      #{end_time,jdbcType=TIMESTAMP}, #{maximum,jdbcType=INTEGER}, #{continue_study,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{complete_time,jdbcType=TIMESTAMP}, #{discount,jdbcType=INTEGER}, 
      #{sign_up,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{credit,jdbcType=INTEGER}, 
      #{close_time,jdbcType=TIMESTAMP}, #{open_time,jdbcType=TIMESTAMP}, #{classify_id,jdbcType=BIGINT},
      #{create_time,jdbcType=TIMESTAMP},#{is_refund,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.Class" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="classes != null" >
        classes,
      </if>
      <if test="end_time != null" >
        end_time,
      </if>
      <if test="maximum != null" >
        maximum,
      </if>
      <if test="continue_study != null" >
        continue_study,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="complete_time != null" >
        complete_time,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="sign_up != null" >
        sign_up,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="close_time != null" >
        close_time,
      </if>
      <if test="open_time != null" >
        open_time,
      </if>
      <if test="classify_id != null" >
        classify_id,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="is_refund != null" >
        is_refund,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="classes != null" >
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="end_time != null" >
        #{end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="maximum != null" >
        #{maximum,jdbcType=INTEGER},
      </if>
      <if test="continue_study != null" >
        #{continue_study,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="complete_time != null" >
        #{complete_time,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=INTEGER},
      </if>
      <if test="sign_up != null" >
        #{sign_up,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="close_time != null" >
        #{close_time,jdbcType=TIMESTAMP},
      </if>
      <if test="open_time != null" >
        #{open_time,jdbcType=TIMESTAMP},
      </if>
      <if test="classify_id != null" >
        #{classify_id,jdbcType=BIGINT},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="is_refund != null" >
        #{is_refund,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.Class" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    update class
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="classes != null" >
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="end_time != null" >
        end_time = #{end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="maximum != null" >
        maximum = #{maximum,jdbcType=INTEGER},
      </if>
      <if test="continue_study != null" >
        continue_study = #{continue_study,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="complete_time != null" >
        complete_time = #{complete_time,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=INTEGER},
      </if>
      <if test="sign_up != null" >
        sign_up = #{sign_up,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="close_time != null" >
        close_time = #{close_time,jdbcType=TIMESTAMP},
      </if>
      <if test="open_time != null" >
        open_time = #{open_time,jdbcType=TIMESTAMP},
      </if>
      <if test="classify_id != null" >
        classify_id = #{classify_id,jdbcType=BIGINT}
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="is_refund != null" >
        is_refund = #{is_refund,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.train.po.Class" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    update class
    set name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      classes = #{classes,jdbcType=VARCHAR},
      end_time = #{end_time,jdbcType=TIMESTAMP},
      maximum = #{maximum,jdbcType=INTEGER},
      continue_study = #{continue_study,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      complete_time = #{complete_time,jdbcType=TIMESTAMP},
      discount = #{discount,jdbcType=INTEGER},
      sign_up = #{sign_up,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      credit = #{credit,jdbcType=INTEGER},
      close_time = #{close_time,jdbcType=TIMESTAMP},
      open_time = #{open_time,jdbcType=TIMESTAMP},
      classify_id = #{classify_id,jdbcType=BIGINT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      is_refund = #{is_refund,jdbcType=INTEGER},
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="find" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView" >
    SELECT c.id,c.classes,c.name,c.open_time,
    	c.close_time,c.end_time,c.status,c.type,
    COUNT(us.user_id) AS stunum,cr.source_id,cr.source_type
    FROM class_relation cr 
    LEFT JOIN class c ON cr.class_id = c.id 
    LEFT JOIN user_study us ON us.source_id = c.id AND us.source_type = cr.source_type AND us.status NOT IN (1,2) 
    <if test="jumpType == 0">
    	LEFT JOIN class_belongs cb 
		ON cb.class_id=c.id 
		AND cb.type=cr.source_type 
    </if>
    WHERE cr.source_id = #{source_id,jdbcType=BIGINT}
    AND cr.source_type = #{source_type,jdbcType=INTEGER}
    AND c.type !=2 
    <choose>
    	<when test="jumpType>=0">
    		AND c.status = 1
    	</when>
    	<otherwise>
    		AND c.status !=5
    	</otherwise>
    </choose>
    <if test="name != null and name !='' ">
	      <![CDATA[AND  c.name LIKE '%${name}%']]>  
	</if>
	<if test="status != null and status == 5">
	      <![CDATA[AND  c.status !=5]]>  
	</if>
	<choose>
		<when test="jumpType > 0">
			AND  exists (
				SELECT cb.class_id
				FROM class_belongs cb
				WHERE cb.source_type = ${jumpType-1}
				AND cb.source_id = ${jumpId}
				AND cb.`status` = 0
				AND cb.type = 0
				AND cb.class_id = c.id
			)
		</when>
		<when test="jumpType == 0">
			AND cb.id is null
		</when>
	</choose>
	
	GROUP BY c.id
	ORDER BY c.id desc
	<if test="paging != null and paging == 1">
	LIMIT ${startLine},${rows}
	</if>
	
  </select>
  
  <select id="countClass" resultType="java.lang.Integer" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView" >
    SELECT 
    COUNT(*) 
    FROM class_relation cr 
    <choose>
    	<when test="name != null and name !='' ">
    		LEFT JOIN class c ON cr.class_id = c.id  AND c.type != 2
    	</when>
    	<otherwise>
    		,class c
    	</otherwise>
    </choose>
    WHERE cr.source_id = #{source_id,jdbcType=BIGINT}
    AND cr.source_type = #{source_type,jdbcType=INTEGER} AND c.status != 5
    <choose>
    	<when test="name != null and name !='' ">
    		<![CDATA[AND  c.name LIKE '%${name}%']]>  
    	</when>
    	<otherwise>
    		AND cr.class_id = c.id AND c.type != 2
    	</otherwise>
    </choose>
	<if test="status != null and status == 5">
	      <![CDATA[AND  c.status !=5]]>  
	</if>
  </select>
  
  <select id="getLastClasses" resultType="java.lang.String" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView" >
    SELECT 
    c.classes 
    FROM class_relation cr 
    LEFT JOIN class c ON cr.class_id = c.id 
    WHERE cr.source_id = #{source_id,jdbcType=BIGINT}
    AND cr.source_type = #{source_type,jdbcType=INTEGER}
    ORDER BY cr.class_id desc
    LIMIT 1
  </select>
  
  <select id="getLastId" resultType="java.lang.Long"  >
    SELECT 
    MAX(id) 
    FROM class
  </select>
  
  <select id="selectOne" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassView" parameterType="java.lang.Long" >
    SELECT 
    c.id, c.name, c.status, c.classes, c.end_time, c.maximum, c.continue_study, c.type, c.complete_time, 
    c.discount, c.is_refund, c.sign_up, c.price, c.credit, c.close_time, c.open_time,
    c.classify_id,c.create_time,cr.source_id, cr.source_type, cr.seatwork, cr.testpaper, cr.question, cr.activity, 
    cr.doubt, cr.job <if test="source_type == 0">,(CASE WHEN ci.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 3 AND defaulted = 0 order by upload_time desc limit 1) ELSE ci.img END) AS img,co.title as sourceName</if> <if test="source_type == 1">,t.img,t.name AS sourceName
    ,t.type as trainType
    </if>
    FROM class_relation cr 
    LEFT JOIN class c ON cr.class_id = c.id
    <if test="source_type == 0">
       LEFT JOIN  course_info ci ON cr.source_id = ci.course_id
       LEFT JOIN  course co ON cr.source_id = co.id
    </if>
    <if test="source_type == 1">
       LEFT JOIN  train t ON cr.source_id = t.id
    </if>
    WHERE c.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="queryClass" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TrainView" resultType="cn.bnsr.edu_yun.frontstage.train.po.Class">
  	SELECT c.classes,c.name,c.id,c.open_time ,c.end_time,c.type
  	FROM class c 
  	LEFT JOIN class_relation cr ON cr.class_id = c.id 
    <if test="jumpType == 0">
    	LEFT JOIN class_belongs cb 
		ON cb.class_id=c.id 
		AND cb.type=cr.source_type 
    </if>
	WHERE exists(
			SELECT cr.class_id 
			FROM class_relation cr 
			WHERE cr.source_id = ${id}
				AND cr.source_type= 1
				AND cr.class_id = c.id
		)
	<choose>
		<when test="jumpType != 0">
			AND  exists(
				SELECT cb.class_id
				FROM class_belongs cb
				WHERE cb.source_type = ${jumpType-1}
					AND cb.source_id = ${jumpId}
					AND cb.`status` = 0
					AND cb.type = 1
					AND cb.class_id = c.id
			)
		</when>
		<when test="jumpType == 0">
			AND cb.id is null
		</when>
	</choose>
	<choose>
    	<when test="jumpType>=0">
    		AND c.status = 1
    	</when>
    	<otherwise>
    		AND c.status !=5
    	</otherwise>
    </choose>	
  </select>
  
  <select id="queryClassHomeTest" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView">
  	SELECT tp.id,tp.name,
  	SUM(CASE WHEN e.status IS NULL OR e.status=0 THEN 1 ELSE 0 END) AS unsubmit_num,
  	SUM(CASE WHEN e.status=1 THEN 1 ELSE 0 END) AS unread_num,
  	SUM(CASE WHEN e.status=2 THEN 1 ELSE 0 END) AS read_num  
    FROM user_study us 
    <if test="source_type == 1">
    LEFT JOIN user_train_class utc ON us.learn_id=utc.source_id AND us.user_id=utc.user_id 
    LEFT JOIN user_class_hour uch ON utc.class_id=uch.class_id AND utc.course_id=uch.course_id AND utc.user_id=uch.user_id
    </if>
    <if test="source_type == 0">
    LEFT JOIN user_class_hour uch on  us.source_id=uch.class_id AND us.user_id=uch.user_id AND us.learn_id=uch.course_id
    </if>
    LEFT JOIN test_paper tp ON uch.course_hour_id=tp.course_hour_id AND uch.course_id=tp.course_id
    LEFT JOIN exam e ON uch.user_id=e.user_id AND tp.id=e.test_paper_id 
    WHERE  tp.type=#{type,jdbcType=INTEGER} AND (us.status=0 OR us.status IS NULL)  AND us.source_id=#{id,jdbcType=BIGINT} AND us.source_type=#{source_type,jdbcType=INTEGER}
    GROUP BY tp.id
  </select>
  <select id="queryClassHomeTest1" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView">
	SELECT ch.id as course_hour_id,ch.hour_title as name, 
	SUM(CASE WHEN uch.is_studyed=0 THEN 1 ELSE 0 END) AS unsubmit_num, 
	SUM(CASE WHEN uch.is_studyed=2 THEN 1 ELSE 0 END) AS unread_num, 
	SUM(CASE WHEN uch.is_studyed=1 THEN 1 ELSE 0 END) AS read_num 
	FROM course_hour ch
	LEFT JOIN class_relation cr ON cr.source_id=ch.course_id 
	LEFT JOIN user_study us ON us.learn_id=ch.course_id AND cr.class_id=us.source_id 
	LEFT JOIN user_class_hour uch ON uch.course_hour_id=ch.id AND us.user_id=uch.user_id AND us.source_id=uch.class_id 
	WHERE cr.class_id=${id} AND ch.attribute_type=${attribute_type} AND 
	(us.status IS NULL OR us.status=0 OR us.status=3)  AND ch.course_id = ${source_id} 
	GROUP BY ch.id 
	
  </select>
  <select id="queryClassTopic" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView">
    SELECT t.id,t.hour_title AS name,
    SUM(CASE when t.isComp=1 THEN 1 ELSE 0 END ) AS finished_num,
    SUM(CASE when t.isComp=0 THEN 1 ELSE 0 END ) AS unfinished_num 
	FROM (
         SELECT  ud.user_id,ch.id,ch.hour_title,ch.frequency, CASE WHEN COUNT(ud.id) >= ch.frequency THEN 1 ELSE 0 END AS isComp
         FROM user_study us 
         <if test="source_type == 1">
         LEFT JOIN user_train_class utc ON us.learn_id=utc.source_id AND us.user_id=utc.user_id 
         LEFT JOIN user_class_hour uch ON utc.class_id=uch.class_id AND utc.course_id=uch.course_id AND utc.user_id=uch.user_id
         </if>
         <if test="source_type == 0">
          LEFT JOIN user_class_hour uch ON us.source_id=uch.class_id AND us.user_id=uch.user_id AND us.learn_id=uch.course_id
         </if>
         LEFT JOIN course_hour ch ON uch.course_id=ch.course_id AND uch.course_hour_id=ch.id 
         LEFT JOIN user_discuss ud ON uch.course_hour_id=ud.course_hour_id AND uch.user_id=ud.user_id 
         WHERE ch.attribute_type=3 AND (us.status=0 OR us.status IS NULL ) AND us.source_id=#{id,jdbcType=BIGINT} AND us.source_type=#{source_type,jdbcType=INTEGER}
         GROUP BY ud.user_id,ch.id) t
	GROUP BY t.id
  </select>
  
   <select id="queryClassTest" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView">
	SELECT ch1.course_id AS Learn_id,tp.id,tp.name,tp.total_score,tp.total_number,tp.timeless,ch1.id AS course_hour_id,ch2.hour_title AS chapter
    FROM course_hour ch1 
    LEFT JOIN test_paper tp ON tp.course_hour_id = ch1.id
    LEFT JOIN course_hour ch2 ON ch1.parent_id = ch2.id 
    WHERE tp.type=#{exam_type,jdbcType=INTEGER} AND 
    ch1.course_id=#{Learn_id,jdbcType=BIGINT}
    ORDER BY tp.id 
    <if test="rows!=null and rows!=0">
	LIMIT ${startLine},${rows}
	</if>
  </select>
  
  <select id="countClassTest" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView" resultType="java.lang.Integer">
	SELECT COUNT(*)
    <!-- <if test="source_type == 1">
    FROM train_course tc 
    LEFT JOIN course_hour ch1 ON ch1.course_id=tc.course_id 
    </if> -->
    FROM course_hour ch1 
    LEFT JOIN test_paper tp ON tp.course_hour_id = ch1.id
    LEFT JOIN course_hour ch2 ON ch1.parent_id = ch2.id 
    WHERE tp.type=#{exam_type,jdbcType=INTEGER} AND 
  <!--   <if test="source_type == 1">
    tc.source_id=#{Learn_id,jdbcType=BIGINT}
    </if> -->
    ch1.course_id=#{Learn_id,jdbcType=BIGINT}
  </select>
  
   <select id="queryClassTalking" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView">
	SELECT ch1.course_id AS learn_id,ch1.id AS course_hour_id,ch1.hour_title AS name,ch1.frequency,ch2.hour_title AS chapter
    FROM course_hour ch1 
    LEFT JOIN course_hour ch2 ON ch1.parent_id = ch2.id 
    WHERE 
    ch1.course_id=#{Learn_id,jdbcType=BIGINT}
    AND ch1.attribute_type=3
    <if test="name != null">
       AND tp.name=#{name,jdbcType=VARCHAR}
    </if>
    ORDER BY ch1.id 
    <if test="rows!=null and rows!=0">
	LIMIT ${startLine},${rows}
	</if>
  </select> 
  
  <select id="countClassTalking" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView" resultType="java.lang.Integer">
	SELECT COUNT(*)
   <!--   <if test="source_type == 1">
    FROM train_course tc 
    LEFT JOIN course_hour ch1 ON ch1.course_id=tc.course_id 
    </if> -->
    FROM course_hour ch1 
    LEFT JOIN course_hour ch2 ON ch1.parent_id = ch2.id 
    WHERE 
  <!--   <if test="source_type == 1">
    tc.source_id=#{Learn_id,jdbcType=BIGINT}
    </if> -->
    ch1.course_id=#{Learn_id,jdbcType=BIGINT}
    AND ch1.attribute_type=3
    <if test="name != null">
       AND tp.name=#{name,jdbcType=VARCHAR}
    </if>
  </select> 
  
  
   <select id="searchClassTopic1" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView">
    SELECT ch1.id,ch1.hour_title AS name,ch2.hour_title AS chapter,
	(SELECT COUNT(*) FROM user_discuss ud 
	 LEFT JOIN user_study us ON ud.class_id=us.source_id AND ud.user_id=us.user_id 
	 WHERE us.status NOT IN (1,2) AND course_hour_id=ch1.id AND ud.class_id=
	 <if test="source_type==0">${id}</if>
	 <if test="source_type==1">${class_id}</if>) 
	 AS discuss_num,
	(SELECT COUNT(*) FROM user_class_hour uch
	 LEFT JOIN user_study us ON uch.class_id=us.source_id AND uch.user_id=us.user_id
	 WHERE us.status NOT IN (1,2) AND uch.is_studyed !=1 AND uch.course_hour_id=ch1.id AND 
	 uch.class_id=<if test="source_type==0">${id}</if><if test="source_type==1">${class_id}</if>) AS unfinished_num,
    (SELECT COUNT(*) FROM user_class_hour uch
     LEFT JOIN user_study us ON uch.class_id=us.source_id AND uch.user_id=us.user_id
     WHERE us.status NOT IN (1,2) AND uch.is_studyed =1 AND uch.course_hour_id=ch1.id AND 
     uch.class_id=<if test="source_type==0">${id}</if><if test="source_type==1">${class_id}</if>) AS finished_num 
	FROM course_hour ch1 
	LEFT JOIN course_hour ch2 ON ch1.parent_id=ch2.id
	WHERE ch1.attribute_type=3 AND ch1.course_id=${source_id} 
	GROUP BY ch1.id
  </select>
  
  <select id="queryMyCommunityDiscuss" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassTestView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView">
  	SELECT ch.id as course_hour_id,ch.hour_title as name,us.id as user_study_id,us.source_type,us.source_id,us.learn_id
	FROM course_hour ch 
	inner join user_class_hour uch 
	on ch.attribute_type=3 
	<if test="is_studyed!=1">
		AND uch.is_studyed !=1
	</if>
	<if test="is_studyed==1">
		AND uch.is_studyed =1
	</if>
	AND uch.course_hour_id=ch.id AND uch.user_id=${current_user}
	inner join user_study us 
	on uch.class_id=us.source_id AND uch.user_id=us.user_id AND us.status NOT IN (1,2) 
	inner join class_belongs cb 
	on us.source_type=cb.type AND us.source_id = cb.class_id AND cb.source_type=${current_community_type} AND cb.source_id=${current_community_id}
	group by ch.id 
	<if	test="rows>0">
		LIMIT ${startLine},${rows}
	</if>
  </select>
  
  <select id="queryTotalMyCommunityDiscuss" resultType="java.lang.Integer" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView">
  	SELECT count(chx.id) 
  	FROM (SELECT ch.id
	FROM course_hour ch 
	inner join user_class_hour uch 
	on ch.attribute_type=3 
	<if test="is_studyed!=1">
		AND uch.is_studyed !=1
	</if>
	<if test="is_studyed==1">
		AND uch.is_studyed =1
	</if>
	 AND uch.course_hour_id=ch.id AND uch.user_id=${current_user}
	inner join user_study us 
	on uch.class_id=us.source_id AND uch.user_id=us.user_id AND us.status NOT IN (1,2) 
	inner join class_belongs cb 
	on us.source_type=  cb.type AND us.source_id = cb.class_id AND cb.source_type=${current_community_type} AND cb.source_id=${current_community_id}
	group by ch.id
	) chx
  </select>
  
  <select id="queryClassExam" parameterType="cn.bnsr.edu_yun.frontstage.tiku.view.ExamView" resultType="cn.bnsr.edu_yun.frontstage.tiku.view.ExamView">
    SELECT e.id,e.test_paper_id,t.name,u.id AS user_id,u.username,(CASE WHEN u.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 2 AND defaulted = 0 order by upload_time desc limit 1) ELSE u.icon END) AS user_icon,
	us.add_time AS join_time,e.exam_score AS score,e.submit_time,e.marking_time,
	SUBDATE(e.submit_time,INTERVAL e.exam_hour HOUR) AS start_time
  	FROM user_study us
    LEFT JOIN user u ON us.user_id = u.id
    LEFT JOIN exam e ON e.user_id=us.user_id AND us.source_id=e.class_id
    LEFT JOIN test_paper t ON e.test_paper_id=t.id
    WHERE us.status NOT IN (1,2) AND e.status=2
    AND t.course_hour_id=#{course_hour_id,jdbcType=BIGINT} 
    AND us.source_id=#{source_id,jdbcType=BIGINT}   
    AND us.source_type=#{source_type,jdbcType=INTEGER}
    AND e.exam_type=#{exam_type,jdbcType=INTEGER} 
	<if test="search_info != null and search_info !='' " >
	   AND e.user_id=#{user_id,jdbcType=BIGINT}
	</if>
	ORDER BY e.user_id DESC
	<if test="rows!=null and rows!=0">
	LIMIT ${startLine},${rows}
	</if>
	
  </select>
  
   <select id="countClassExam" parameterType="cn.bnsr.edu_yun.frontstage.tiku.view.ExamView" resultType="java.lang.Integer">
	SELECT COUNT(*)
  	FROM user_study us
    LEFT JOIN user u ON us.user_id = u.id
    LEFT JOIN exam e ON e.user_id=us.user_id
    LEFT JOIN test_paper t ON e.test_paper_id=t.id
    WHERE us.status=0 AND e.status=2
    AND t.course_hour_id=#{course_hour_id,jdbcType=BIGINT} 
    AND us.source_id=#{source_id,jdbcType=BIGINT}   
    AND us.source_type=#{source_type,jdbcType=INTEGER}
    AND e.exam_type=#{exam_type,jdbcType=INTEGER} 
	<if test="search_info != null and search_info !='' " >
	   AND e.user_id=#{user_id,jdbcType=BIGINT}
	</if>
  </select>
  
  <select id="queryDiscussScore" parameterType="cn.bnsr.edu_yun.frontstage.tiku.view.ExamView" resultType="cn.bnsr.edu_yun.frontstage.tiku.view.ExamView">
	SELECT us.user_id,u.username,ch.hour_title AS name,count(ud.id) AS grade,us.add_time AS join_time,
	(CASE WHEN u.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 2 AND defaulted = 0 order by upload_time desc limit 1) ELSE u.icon END) AS user_icon
	FROM user_study us 
	LEFT JOIN user u ON us.user_id=u.id 
	LEFT JOIN user_discuss ud ON us.user_id=ud.user_id AND us.source_id=ud.class_id
	LEFT JOIN course_hour ch ON ud.course_hour_id=ch.id 
	WHERE us.status NOT IN (1,2)
	<if test="search_info != null and search_info !=''">
	  <![CDATA[AND u.username like '%${search_info}%']]>
	</if>
	AND ud.course_hour_id=#{course_hour_id,jdbcType=BIGINT} 
	AND us.source_id=#{source_id,jdbcType=BIGINT} 
	AND us.source_type=#{source_type,jdbcType=INTEGER} 
	GROUP BY  us.user_id
	ORDER BY us.user_id DESC
	<if test="rows!=null and rows!=0">
	LIMIT ${startLine},${rows}
	</if>
	
  </select>
  <select id="countDiscussScore" parameterType="cn.bnsr.edu_yun.frontstage.tiku.view.ExamView" resultType="java.lang.Integer">
	SELECT COUNT(*) FROM(
	SELECT 1
	FROM user_study us 
	LEFT JOIN user u ON us.user_id=u.id 
	LEFT JOIN user_discuss ud ON us.user_id=ud.user_id 
	WHERE us.status=0
	<if test="search_info != null and search_info !=''">
	  <![CDATA[AND u.username like '%${search_info}%']]>
	</if>
	AND ud.course_hour_id=#{course_hour_id,jdbcType=BIGINT} 
	AND us.source_id=#{source_id,jdbcType=BIGINT} 
	AND us.source_type=#{source_type,jdbcType=INTEGER} 
	GROUP BY  us.user_id) t
  </select>
  
  <select id="queryTutorClass" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TutorClassView" resultType="cn.bnsr.edu_yun.frontstage.train.view.TutorClassView">
  	SELECT c.id,c.name,c.status,cr.source_type as sourceType,cr.source_id as sourceId
	<if test="sourceType == 0" >
		,t.title as sourceName,(CASE WHEN ci.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 3 AND defaulted = 0 order by upload_time desc limit 1) ELSE ci.img END) AS img
	</if>
	<if test="sourceType == 1" >
		,t.`name` as sourceName,(CASE WHEN t.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 4 AND defaulted = 0 order by upload_time desc limit 1) ELSE t.img END) AS img
	</if>
  	FROM class c 
	LEFT JOIN class_relation cr ON c.id = cr.class_id
	<if test="sourceType == 0" >
	LEFT JOIN course t ON t.id = cr.source_id
	LEFT JOIN course_info ci ON ci.course_id = cr.source_id
	</if>
	<if test="sourceType == 1" >
	LEFT JOIN train t ON t.id = cr.source_id
	</if>
	WHERE c.id IN(
		SELECT tr.source_id 
		FROM teacher_relation tr 
		WHERE tr.user_id = #{userId,jdbcType=BIGINT}  
		AND type = 1
		<if test="sourceType == 0" >
			AND source_type = 1 
		</if>
		<if test="sourceType == 1" >
			AND source_type = 2 
		</if>
	)
	AND cr.source_type = #{sourceType,jdbcType=VARCHAR} 
  </select>
  
  <select id ="queryTotalTutorClass" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TutorClassView" resultType="java.lang.Integer">
  	SELECT COUNT(*) FROM class c 
	LEFT JOIN class_relation cr ON c.id = cr.class_id
  	WHERE c.id IN(
		SELECT tr.source_id 
		FROM teacher_relation tr 
		WHERE tr.user_id = #{userId,jdbcType=BIGINT}  
		AND tr.type = 1
		<if test="sourceType == 0" >
			AND tr.source_type = 1 
		</if>
		<if test="sourceType == 1" >
			AND tr.source_type = 2 
		</if>
	)
	AND cr.source_type = #{sourceType,jdbcType=VARCHAR} 
  </select>
   <select id="queryUserTotalScore" resultType="cn.bnsr.edu_yun.frontstage.train.view.UserTotalScoreView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView">
	SELECT u.id as user_id,u.username,u.realname,u.phone,uc.cert_id,uc.score,c.cert_name as cer
	<if test="type == 1" >
	,(SELECT COUNT(*) FROM user_train_class utc 
LEFT JOIN train_course tc ON tc.source_id=utc.source_id AND tc.course_id=utc.course_id
WHERE utc.user_study_id=us.id AND tc.is_required=0 AND utc.is_studyed=1) as required,
(SELECT COUNT(*) FROM user_train_class utc 
LEFT JOIN train_course tc ON tc.source_id=utc.source_id AND tc.course_id=utc.course_id
WHERE utc.user_study_id=us.id AND tc.is_required=1 AND utc.is_studyed=1) as not_required
</if>
	FROM user_study us
	LEFT JOIN USER u ON u.id=us.user_id
	LEFT JOIN user_cert uc ON  uc.user_id=u.id AND uc.classes=us.source_id
	LEFT JOIN certificate c ON c.id=uc.cert_id
	WHERE  us.status!=1 AND us.status!=2 AND us.source_id=#{id,jdbcType=BIGINT} GROUP BY us.user_id 
</select>
  
  <select id="queryClassData" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassData" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassData">
     SELECT c.id,c.name,COUNT(DISTINCT us.user_id) AS studentCount,
	 SUM(CASE WHEN us.is_studyed=1 THEN 1 ELSE 0 END) AS finishCount,
	 SUM(CASE WHEN ch1.attribute_type=0 THEN 1 ELSE 0 END) AS examCount,
	 SUM(CASE WHEN ch1.attribute_type=4 THEN 1 ELSE 0 END) AS homeworkCount,
	 SUM(CASE WHEN ch1.attribute_type=3 THEN 1 ELSE 0 END) AS discussCount
	 FROM class c LEFT JOIN user_study us ON c.id=us.source_id LEFT JOIN class_relation cr ON cr.class_id=c.id
	 LEFT JOIN course_hour ch1 ON ch1.course_id=us.learn_id  
	 WHERE cr.source_id=#{course_id,jdbcType=BIGINT}
	 GROUP BY c.id
  </select>
  
  <select id="searchCourseTrainClass" parameterType="java.lang.Long" resultType="java.lang.Long">
  	SELECT c.id FROM class c 
	LEFT JOIN class_relation cr ON cr.class_id = c.id 
	WHERE c.type = 2 AND c.`status` = 1 AND cr.source_type = 0
	AND cr.source_id = #{courseId,jdbcType=BIGINT} 
  </select>
  
  <select id="queryClassesofCourse" resultType="cn.bnsr.edu_yun.frontstage.train.view.ClassView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView">
  	SELECT c.id,c.name,c.open_time,c.close_time,u.realname as teacherName,c.discount
  	<choose>
  		<when test="source_type==0">
  			,ci.price
  		</when>
  		<when test="source_type==1">
  			,t.price
  		</when>
  	</choose>
  	FROM class_relation cr 
  	INNER JOIN class c 
  	ON cr.source_id=${source_id} 
  	AND cr.source_type=${source_type} 
  	AND cr.class_id=c.id 
  	AND c.type=${type} 
  	AND c.end_time >= DATE_FORMAT(NOW(),'%Y-%m-%d')
  	<choose>
  		<when test="source_type==0">
  			INNER JOIN course_info ci
  			ON ci.course_id=cr.source_id
  		</when>
  		<when test="source_type==1">
  			INNER JOIN train t 
  			ON cr.source_id=t.id 
  			<if test="type==1">
  				AND t.type=${trainType} 
  			</if>
  		</when>
  	</choose>
  	INNER JOIN teacher_relation tr
  	<choose>
  		<when test="type==0">
  			ON tr.source_type=1
  		</when>
  		<when test="type==1">
  			ON tr.source_type=2
  		</when>
  	</choose>
  	AND tr.source_id=c.id 
  	AND tr.type=2 
  	AND tr.is_display=0 
  	INNER JOIN user u
  	ON u.id=tr.user_id
  	LEFT JOIN user_study us ON us.user_id=${current_user} AND us.source_id=c.id AND us.source_type=${source_type}
  	<if test="jumpType == 0">
    	LEFT JOIN class_belongs cb 
		ON cb.class_id=c.id 
		AND cb.type=cr.source_type 
    </if>
  	WHERE us.id is null AND c.status = 1
  	<choose>
		<when test="jumpType != 0">
			AND  exists (
				SELECT cb.class_id
				FROM class_belongs cb
				WHERE cb.source_type = ${jumpType-1}
				AND cb.source_id = ${jumpId}
				AND cb.`status` = 0
				AND cb.type = ${source_type}
				AND cb.class_id = c.id
			)
		</when>
		<when test="jumpType == 0">
			AND cb.id is null
		</when>
	</choose>
  </select>
</mapper>