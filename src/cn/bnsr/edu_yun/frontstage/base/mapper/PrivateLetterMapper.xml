<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bnsr.edu_yun.frontstage.base.mapper.PrivateLetterMapper" >
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.base.po.PrivateLetter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="to_user_id" property="to_user_id" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="is_read" property="is_read" jdbcType="INTEGER" />
    <result column="send_time" property="send_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.bnsr.edu_yun.frontstage.base.po.PrivateLetter" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    <result column="letter_content" property="letter_content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    id, user_id, to_user_id, type, is_read, send_time
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    letter_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from private_letter
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    delete from private_letter
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.base.po.PrivateLetter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into private_letter (user_id, to_user_id, type, 
      is_read, send_time, letter_content
      )
    values (#{user_id,jdbcType=BIGINT}, #{to_user_id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{is_read,jdbcType=INTEGER}, #{send_time,jdbcType=TIMESTAMP}, #{letter_content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.base.po.PrivateLetter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into private_letter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="to_user_id != null" >
        to_user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="is_read != null" >
        is_read,
      </if>
      <if test="send_time != null" >
        send_time,
      </if>
      <if test="letter_content != null" >
        letter_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="to_user_id != null" >
        #{to_user_id,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="is_read != null" >
        #{is_read,jdbcType=INTEGER},
      </if>
      <if test="send_time != null" >
        #{send_time,jdbcType=TIMESTAMP},
      </if>
      <if test="letter_content != null" >
        #{letter_content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.base.po.PrivateLetter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    update private_letter
    <set >
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="to_user_id != null" >
        to_user_id = #{to_user_id,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="is_read != null" >
        is_read = #{is_read,jdbcType=INTEGER},
      </if>
      <if test="send_time != null" >
        send_time = #{send_time,jdbcType=TIMESTAMP},
      </if>
      <if test="letter_content != null" >
        letter_content = #{letter_content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.bnsr.edu_yun.frontstage.base.po.PrivateLetter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    update private_letter
    set user_id = #{user_id,jdbcType=BIGINT},
      to_user_id = #{to_user_id,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      is_read = #{is_read,jdbcType=INTEGER},
      send_time = #{send_time,jdbcType=TIMESTAMP},
      letter_content = #{letter_content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.base.po.PrivateLetter" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 30 12:36:38 CST 2016.
    -->
    update private_letter
    set user_id = #{user_id,jdbcType=BIGINT},
      to_user_id = #{to_user_id,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      is_read = #{is_read,jdbcType=INTEGER},
      send_time = #{send_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryPrivateLetter" resultType="cn.bnsr.edu_yun.frontstage.base.view.PrivateLetterView">
SELECT DISTINCT  p1.to_user_id,
	(  SELECT  COUNT(*)
  	FROM private_letter p
   WHERE p.user_id = #{user_id,jdbcType=BIGINT}
   AND p1.to_user_id=p.to_user_id
   ) AS num,
   ( SELECT  p.send_time
  	FROM private_letter p
   WHERE p.user_id = #{user_id,jdbcType=BIGINT}
   AND p.to_user_id=p1.to_user_id
    ORDER BY p.send_time DESC LIMIT 1
   ) AS send_time,
     ( SELECT  p.letter_content
  	FROM private_letter p
   WHERE p.user_id = #{user_id,jdbcType=BIGINT}
   AND p.to_user_id=p1.to_user_id
    ORDER BY p.send_time DESC LIMIT 1
   ) AS content,
   ( SELECT  p.type
  	FROM private_letter p
   WHERE p.user_id = #{user_id,jdbcType=BIGINT}
   AND p.to_user_id=p1.to_user_id
    ORDER BY p.send_time DESC LIMIT 1
   ) AS type,
   (  SELECT  COUNT(*)
  	FROM private_letter p
   WHERE p.user_id = #{user_id,jdbcType=BIGINT}
   AND p1.to_user_id=p.to_user_id
   AND p.is_read=2
   ) AS no_read,
   (CASE WHEN u1.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 2 AND defaulted = 0 order by upload_time desc limit 1) ELSE u1.icon END) as to_user_icon,
   u1.username as to_user_name
  FROM private_letter p1 
 left join user u1 on u1.id=p1.to_user_id
WHERE p1.user_id= #{user_id,jdbcType=BIGINT} ORDER BY send_time desc
	LIMIT ${startLine},${rows}
  </select>
  <select id="queryPrivateLetterDetail" resultType="cn.bnsr.edu_yun.frontstage.base.view.PrivateLetterView">
  SELECT p.user_id as user_id,p.to_user_id as to_user_id,
  p.id as id,
  p.send_time as send_time,
  p.letter_content as content,
  p.type as type,
  p.is_read as is_read,
   u2.username as to_user_name,
    (CASE WHEN u2.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 2 AND defaulted = 0 order by upload_time desc limit 1) ELSE u2.icon END) as to_user_icon,
    (CASE WHEN u1.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 2 AND defaulted = 0 order by upload_time desc limit 1) ELSE u1.icon END) as user_icon
   FROM private_letter p 
   left join user u1 on u1.id=p.user_id
    left join user u2 on u2.id=p.to_user_id
   WHERE user_id=#{user_id,jdbcType=BIGINT} AND to_user_id=#{to_user_id,jdbcType=BIGINT}
  ORDER BY p.send_time desc
	LIMIT ${startLine},${rows}
  </select>
    <select id="queryPrivateLetterId" resultType="cn.bnsr.edu_yun.frontstage.base.view.PrivateLetterView">
  SELECT 
  p.id as id
   FROM private_letter p 
 
   WHERE user_id=#{user_id,jdbcType=BIGINT} AND to_user_id=#{to_user_id,jdbcType=BIGINT}
 
  </select>
  <select id="queryPrivateLetterCount" resultType="java.lang.Long">
SELECT COUNT( DISTINCT  p1.to_user_id)
FROM private_letter p1 
 left join user u1 on u1.id=p1.to_user_id
WHERE p1.user_id= #{user_id,jdbcType=BIGINT} 
  </select>
   <select id="queryPrivateLetterDetailCount" resultType="java.lang.Long">
  SELECT COUNT(*)
   FROM private_letter p 
   left join user u1 on u1.id=p.user_id
    left join user u2 on u2.id=p.to_user_id
   WHERE user_id=#{user_id,jdbcType=BIGINT} AND to_user_id=#{to_user_id,jdbcType=BIGINT}
  </select>
  <select id="queryPrivateLetterNotReaddCount" resultType="java.lang.Long">
  SELECT COUNT(*)
   FROM private_letter p 
   WHERE p.user_id=#{user_id,jdbcType=BIGINT} 
   and p.type=2 and p.is_read=2
  </select>
  
  <select id="selectPrivateLetter" resultType="cn.bnsr.edu_yun.backstage.base.view.LetterView" parameterType="cn.bnsr.edu_yun.backstage.base.view.LetterView">
    SELECT pl.*,u1.username AS sender,u2.username AS receiver ,
    (CASE WHEN pl.id=${openId} THEN pl.id ELSE 0 END) AS openId
    FROM `private_letter` pl 
	LEFT JOIN `user` u1 ON u1.id=pl.user_id
	LEFT JOIN `user` u2 ON u2.id=pl.to_user_id
	WHERE pl.`type` = '1' 
	<if test="timeStart != null and timeStart != ''">
   		<![CDATA[ AND pl.send_time >= '${timeStart}']]>  
    </if>
    <if test="timeEnd != null and timeEnd !='' ">
      	<![CDATA[ AND pl.send_time <= '${timeEnd}']]>  
    </if>
	<if test="sender != null and sender !='' ">
      <![CDATA[AND  u1.username LIKE '%${sender}%']]>
	</if>
	<if test="letter_content != null and letter_content !='' ">
      <![CDATA[AND  pl.letter_content LIKE '%${letter_content}%']]>
	</if>
	<if test="sort !=null and order != null">
		ORDER BY pl.${sort} ${order}
	</if>
	LIMIT ${page},${rows}
  </select>
  
   <select id="countPrivateLetter" resultType="java.lang.Long" parameterType="cn.bnsr.edu_yun.backstage.base.view.LetterView">
    SELECT COUNT(*) FROM `private_letter` pl 
    LEFT JOIN `user` u1 ON u1.id=pl.user_id
	LEFT JOIN `user` u2 ON u2.id=pl.to_user_id
	WHERE pl.`type` = '1' 
	<if test="timeStart != null and timeStart != ''">
   		<![CDATA[ AND pl.send_time >= '${timeStart}']]>  
    </if>
    <if test="timeEnd != null and timeEnd !='' ">
      	<![CDATA[ AND pl.send_time <= '${timeEnd}']]>  
    </if>
	<if test="sender != null and sender !='' ">
      <![CDATA[AND  u1.username LIKE '%${sender}%']]>
	</if>
	<if test="letter_content != null and letter_content !='' ">
      <![CDATA[AND  pl.letter_content LIKE '%${letter_content}%']]>
	</if>
  </select>
</mapper>