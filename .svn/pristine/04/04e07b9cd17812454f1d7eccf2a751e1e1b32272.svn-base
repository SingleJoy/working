package cn.bnsr.edu_yun.backstage.base.mapper;

import java.util.List;

import cn.bnsr.edu_yun.backstage.base.po.SysLog;
import cn.bnsr.edu_yun.backstage.base.view.SysLogView;
import cn.bnsr.edu_yun.backstage.base.view.UserLogView;
import cn.bnsr.edu_yun.backstage.base.view.UserStatsView;
import cn.bnsr.edu_yun.frontstage.train.view.DataStatsView;

public interface SysLogMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_log
	 * @mbggenerated  Tue Jun 27 10:43:27 CST 2017
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_log
	 * @mbggenerated  Tue Jun 27 10:43:27 CST 2017
	 */
	int insert(SysLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_log
	 * @mbggenerated  Tue Jun 27 10:43:27 CST 2017
	 */
	int insertSelective(SysLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_log
	 * @mbggenerated  Tue Jun 27 10:43:27 CST 2017
	 */
	SysLog selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_log
	 * @mbggenerated  Tue Jun 27 10:43:27 CST 2017
	 */
	int updateByPrimaryKeySelective(SysLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_log
	 * @mbggenerated  Tue Jun 27 10:43:27 CST 2017
	 */
	int updateByPrimaryKeyWithBLOBs(SysLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_log
	 * @mbggenerated  Tue Jun 27 10:43:27 CST 2017
	 */
	int updateByPrimaryKey(SysLog record);

	List<SysLog> find(SysLogView sysLogView);

	Long count(SysLogView sysLogView);

	List<DataStatsView> dataStats(DataStatsView dataStatsView);
	
	//用户日志
	
	List<UserLogView> searchUserLog(UserLogView userLogView);
	
	Long countUserLog(UserLogView userLogView);
	/**
	 * 
	 * 该方法查询每小时用户登录数量，最小计量单位为天或小时
	 * @param userStats
	 * @return
	 */
	List<UserStatsView> queryloginStats(UserStatsView userStats);
	/**
	 * 
	 * 查询登录用户留存数量
	 * @param userStats
	 * @return
	 */
	List<UserStatsView> queryloginRemain(UserStatsView userStats);
	/**
	 * 
	 * 查询连续两个月都上线的用户数据
	 * @param userStats
	 * @return
	 */
	List<UserStatsView> queryActiveUserByMouth(UserStatsView userStats);
	/**
	 * 
	 * 查询本月上线，上月未上线，上月之前上过线的用户数据
	 * @param userStats
	 * @return
	 */
	List<UserStatsView> queryReturnUserByMouth(UserStatsView userStats);
	
	
	/**
	 * 
	 * 查询用户新增趋势
	 * @param userStats
	 * @return
	 */
	List<UserStatsView> queryUserAddTrend(UserStatsView userStats);
	/**
	 * 
	 * 查询用户登录趋势
	 * @param userStats
	 * @return
	 */
	List<UserStatsView> queryUserloginTrend(UserStatsView userStats);
	
	/**
	 * 
	 * 统计新增用户数
	 * @param userStats
	 * @return
	 */
	Long countAddUser(UserStatsView userStats);
	
	/**
	 * 
	 * 统计登录用户数
	 * @param userStats
	 * @return
	 */
	Long countLoginUser(UserStatsView userStats);
	
	
}