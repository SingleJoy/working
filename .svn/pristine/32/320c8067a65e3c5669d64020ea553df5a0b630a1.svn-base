package cn.bnsr.edu_yun.frontstage.train.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import cn.bnsr.edu_yun.frontstage.resource.view.SearchView;
import cn.bnsr.edu_yun.frontstage.train.po.Course;
import cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView;
import cn.bnsr.edu_yun.frontstage.train.view.CourseCenterView;
import cn.bnsr.edu_yun.frontstage.train.view.CourseView;
import cn.bnsr.edu_yun.frontstage.train.view.SchoolCenterView;
import cn.bnsr.edu_yun.frontstage.train.view.UserCollectView;

public interface CourseMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table course
	 * @mbggenerated  Thu Oct 27 14:36:25 CST 2016
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table course
	 * @mbggenerated  Thu Oct 27 14:36:25 CST 2016
	 */
	int insert(Course record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table course
	 * @mbggenerated  Thu Oct 27 14:36:25 CST 2016
	 */
	int insertSelective(Course record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table course
	 * @mbggenerated  Thu Oct 27 14:36:25 CST 2016
	 */
	Course selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table course
	 * @mbggenerated  Thu Oct 27 14:36:25 CST 2016
	 */
	int updateByPrimaryKeySelective(Course record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table course
	 * @mbggenerated  Thu Oct 27 14:36:25 CST 2016
	 */
	int updateByPrimaryKey(Course record);

	List<CourseView> queryCourse(CourseView courseView);
	
	int queryTotalCourse(CourseView courseView);

	List<CourseView> queryCourseInfo(CourseView courseView);

	List<CourseView> find(CourseView courseView);

	Long count(CourseView courseView);
	
	List<SchoolCenterView> querySchoolCourse(SchoolCenterView view);
	int querySchoolCourseCount(SchoolCenterView view);
	List<SchoolCenterView> querySchoolTeacher(SchoolCenterView view);
	int querySchoolTeacherCount(SchoolCenterView view);
	List<SchoolCenterView>querySchoolResourse(SchoolCenterView view);
	int querySchoolResourseCount(SchoolCenterView view);

	List<CourseCenterView> queryCourseCenter(CourseCenterView ccv);
	
	int queryTotalCourseCenter(CourseCenterView ccv);
	
	List<CourseView> getByCourseIds(@Param("list")List<String> list);

	List<CourseView> queryClassifyCourse();

	List<CommunityCenterView> queryCommunityCourse(CommunityCenterView ccv);

	int queryTotalCommunityCourse(CommunityCenterView ccv);
	
	List<CommunityCenterView> queryMyCommunityCourse(CommunityCenterView ccv);

	int queryTotalMyCommunityCourse(CommunityCenterView ccv);
	
	List<CourseView> queryMyJoinCourse(CourseView courseView);
	
	int queryMyJoinCourseCount(CourseView courseView);

	int releaseCourse(Course course);

	
	List<SearchView> querySearch(SearchView searchView);
	
	int querySearchCount(SearchView searchView);

	
	List<CourseView> queryGenralCourse(CourseView courseView);
	
	Long countGenralCourse(CourseView courseView);
	
	List<CourseView> queryCourseRanking(@Param("sort")String sort);
	
	List<UserCollectView> searchCourceM(@Param("str")String str);

}