<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bnsr.edu_yun.frontstage.train.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.train.po.Course">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Oct 27 14:36:25 CST 2016.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="subtitle" jdbcType="VARCHAR" property="subtitle" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="serial_status" jdbcType="INTEGER" property="serial_status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="user_id" jdbcType="BIGINT" property="user_id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="classify_id" jdbcType="BIGINT" property="classify_id" />
    <result column="validity" jdbcType="INTEGER" property="validity" />
    <result column="teacher_id" jdbcType="BIGINT" property="teacher_id" />
    <result column="student_id" jdbcType="BIGINT" property="student_id" />
    <result column="course_info_id" jdbcType="BIGINT" property="course_info_id" />
    <result column="hours" jdbcType="VARCHAR" property="hours" />
     <result column="room_id" jdbcType="VARCHAR" property="room_id" />
     <result column="is_check" jdbcType="BIGINT" property="is_check" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Oct 27 14:36:25 CST 2016.
    -->
    id, title, subtitle, status, serial_status, create_time, user_id, type, classify_id, 
    validity, teacher_id, student_id, course_info_id, hours, room_id, is_check
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Oct 27 14:36:25 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Oct 27 14:36:25 CST 2016.
    -->
    delete from course
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.train.po.Course">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Oct 27 14:36:25 CST 2016.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course (title, subtitle, status, 
      serial_status, create_time, user_id, type,
       classify_id, validity, teacher_id, student_id,
       course_info_id, hours,room_id, is_check
      )
    values (#{title,jdbcType=VARCHAR}, #{subtitle,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{serial_status,jdbcType=INTEGER}, #{create_time,jdbcType=TIMESTAMP}, #{user_id,jdbcType=BIGINT}, 
      #{type,jdbcType=INTEGER}, #{classify_id,jdbcType=BIGINT}, #{validity,jdbcType=INTEGER}, 
      #{teacher_id,jdbcType=BIGINT}, #{student_id,jdbcType=BIGINT}, #{course_info_id,jdbcType=BIGINT},
      #{hours,jdbcType=VARCHAR},#{room_id,jdbcType=VARCHAR}, #{is_check,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.Course">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Oct 27 14:36:25 CST 2016.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="subtitle != null">
        subtitle,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="serial_status != null">
        serial_status,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="classify_id != null">
        classify_id,
      </if>
      <if test="validity != null">
        validity,
      </if>
      <if test="teacher_id != null">
        teacher_id,
      </if>
      <if test="student_id != null">
        student_id,
      </if>
      <if test="course_info_id != null">
        course_info_id,
      </if>
      <if test="hours != null">
        hours,
      </if>
      <if test=" room_id != null">
         room_id,
      </if>
      <if test=" is_check != null">
         is_check,
      </if>
     </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="subtitle != null">
        #{subtitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="serial_status != null">
        #{serial_status,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="classify_id != null">
        #{classify_id,jdbcType=BIGINT},
      </if>
      <if test="validity != null">
        #{validity,jdbcType=INTEGER},
      </if>
      <if test="teacher_id != null">
        #{teacher_id,jdbcType=BIGINT},
      </if>
      <if test="student_id != null">
        #{student_id,jdbcType=BIGINT},
      </if>
      <if test="course_info_id != null">
        #{course_info_id,jdbcType=BIGINT},
      </if>
      <if test="hours != null">
        #{hours,jdbcType=VARCHAR},
      </if>
      <if test="room_id != null">
        #{room_id,jdbcType=VARCHAR},
      </if>
      <if test="is_check != null">
        #{is_check,jdbcType=BIGINT},
      </if>
      </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.Course">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Oct 27 14:36:25 CST 2016.
    -->
    update course
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="subtitle != null">
        subtitle = #{subtitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="serial_status != null">
        serial_status = #{serial_status,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="classify_id != null">
        classify_id = #{classify_id,jdbcType=BIGINT},
      </if>
      <if test="validity != null">
        validity = #{validity,jdbcType=INTEGER},
      </if>
      <if test="teacher_id != null">
        teacher_id = #{teacher_id,jdbcType=BIGINT},
      </if>
      <if test="student_id != null">
        student_id = #{student_id,jdbcType=BIGINT},
      </if>
      <if test="course_info_id != null">
        course_info_id = #{course_info_id,jdbcType=BIGINT},
      </if>
      <if test="hours != null">
        hours = #{hours,jdbcType=VARCHAR},
      </if>
      <if test="is_check != null">
        is_check = #{is_check,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.train.po.Course">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Oct 27 14:36:25 CST 2016.
    -->
    update course
    set title = #{title,jdbcType=VARCHAR},
      subtitle = #{subtitle,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      serial_status = #{serial_status,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      user_id = #{user_id,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      classify_id = #{classify_id,jdbcType=BIGINT},
      validity = #{validity,jdbcType=INTEGER},
      teacher_id = #{teacher_id,jdbcType=BIGINT},
      student_id = #{student_id,jdbcType=BIGINT},
      course_info_id = #{course_info_id,jdbcType=BIGINT},
      hours = #{hours,jdbcType=VARCHAR},
      is_check = #{is_check,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="queryCourse" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseView" resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseView">
  	SELECT c.id, c.title, c.status, co.price,c.room_id,u.username as createUser,
  		count(cs.id) as studentNum, co.img, c.hours, u.username AS speaker,count(cr.id) AS open_class_num
	FROM course c 
	LEFT JOIN course_info co ON  c.id = co.course_id
	LEFT JOIN user u ON u.id = c.user_id
	LEFT JOIN (
		SELECT us.learn_id,us.id 
		FROM user_study us 
		WHERE us.source_type=0 
		AND (us.status is null or us.status=0 or us.status=3)
		) cs ON c.id=cs.learn_id
	INNER JOIN class_relation cr
	ON cr.source_id=c.id
	INNER JOIN class cla 
	ON cr.class_id=cla.id AND cla.type!=2
	WHERE c.user_id=${userId}
	and c.type=${type} 
	<if test="status == 1">
		AND c.status =  1
	</if>
	<if test="title != null">
		<![CDATA[AND c.title LIKE  '%${title}%']]>  
	</if>
	<if test="list!=null">
		AND c.id not in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
             #{item}  
       	</foreach>  
	</if>
	GROUP BY c.id 
	ORDER BY c.create_time desc
	LIMIT ${startLine},${rows}
  </select>
  
  <select id="queryTotalCourse" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseView" resultType="java.lang.Integer">
  	SELECT count(x.id) FROM 
	(SELECT c.id FROM course c 
	INNER JOIN class_relation cr 
	ON cr.source_id=c.id 
	INNER JOIN class cla 
	ON cr.class_id=cla.id 
	AND cla.type!=2 
	WHERE c.user_id=${userId}
	and c.type=${type} 
	<if test="status == 1">
		AND c.status =  1
	</if>
	<if test="title != null">
		<![CDATA[AND c.title LIKE  '%${title}%']]>  
	</if>
	<if test="list!=null">
		AND c.id not in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
             #{item}  
       	</foreach>  
	</if>
	GROUP BY c.id) x
  </select>
  
  <select id="queryCourseInfo" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseView" resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseView">
  	SELECT c.*, co.img, GROUP_CONCAT(CAST(u.username AS char)SEPARATOR " ")   as teachers 
  	FROM course c
 	LEFT JOIN course_info co ON  c.id = co.course_id
 	LEFT JOIN teacher_relation t ON t.source_id = c.id 
	LEFT JOIN user u ON u.id= t.user_id
	WHERE c.id =  ${id} AND t.is_display = 0
  	AND t.type != 1
	AND t.source_type = 0
  </select>
  
  
   <select id="find" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseView" resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseView">
  	SELECT c.id, c.title, c.serial_status, c.status, c.create_time, c.validity,
		co.is_recommend as isRecommend, co.recommend_time as recommendTime,
		co.recommend_seq as recommendSeq, cl.classify_name as classifyName,
		co.price, count(cs.id) as studentNum, sum(cs.buy_price) as income,  
		co.img, u.username as createUser, co.id as courseInfoId
	FROM course c 
	LEFT JOIN course_info co ON  c.id = co.course_id
	LEFT JOIN classify cl ON c.classify_id = cl.id
	LEFT JOIN (
				SELECT us.learn_id,us.id 
				FROM user_study us 
				WHERE us.source_type=0 
				AND (us.status is null or us.status=0 or us.status=3)
			) cs ON c.id=cs.learn_id
	LEFT JOIN user u on u.id= c.user_id
	WHERE 1=1 
	<if test="title != null">
		<![CDATA[AND c.title LIKE  '%${title}%']]>  
	</if>
	<if test="classify_id !=null and classify_id != -1">
		AND c.classify_id = ${classify_id}
	</if>
	<if test="status != null and status != -1">
		AND c.status = ${status}
	</if>
	<if test="type !=null">
		AND c.type = ${type}
	</if>
	GROUP BY c.id 
	<if test="sort !=null and order != null">
    	ORDER BY c.${sort} ${order}
    </if>
    LIMIT ${page},${rows}
  </select>
  
  <select id="count" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseView" resultType="java.lang.Long">
  	SELECT COUNT(*)
  	FROM ( SELECT COUNT(*) FROM course c 
		LEFT JOIN course_info co ON  c.id = co.course_id
		LEFT JOIN classify cl ON c.classify_id = cl.id
		LEFT JOIN (
				SELECT us.learn_id,us.id 
				FROM user_study us 
				WHERE us.source_type=0 
				AND (us.status is null or us.status=0 or us.status=3)
			) cs ON c.id=cs.learn_id
		WHERE 1=1 
		<if test="title != null">
			<![CDATA[AND c.title LIKE  '%${title}%']]>  
		</if>
		<if test="classify_id !=null and classify_id != -1">
			AND c.classify_id = ${classify_id}
		</if>
		<if test="status != null and status != -1">
			AND c.status = ${status}
		</if>
		<if test="type != null">
			AND c.type = ${type}
		</if>
		 GROUP BY c.id 
	)	t
  </select>
    <select id="querySchoolCourse" resultType="cn.bnsr.edu_yun.frontstage.train.view.SchoolCenterView">
	SELECT c.id AS course_id,info.img AS course_picture, c.title AS 
	course_title,u.realname AS real_name,(
		SELECT COUNT(*) FROM user_study us WHERE us.source_type=0 AND (us.status is null or us.status=0 or us.status=3) AND c.id=us.learn_id
	) AS student_total,info.price AS price,c.status AS status FROM course c
	LEFT JOIN USER u ON u.id=c.user_id
	LEFT JOIN course_info info ON info.course_id=c.id
	LEFT JOIN user_info ui ON ui.user_id=u.id
	WHERE ui.school_id=${school_id}
  
	LIMIT ${startLine},${rows}
  </select>
  <select id="querySchoolCourseCount" resultType="java.lang.Integer">
    SELECT  COUNT(*)
  	FROM  course c
  	LEFT JOIN USER u ON u.id=c.user_id
  	LEFT JOIN user_info ui ON ui.user_id=u.id
   WHERE ui.school_id=${school_id}
  	</select>
  
    <select id="querySchoolTeacher" resultType="cn.bnsr.edu_yun.frontstage.train.view.SchoolCenterView">
	SELECT u.username,ui.sex,ui.ID_number,ui.course,g.grade_name,u.phone,u.status as u_status,
	ui.id as user_info_id
	 FROM user u
	LEFT JOIN user_info ui ON ui.user_id=u.id
	LEFT JOIN grade g ON g.id=ui.grade_id
	WHERE ui.school_id=${school_id} AND u.user_type=3
	LIMIT ${startLine},${rows}
  </select>
  <select id="querySchoolTeacherCount" resultType="java.lang.Integer">
    SELECT  COUNT(*)
  	FROM  user u
  	LEFT JOIN user_info ui ON ui.user_id=u.id
   WHERE ui.school_id=${school_id} AND u.user_type=3
  	</select>
  	
  	<select id="querySchoolResourse" resultType="cn.bnsr.edu_yun.frontstage.train.view.SchoolCenterView">
	SELECT c.id as course_id,f.name as file_name,u.username,f.create_time as upload_time,
	info.price AS price,f.status AS f_status FROM  
	course_hour h
	INNER JOIN course_file f ON h.course_file_id=f.id
	LEFT JOIN course c ON c.id=h.course_id
	LEFT JOIN USER u ON u.id=c.user_id
	LEFT JOIN course_info info ON info.course_id=c.id
	LEFT JOIN user_info ui ON ui.user_id=u.id
	WHERE ui.school_id=${school_id}
	LIMIT ${startLine},${rows}
  </select>
  <select id="querySchoolResourseCount" resultType="java.lang.Integer">
    SELECT  COUNT(*)
  	FROM course_hour h
	INNER JOIN course_file f ON h.course_file_id=f.id
  	LEFT JOIN course c ON c.id=h.course_id
  	LEFT JOIN USER u ON u.id=c.user_id
  	LEFT JOIN user_info ui ON ui.user_id=u.id
   WHERE ui.school_id=${school_id} 
  	</select>

	<sql id="courseCenterSql">
		 AND c.status = 1
	 	 <if test="price == 0 ">
		 	AND co.price = 0
		 </if>
	 	 <if test="type != null">
		 	AND c.type = ${type}
		 </if>
		 <if test="sonClassifyId != -1 and sonClassifyId != null">
			 AND c.classify_id = ${sonClassifyId}
		 </if>
		 <if test="classifyId !=-1 and classifyId != null">
			 AND c.classify_id in
				<foreach collection="classifyIds" item="classifyIds"  open="(" separator="," close=")">  
		       	 #{classifyIds}  
		    	</foreach> 
		 </if>
		 GROUP BY c.id
	</sql>
	
	<select id="queryCourseCenter" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseCenterView"
		resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseCenterView">
		SELECT t.*, count(tt.id) as appraiseNum 
		FROM (
			SELECT c.id, c.create_time, c.title, c.serial_status as serialStatus, u.username as userName,ui.school,
				co.price, count(cs.id) as studentNum, co.img, co.recommend_seq as recommendSeq
			FROM course c
			LEFT JOIN course_info co ON c.id = co.course_id
			LEFT JOIN user u ON u.id = c.user_id
			LEFT JOIN user_info ui ON u.id=ui.user_id
			LEFT JOIN (
				SELECT us.learn_id,us.id 
				FROM user_study us 
				WHERE us.source_type=0 
				AND (us.status is null or us.status=0  or us.status=3)
			) cs ON c.id=cs.learn_id
			<where>
				<include refid="courseCenterSql"></include>
			</where>
			ORDER BY
		    <if test="sortType == null || sortType == 1">
		    	c.create_time  
		    </if>
		    <if test="sortType == 2">
		   		studentNum  
		    </if>
		    <if test="sortType == 3">
		   		recommendSeq
		    </if>
		    DESC 
			LIMIT ${startLine},${rows}
		) t
		LEFT JOIN (SELECT ua.source_id,ua.id FROM user_appraise ua WHERE ua.source_type=0 ) tt ON tt.source_id = t.id
		GROUP BY t.id 	
		ORDER BY
	    <if test="sortType == null || sortType == 1">
	    	t.create_time  
	    </if>
	    <if test="sortType == 2">
	   		studentNum  
	    </if>
	    <if test="sortType == 3">
	   		recommendSeq
	    </if>
	    DESC 
  </select>
  
  <select id="queryTotalCourseCenter" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseCenterView" resultType="java.lang.Integer">
  	SELECT COUNT(*) 
  	FROM (SELECT COUNT(*) FROM course c 
			LEFT JOIN course_info co ON  c.id = co.course_id
			LEFT JOIN (
				SELECT us.learn_id,us.id 
				FROM user_study us 
				WHERE us.source_type=0 
				AND (us.status is null or us.status=0 or us.status=3)
			) cs ON c.id=cs.learn_id
			<where>
				<include refid="courseCenterSql"></include>
			</where>
		) t 
  </select>
  
  <select id="getByCourseIds"  resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseView">
  	SELECT c.id, c.title, c.hours
	FROM course c 
	WHERE c.id in
		<foreach collection="list" item="list"  open="(" separator="," close=")">  
        #{list}  
     </foreach> 
  </select>
  
  <select id="queryClassifyCourse" resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseView">
  	SELECT t.id, t.title, t.classify_id, t.user_id, ci.img, ci. PROFILE,
  		ci.target, u.username as createUser, count(cs.id) AS studentNum,
		tt.appraiseUserId, tt.appraiseUserName, tt.appraiseIcon,
		tt.score, tt.appraiseContent, tt.appraiseTime
	FROM (
			SELECT c.id, c.title, c.classify_id, c.user_id, c.course_info_id
			FROM course c
			WHERE c.classify_id IN (
					SELECT cla.id 
					FROM classify cla
					WHERE cla.parent_id = 54
					AND cla.type = 1
				)
			AND c. STATUS = 1
			ORDER BY c.create_time DESC
		) t
	LEFT JOIN course_info ci ON t.course_info_id = ci.id
	LEFT JOIN USER u ON u.id = t.user_id
	LEFT JOIN (
		SELECT  us.learn_id, us.id
		FROM user_study us
		WHERE us.source_type = 0
		AND ( us. STATUS IS NULL OR us. STATUS = 0 )
	) cs ON t.id = cs.learn_id
	LEFT JOIN (
		SELECT ua.user_id AS appraiseUserId, uu.username AS appraiseUserName,
			uu.icon AS appraiseIcon, ua.score, ua.source_id,ua.id,
			ua.appraise_content as appraiseContent, ua.appraise_time as appraiseTime
		FROM user_appraise ua
		LEFT JOIN USER uu ON uu.id = ua.user_id
		WHERE ua.source_type = 0
	) tt ON tt.source_id = t.id
	GROUP BY t.classify_id
  </select>
  
  <sql id="belongsSql">
  	AND c. STATUS = 1
	AND c.type = 0
	AND c.id in(
		SELECT cr.source_id
		FROM class_relation cr
		WHERE cr.source_type = 0
		AND cr.class_id IN (
			SELECT cb.class_id
			FROM class_belongs cb
			WHERE cb.source_type = ${sourceType}
				AND cb.source_id = ${id}
				AND cb.`status` = 0
				AND cb.type=0
				<if test="sonClassifyId != -1 and sonClassifyId != null">
					AND cb.classify_relation_id = ${sonClassifyId}
				</if>
				<if test="classifyId !=-1 and classifyId != null">
					AND cb.classify_relation_id in
						<foreach collection="classifyIds" item="classifyIds"  open="(" separator="," close=")">  
				       	 #{classifyIds}  
				    	</foreach> 
				</if>
		)
		GROUP BY cr.source_id
	)
	GROUP BY c.id
  </sql>
  
  <select id="queryCommunityCourse" resultType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView">
  	SELECT c.id,u.username,c.title AS name,count(cs.id) AS studentNum,co.img,co.recommend_seq as recommendSeq
	FROM course c
	LEFT JOIN course_info co ON c.id = co.course_id
	LEFT JOIN user u ON u.id = c.user_id
	LEFT JOIN (
		SELECT us.learn_id,us.id
		FROM user_study us
		WHERE us.source_type = 0
		AND ( us. STATUS IS NULL OR us. STATUS = 0 OR us. STATUS = 3)
	) cs ON c.id = cs.learn_id
	LEFT JOIN recommended r ON r.source_id=c.id AND r.source_type=3 AND DATE_SUB(r.valid_time,INTERVAL -1 DAY)>NOW()
	<where>
		<include refid="belongsSql" />
	</where>
	ORDER BY  
		<if test="sortType == 0">
	    	c.create_time  
	    </if>
	    <if test="sortType == 1">
	   		studentNum  
	    </if>
	    <if test="sortType == 2">
	   		CASE WHEN r.seq IS NULL THEN 1 ELSE 0 END ,r.seq     
	    </if>
	     <if test="sortType != 2">
	   		  DESC 
	    </if>
	  
	<if test="rows!=0">
		LIMIT ${startLine},${rows}
	</if>
  </select>
  
  <select id="queryMyCommunityCourse" resultType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView">
  	SELECT c.id,u.username,c.title AS name,count(cs.id) AS studentNum,co.img,co.recommend_seq as recommendSeq,
  	(SELECT COUNT(*)  FROM user_class_hour WHERE course_id=c.id AND user_id=${userId} AND class_id = cs.source_id) as allNum,
  	(SELECT COUNT(*)  FROM user_class_hour WHERE is_studyed=1 AND course_id=c.id AND user_id=${userId} AND class_id = cs.source_id) as alreadyNum
	FROM course c
	LEFT JOIN course_info co ON c.id = co.course_id
	LEFT JOIN user u ON u.id = c.user_id
	INNER JOIN (
		SELECT us.learn_id,us.id,us.source_id
		FROM user_study us
		WHERE us.source_type = 0
		AND ( us. STATUS IS NULL OR us. STATUS = 0 OR us. STATUS = 3)
		<if test="is_studyed!=null">
			AND us.is_studyed=${is_studyed}
		</if>
	) cs ON c.id = cs.learn_id
	<where>
		<include refid="belongsSql" />
	</where>
	ORDER BY  
		<if test="sortType == 0">
	    	c.create_time  
	    </if>
	    <if test="sortType == 1">
	   		studentNum  
	    </if>
	    <if test="sortType == 2">
	   		recommendSeq
	    </if>
	    DESC 
	<if test="rows!=0">
		LIMIT ${startLine},${rows}
	</if>
  </select>
  
  <select id="queryTotalCommunityCourse" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView" resultType="java.lang.Integer">
  	SELECT COUNT(*) FROM (
	 	SELECT c.id,u.username,c.title AS name,count(cs.id) AS studentNum,co.img,co.recommend_seq as recommendSeq
	 	FROM course c
		LEFT JOIN course_info co ON c.id = co.course_id
		LEFT JOIN user u ON u.id = c.user_id
		LEFT JOIN (
			SELECT us.learn_id,us.id
			FROM user_study us
			WHERE us.source_type = 0
			AND ( us. STATUS IS NULL OR us. STATUS = 0 OR us. STATUS = 3)
			<if test="is_studyed!=null">
				AND us.is_studyed=${is_studyed}
			</if>
		) cs ON c.id = cs.learn_id
		<where>
			<include refid="belongsSql" />
		</where>
	 ) tt 
  </select>
  
  <select id="queryTotalMyCommunityCourse" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView" resultType="java.lang.Integer">
  	SELECT COUNT(*) FROM (
	 	SELECT c.id,u.username,c.title AS name,count(cs.id) AS studentNum,co.img,co.recommend_seq as recommendSeq
	 	FROM course c
		LEFT JOIN course_info co ON c.id = co.course_id
		LEFT JOIN user u ON u.id = c.user_id
		INNER JOIN (
			SELECT us.learn_id,us.id
			FROM user_study us
			WHERE us.source_type = 0
			AND ( us. STATUS IS NULL OR us. STATUS = 0 OR us. STATUS = 3)
			<if test="is_studyed!=null">
				AND us.is_studyed=${is_studyed}
			</if>
		) cs ON c.id = cs.learn_id
		<where>
			<include refid="belongsSql" />
		</where>
	 ) tt 
  </select>
  <select id="queryMyJoinCourse" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseView" resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseView">
		SELECT c.id, c.title, c.status, co.price,c.room_id,u.username as createUser,
		count(cs.id) as studentNum, co.img, c.hours, u.username AS 
		speaker,count(cr.id) AS open_class_num
		FROM course c
		LEFT JOIN course_info co ON c.id = co.course_id
		LEFT JOIN user u ON u.id = c.user_id
		LEFT JOIN user_study us on c.id = us.learn_id and us.source_type=0
		LEFT JOIN (
		SELECT us.learn_id,us.id
		FROM user_study us
		WHERE us.source_type=0
		AND (us.status is null or us.status=0 or us.status=3)
		) cs ON c.id=cs.learn_id
		INNER JOIN class_relation cr
		ON cr.source_id=c.id
		INNER JOIN class cla
		ON cr.class_id=cla.id AND cla.type!=2
		WHERE us.user_id=${userId}
		and c.type=${type}
		<if test="status == 1">
			AND c.status = 1
		</if>
		<if test="title != null">
		<![CDATA[AND c.title LIKE  '%${title}%']]>
		</if>
		<if test="list!=null">
			AND c.id not in
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY c.id
		ORDER BY c.create_time desc
		LIMIT ${startLine},${rows}
	</select>
	<select id="queryMyJoinCourseCount" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseView" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM course c
		LEFT JOIN user_study us on c.id = us.learn_id and us.source_type=0
		WHERE us.user_id=${userId}
		and c.type=${type}
		<if test="status == 1">
			AND c.status = 1
		</if>
		<if test="title != null">
		<![CDATA[AND c.title LIKE  '%${title}%']]>
		</if>
		<if test="list!=null">
			AND c.id not in
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
</select>
</mapper>
