package cn.bnsr.edu_yun.frontstage.resource.controller;

import java.io.File;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import cn.bnsr.edu_yun.frontstage.base.po.BookCat;
import cn.bnsr.edu_yun.frontstage.base.po.PubverList;
import cn.bnsr.edu_yun.frontstage.base.po.SubjectList;
import cn.bnsr.edu_yun.frontstage.base.po.User;
import cn.bnsr.edu_yun.frontstage.base.po.User_attent;
import cn.bnsr.edu_yun.frontstage.base.service.BookCatService;
import cn.bnsr.edu_yun.frontstage.base.service.PubverListService;
import cn.bnsr.edu_yun.frontstage.base.service.SubjectListService;
import cn.bnsr.edu_yun.frontstage.base.service.UserAttentService;
import cn.bnsr.edu_yun.frontstage.base.service.UserFileService;
import cn.bnsr.edu_yun.frontstage.resource.po.File_base;
import cn.bnsr.edu_yun.frontstage.resource.po.File_comment;
import cn.bnsr.edu_yun.frontstage.resource.po.File_property;
import cn.bnsr.edu_yun.frontstage.resource.po.User_file;
import cn.bnsr.edu_yun.frontstage.resource.service.FileCommentService;
import cn.bnsr.edu_yun.frontstage.resource.service.FilePropertyService;
import cn.bnsr.edu_yun.frontstage.resource.service.File_baseService;
import cn.bnsr.edu_yun.util.ConfigInfo;
import cn.bnsr.edu_yun.util.ConvertSwf;
import cn.bnsr.edu_yun.util.ResponseUtil;

@Controller
@RequestMapping("/read")
public class ReadFileController {
	private final Logger log = LoggerFactory.getLogger(ReadFileController.class);

	@Autowired
	private File_baseService fileBaseService;
	@Autowired
	private UserAttentService userAttentService;
	@Autowired
	private UserFileService userFileService;
	@Autowired
	private FilePropertyService filePropertyService;
	@Autowired
	private FileCommentService fileCommentService;
	@Autowired
	private BookCatService bookCatService;
	@Autowired
	private PubverListService pubverListService;
	@Autowired
	private SubjectListService subjectListService;
	@RequestMapping("/playFast")
	public String playFast(HttpServletRequest request,HttpServletResponse response,String fileName) throws Exception{
		System.out.println(fileName);
		JSONObject result=new JSONObject();
	    result.put("name",fileName);
		ResponseUtil.write(response, result);
		return null;
		
	}
	
	@RequestMapping("/toRead")
	public ModelAndView toRead(HttpServletRequest request,HttpServletResponse response) throws URISyntaxException, Exception{
		ModelAndView modelAndView=new ModelAndView();
		
	
		
		long id   =	Long.parseLong(request.getParameter("id"));
		System.out.println(id);
		File_base fileBase=fileBaseService.selectById(id);
		
		
		String folder=ConfigInfo.getString("stream_file_repository");
		String oldName=fileBase.getPath();
		String a1=oldName.substring(oldName.lastIndexOf("/"));
		System.out.println(a1);
		String a2=a1.substring(0,a1.lastIndexOf("."));
		System.out.println(a2);
		String newName=folder+a2+".pdf";
		int code = (int)((Math.random() * 9 + 1) * 100000);
	    String uploadPath = request.getSession().getServletContext().getRealPath("/read");
		String swfName="/file"+code+".swf";
		String fileName="file"+code+".swf";
		ConvertSwf c = new ConvertSwf();
		 c.convertPdf2Swf(newName,uploadPath+swfName);
		  modelAndView.addObject("fileName", fileName);
		String classification_id=fileBase.getFile_catalog().getClassfication_id();
		List<String> classifications=new ArrayList<String>();
		if(classification_id!=null){
			//Classification_entry entry = new Classification_entry();
		
//List<BookCat>	books	=   bookCatService.queryBookCat(classification_id, "-1");
//System.out.println(books.get(0));
		  BookCat book= bookCatService.selectById(classification_id);
		  PubverList  pubver	  = pubverListService.selectByPubverListId(book.getVersionId());
		  System.out.println(book.getBookCatelogName());
		  System.out.println(pubver.getVersionName());
		 String pubId=pubver.getId();
		 
		 SubjectList subject1=subjectListService.selectById(pubId.substring(0, 2));
		 SubjectList subject2=subjectListService.selectById(pubId.substring(0, 5));
	
		 classifications.add(subject1.getSubjectName());
		 classifications.add(subject2.getSubjectName());
		 classifications.add(pubver.getVersionName());
		 if(!book.getParentId().equals("-1")){
			  BookCat book1= bookCatService.selectBybooId(book.getParentId());
			  if(!book1.getParentId().equals("-1")){
				  BookCat book2= bookCatService.selectBybooId(book1.getParentId());
				  classifications.add(book2.getBookCatelogName());
			  }
			  classifications.add(book1.getBookCatelogName());
		 }
		  classifications.add(book.getBookCatelogName());
			classifications.add(fileBase.getFile_catalog().getTitle());
			  modelAndView.addObject("classifications", classifications);
			
			
		}	

		HttpSession session=request.getSession();
		User user=(User) session.getAttribute("currentUser");
		modelAndView.addObject("user", user);
		if(user!=null){
			long user_id=user.getId();
			long attent_user_id=fileBase.getUpload_user();
			long file_id=fileBase.getId();
	User_attent userAttent	=	userAttentService.selectattent(user_id, attent_user_id);
	modelAndView.addObject("attented",userAttent!=null);
	User_file userFile=userFileService.selectFile(user_id, file_id);
	modelAndView.addObject("userfile",userFile!=null);
		}
		List<File_base>file_baseList=fileBaseService.selectByUserId(fileBase.getUpload_user(),0,4);
		modelAndView.addObject("file_baseList", file_baseList);
	  //增加点击数
	    System.out.println(fileBase.getFile_property().getClick_times());
	    File_property property=new File_property();
	    property.setId(fileBase.getProperty_id());
	    property.setClick_times(fileBase.getFile_property().getClick_times()+1);
	    filePropertyService.update(property);
	   fileBase.getFile_property().setClick_times(fileBase.getFile_property().getClick_times()+1);
	 List<File_comment> commentList= fileCommentService.selectCommentByFileId(id);
	
	    modelAndView.addObject("fileBase",fileBase);
	    modelAndView.addObject("commentList",commentList);
		modelAndView.setViewName("frontstage/resource/seedoc");
		return modelAndView;
	}
	@RequestMapping("/fileDelete")
	public void fileDelete(HttpServletRequest request,HttpServletResponse response) throws Exception{
	    String filePath = request.getSession().getServletContext().getRealPath("/read");
		String fileName   =	request.getParameter("fileName");
		if(!fileName.equals("")){
			int index = fileName.indexOf(".");  
			String    fileNameOnly = fileName.substring(0, index);  
			File file_self=new File(filePath+"/"+fileName);
			File file_pdf=new File(filePath+"/"+fileNameOnly+".pdf");
			File file_odt=new File(filePath+"/"+fileNameOnly+".odt");
			File file_swf=new File(filePath+"/"+fileNameOnly+".swf");
			if(file_self.exists()){
				log.info("file_self删除",file_self.delete());
			}
			if(file_self.exists()){
				log.info("file_pdf删除",file_pdf.delete());
			}
			if(file_self.exists()){
				log.info("file_swf删除",file_swf.delete());
			}
			if(file_self.exists()){
				log.info("file_odt删除",file_odt.delete());
			}
		}
	}

}
