<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>rms</display-name>

	<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/classes/spring/applicationContext-*.xml,
	<!-- 		/WEB-INF/classes/applicationContext-security.xml -->
		</param-value>
	</context-param>
	
	<!-- springmvc前端控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器等等） 如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-serlvet.xml（springmvc-servlet.xml） -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
	</servlet>

<session-config>  
    <session-timeout>1</session-timeout>  
</session-config> 
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- 第一种：*.action，访问以.action结尾 由DispatcherServlet进行解析 第二种：/，所以访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析 
			使用此种方式可以实现 RESTful风格的url 第三种：/*，这样配置不对，使用这种配置，最终要转发到一个jsp页面时， 仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。 -->
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>

	<!-- stream上传组件Servlet  -->
 	<servlet>
		<servlet-name>TokenServlet</servlet-name>
		<servlet-class>cn.bnsr.edu_yun.servlet.TokenServlet</servlet-class>
		<init-param>
			<param-name>CROSS</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>SERVER</param-name>
			<param-value>http://localhost:8080</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>TokenServlet</servlet-name>
		<url-pattern>/tk</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>StreamServlet</servlet-name>
		<servlet-class>cn.bnsr.edu_yun.servlet.StreamServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>StreamServlet</servlet-name>
		<url-pattern>/upload</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>FormDataServlet</servlet-name>
		<servlet-class>cn.bnsr.edu_yun.servlet.FormDataServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>FormDataServlet</servlet-name>
		<url-pattern>/fd</url-pattern>
	</servlet-mapping>
  
	<!-- post乱码过虑器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	 <!-- 配置Spring Security -->  
	 <!-- 配置过滤器 -->
<!--        <filter>  
            <filter-name>springSecurityFilterChain</filter-name>  
            <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
       </filter>  
       <filter-mapping>  
           <filter-name>springSecurityFilterChain</filter-name>  
           <url-pattern>/*</url-pattern>
       </filter-mapping> -->
        
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- 出错页面定义 -->  
	<error-page> 
		<exception-type>java.lang.NullException</exception-type> 
		<location>/error.jsp</location> 
	</error-page>
	<error-page>  
	    <exception-type>java.lang.Exception</exception-type>  
	    <location>/frontstage/error/404.jsp</location>  
	</error-page> 
	<error-page>
	    <error-code>404</error-code>
	    <location>/frontstage/error/404.jsp</location>
	</error-page>
    <error-page>
    	<error-code>500</error-code>
        <location>/frontstage/error/404.jsp</location>
	</error-page>
</web-app>