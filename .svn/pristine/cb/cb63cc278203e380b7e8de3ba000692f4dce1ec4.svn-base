<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bnsr.edu_yun.frontstage.train.mapper.UserClassHourMapper" >
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 09 16:14:28 CST 2017.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="course_hour_id" property="course_hour_id" jdbcType="BIGINT" />
    <result column="course_id" property="course_id" jdbcType="BIGINT" />
    <result column="is_studyed" property="is_studyed" jdbcType="INTEGER" />
    <result column="class_id" property="class_id" jdbcType="BIGINT" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="studyed_time" property="studyed_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 09 16:14:28 CST 2017.
    -->
    id, user_id, course_hour_id, course_id, is_studyed, class_id, create_time, studyed_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 09 16:14:28 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_class_hour
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 09 16:14:28 CST 2017.
    -->
    delete from user_class_hour
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 09 16:14:28 CST 2017.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_class_hour (user_id, course_hour_id, course_id, 
      is_studyed, class_id, create_time, 
      studyed_time)
    values (#{user_id,jdbcType=BIGINT}, #{course_hour_id,jdbcType=BIGINT}, #{course_id,jdbcType=BIGINT}, 
      #{is_studyed,jdbcType=INTEGER}, #{class_id,jdbcType=BIGINT}, #{create_time,jdbcType=TIMESTAMP}, 
      #{studyed_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 09 16:14:28 CST 2017.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_class_hour
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="course_hour_id != null" >
        course_hour_id,
      </if>
      <if test="course_id != null" >
        course_id,
      </if>
      <if test="is_studyed != null" >
        is_studyed,
      </if>
      <if test="class_id != null" >
        class_id,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="studyed_time != null" >
        studyed_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="course_hour_id != null" >
        #{course_hour_id,jdbcType=BIGINT},
      </if>
      <if test="course_id != null" >
        #{course_id,jdbcType=BIGINT},
      </if>
      <if test="is_studyed != null" >
        #{is_studyed,jdbcType=INTEGER},
      </if>
      <if test="class_id != null" >
        #{class_id,jdbcType=BIGINT},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="studyed_time != null" >
        #{studyed_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 09 16:14:28 CST 2017.
    -->
    update user_class_hour
    <set >
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="course_hour_id != null" >
        course_hour_id = #{course_hour_id,jdbcType=BIGINT},
      </if>
      <if test="course_id != null" >
        course_id = #{course_id,jdbcType=BIGINT},
      </if>
      <if test="is_studyed != null" >
        is_studyed = #{is_studyed,jdbcType=INTEGER},
      </if>
      <if test="class_id != null" >
        class_id = #{class_id,jdbcType=BIGINT},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="studyed_time != null" >
        studyed_time = #{studyed_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 09 16:14:28 CST 2017.
    -->
    update user_class_hour
    set user_id = #{user_id,jdbcType=BIGINT},
      course_hour_id = #{course_hour_id,jdbcType=BIGINT},
      course_id = #{course_id,jdbcType=BIGINT},
      is_studyed = #{is_studyed,jdbcType=INTEGER},
      class_id = #{class_id,jdbcType=BIGINT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      studyed_time = #{studyed_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
 
   <select id="selectByHourId" resultMap="BaseResultMap" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour">
    SELECT 
    *
    FROM user_class_hour
    WHERE course_hour_id = #{course_hour_id,jdbcType=BIGINT}
    AND user_id = #{user_id,jdbcType=BIGINT}
    AND class_id = #{class_id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByNextStudy" resultMap="BaseResultMap" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour">
   SELECT 
   *
    FROM user_class_hour
    WHERE is_studyed != 1 
    AND course_id=#{course_id,jdbcType=BIGINT}
    AND user_id=#{user_id,jdbcType=BIGINT}
    AND class_id = #{class_id,jdbcType=BIGINT}
    ORDER BY course_hour_id 
 	LIMIT 0,1
  </select>
  
  <select id="selectCountByCourseIdAndUserId"  resultType="java.lang.Integer" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour">
    SELECT COUNT(*)  FROM user_class_hour
    WHERE  course_id=#{course_id,jdbcType=BIGINT}
    AND user_id=#{user_id,jdbcType=BIGINT}
    AND class_id = #{class_id,jdbcType=BIGINT}
  </select>
  
   <select id="selectCountByCourseIdAndUserIdStudy"  resultType="java.lang.Integer" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour">
    SELECT COUNT(*)  FROM user_class_hour
    WHERE  is_studyed=1
    AND user_id=#{user_id,jdbcType=BIGINT} 
    AND course_id=#{course_id,jdbcType=BIGINT}
    AND class_id = #{class_id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByUpAndDown" resultMap="BaseResultMap">
   SELECT * FROM user_class_hour
   WHERE course_id=#{course_id,jdbcType=BIGINT}
   AND user_id=#{user_id,jdbcType=BIGINT}
   AND class_id = #{class_id,jdbcType=BIGINT}
   AND
    <if test="type == 1">
        course_hour_id > #{course_hour_id,jdbcType=BIGINT}
    </if>
    <if test="type == 0">
      #{course_hour_id,jdbcType=BIGINT}>course_hour_id
    </if>
    ORDER BY course_hour_id  <if test="type == 0">desc</if>
 	LIMIT 1
  </select>
  
  <select id="countCompleteCourseHour" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView" resultType="java.lang.Integer">
	SELECT COUNT(uch.id) 
	FROM user_study us 
	<if test="source_type == 1">
	LEFT JOIN user_train_class utc ON us.learn_id=utc.source_id AND us.user_id=utc.user_id 
    LEFT JOIN user_class_hour uch ON utc.class_id=uch.class_id AND utc.course_id=uch.course_id AND utc.user_id=uch.user_id
	</if>
    <if test="source_type == 0">
    LEFT JOIN user_class_hour uch ON us.source_id=uch.class_id AND us.user_id=uch.user_id AND us.learn_id=uch.course_id
    </if>
    LEFT JOIN course_hour ch ON uch.course_id=ch.course_id AND uch.course_hour_id=ch.id
    WHERE us.status=0 AND ch.attribute_type=2 
    AND us.source_id=#{id,jdbcType=BIGINT} 
    AND us.source_type=#{source_type,jdbcType=INTEGER}
	<if test="open_time != null">
        AND uch.studyed_time BETWEEN #{open_time,jdbcType=TIMESTAMP} AND date_add(#{open_time,jdbcType=TIMESTAMP}, INTERVAL 1 day)
    </if>
  </select>
  
  <select id="countIsNotStudy" parameterType="cn.bnsr.edu_yun.frontstage.train.view.UserClassHourView" resultType="java.lang.Integer">
  	SELECT COUNT(*) from user_class_hour uc 
	WHERE  uc.user_id = #{user_id,jdbcType=BIGINT}
	AND uc.course_id = #{course_id,jdbcType=BIGINT}
	AND uc.is_studyed=#{is_studyed,jdbcType=INTEGER}
	AND uc.class_id=#{class_id,jdbcType=BIGINT}
  </select>
  
  <select id="queryIsNotStudy"  parameterType="cn.bnsr.edu_yun.frontstage.train.view.UserClassHourView" resultType="java.lang.Integer">
  	SELECT COUNT(*) from user_class_hour uc 
	WHERE  uc.user_id = #{user_id,jdbcType=BIGINT}
	AND uc.course_id = #{course_id,jdbcType=BIGINT}
	AND uc.class_id=#{class_id,jdbcType=INTEGER}
  </select>
  
   <select id="queryData"  parameterType="cn.bnsr.edu_yun.frontstage.train.view.UserClassHourView" resultType="java.lang.Integer">
 SELECT COUNT(DISTINCT u.user_id) FROM user_class_hour u
LEFT JOIN course_hour c ON c.id=u.course_hour_id
WHERE 1=1 
<if test="course_id != null">
and
u.course_id=${course_id}
</if>
<if test="course_hour_id != null">
and
u.course_hour_id=${course_hour_id}
</if>
<if test="class_id != null">
and
u.class_id=${class_id}
</if>
<if test="attribute_type != null">
 AND c.attribute_type=${attribute_type}
</if>
<if test="is_studyed != null">
AND u.is_studyed=${is_studyed}
</if>
<if test="is_studyed == null">
AND u.is_studyed!=0
</if>
</select>
  <select id="queryUnfinish"  parameterType="cn.bnsr.edu_yun.frontstage.train.view.CourseHourView" resultType="cn.bnsr.edu_yun.frontstage.base.po.User">
  SELECT u.id,u.username FROM user_class_hour ucl
LEFT JOIN user_study us ON us.user_id=ucl.user_id 
LEFT JOIN USER u ON u.id=us.user_id
 WHERE ucl.course_hour_id=${id} AND ucl.class_id=${class_id}
  <if test="attribute_type != 3">
   AND ucl.is_studyed=0
  </if>
<if test="attribute_type == 3">
AND
(ucl.is_studyed=0
 OR ucl.is_studyed=2)
</if>
AND us.status=0 GROUP BY u.id
  
  </select> 
  
  <select id="queryCourseStudyed" resultType="cn.bnsr.edu_yun.frontstage.train.view.UserClassHourView">
  	SELECT * FROM user_class_hour uc  
  	WHERE uc.user_id = #{userId} 
	AND uc.course_id  = #{courseId} 
	AND uc.class_id = #{classId} 
	AND uc.is_studyed != 1
  </select>
  
   <select id="queryAll" resultType="cn.bnsr.edu_yun.frontstage.train.po.UserClassHour">
  	SELECT uc.id,uc.is_studyed FROM user_class_hour uc  
  	WHERE uc.class_id = #{classId} 
  </select>
  
  <!-- 查总分，获得证书 -->
 <select id="queryUserScore" resultType="cn.bnsr.edu_yun.frontstage.train.view.UserTotalScoreView"   parameterType="cn.bnsr.edu_yun.frontstage.train.view.UserClassHourView">
 SELECT 
 SUM(CASE WHEN uch.is_studyed=1 AND ch.attribute_type!=3 THEN 
 (SELECT e.exam_score FROM exam e WHERE e.user_id=uch.user_id AND e.class_id=uch.class_id AND e.test_paper_id=t.id ORDER BY e.exam_score DESC LIMIT 1)/t.total_score*ces.ratio 
 WHEN uch.is_studyed=1 AND ch.attribute_type=3 THEN ces.ratio ELSE 0 END) AS score
  FROM user_class_hour uch
  LEFT JOIN course_hour ch ON ch.id=uch.course_hour_id
  LEFT JOIN test_paper t ON t.course_hour_id=ch.id
  LEFT JOIN course_exam_standard ces ON ces.source_id=ch.id
 
  WHERE uch.user_id=${user_id} AND uch.class_id=${class_id} AND uch.course_id=${course_id}
 GROUP BY uch.class_id
  </select>
</mapper>