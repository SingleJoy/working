package cn.bnsr.edu_yun.frontstage.train.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import cn.bnsr.edu_yun.frontstage.base.po.User;
import cn.bnsr.edu_yun.frontstage.train.po.UserStudy;
import cn.bnsr.edu_yun.frontstage.train.po.UserTrainClass;
import cn.bnsr.edu_yun.frontstage.train.view.CourseView;
import cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView;
import cn.bnsr.edu_yun.frontstage.train.view.UserStudyView;
import cn.bnsr.edu_yun.frontstage.train.view.UserTrainClassView;

public interface UserTrainClassMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_train_class
	 * 
	 * @mbggenerated Thu Mar 09 15:48:42 CST 2017
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_train_class
	 * 
	 * @mbggenerated Thu Mar 09 15:48:42 CST 2017
	 */
	int insert(UserTrainClass record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_train_class
	 * 
	 * @mbggenerated Thu Mar 09 15:48:42 CST 2017
	 */
	int insertSelective(UserTrainClass record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_train_class
	 * 
	 * @mbggenerated Thu Mar 09 15:48:42 CST 2017
	 */
	UserTrainClass selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_train_class
	 * 
	 * @mbggenerated Thu Mar 09 15:48:42 CST 2017
	 */
	int updateByPrimaryKeySelective(UserTrainClass record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_train_class
	 * 
	 * @mbggenerated Thu Mar 09 15:48:42 CST 2017
	 */
	int updateByPrimaryKey(UserTrainClass record);

	List<UserStudy> searchCourseClassId(UserStudyView userStudyView);

	List<CourseView> queryTrainCourse(@Param("sourceId") Long sourceId, @Param("userId") Long userId,@Param("classId")Long classId, @Param("list") List<String> list);

	List<TrainCourseView> searchIsStudy(TrainCourseView tcv);

	List<UserStudyView> searchTrainClassStudent(@Param("classId") Long classId, @Param("trainType") int trainType);

	List<UserTrainClass> queryUserTrainClass(UserTrainClass userTrainClass);

	int selectCountByCourseIdAndUserId(UserTrainClass userTrainClass);

	int selectCountByCourseIdAndUserIdStudy(UserTrainClass userTrainClass);
	
	List<UserTrainClass> queryUserTrainCourse(UserTrainClass userTrainClass);
	
	List<UserTrainClassView> queryUserTrainCourseCount(UserTrainClassView userTrainClassView);

	List<User> queryUnfinish(UserTrainClass userTrainClass);
	
	List<UserTrainClassView> queryPerTrainFinCourseCount(UserTrainClassView userTrainClassView);
	
	UserTrainClassView querystudyedPhaseCourseHour(UserTrainClassView userTrainClassView);
}