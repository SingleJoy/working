package cn.bnsr.edu_yun.frontstage.train.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import cn.bnsr.edu_yun.frontstage.train.po.TopicQuestion;
import cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView;
import cn.bnsr.edu_yun.frontstage.train.view.TopicQuestionView;

public interface TopicQuestionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_question
     *
     * @mbggenerated Wed Nov 02 13:57:07 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_question
     *
     * @mbggenerated Wed Nov 02 13:57:07 CST 2016
     */
    int insert(TopicQuestion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_question
     *
     * @mbggenerated Wed Nov 02 13:57:07 CST 2016
     */
    int insertSelective(TopicQuestion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_question
     *
     * @mbggenerated Wed Nov 02 13:57:07 CST 2016
     */
    TopicQuestion selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_question
     *
     * @mbggenerated Wed Nov 02 13:57:07 CST 2016
     */
    int updateByPrimaryKeySelective(TopicQuestion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_question
     *
     * @mbggenerated Wed Nov 02 13:57:07 CST 2016
     */
    int updateByPrimaryKeyWithBLOBs(TopicQuestion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_question
     *
     * @mbggenerated Wed Nov 02 13:57:07 CST 2016
     */
    int updateByPrimaryKey(TopicQuestion record);
    
    int selectCountByCourseId(@Param("source_id")long source_id,@Param("type")int type,@Param("elite")int elite);
    
    List<TopicQuestion>  selectByClassId(@Param("class_id")long class_id,@Param("elite")int elite, @Param("sort")String sort,@Param("start")long start,@Param("pageSize")long pageSize);
    
    
    int selectCountByClassId(@Param("class_id")long class_id,@Param("elite")int elite);
    
    List<TopicQuestion>  selectByCourseId(@Param("source_id")long source_id,@Param("type")int type,@Param("elite")int elite, @Param("sort")String sort,@Param("start")long start,@Param("pageSize")long pageSize);
    List<TopicQuestion>  selectByCourseHourId(@Param("course_hour_id")long course_hour_id,@Param("sort")String sort,@Param("start")long start,@Param("pageSize")long pageSize);

	List<TopicQuestionView> queryStudentsAsk(TopicQuestionView topicQuestionView);

	int queryTotalQuestion(TopicQuestionView topicQuestionView);
	
	int countUserQuestion(TopicQuestion record);

	
	 //后台
    List<TopicQuestionView> search(TopicQuestionView topicQuestionView);

	
	List<TopicQuestionView> queryUserStudentsAsk(TopicQuestionView topicQuestionView);

	int queryUserTotalQuestion(TopicQuestionView topicQuestionView);

    
    Long count(TopicQuestionView topicQuestionView);
    
    TopicQuestionView getById(Long id);
    
    List<TopicQuestionView> queryTopic(TopicQuestionView topicQuestionView);
    List<TopicQuestionView>queryTopicCommunity(CommunityCenterView communityCenterView);
    int queryTopicCommunityCount(CommunityCenterView communityCenterView);
    int queryTopicCount(TopicQuestionView topicQuestionView);
}