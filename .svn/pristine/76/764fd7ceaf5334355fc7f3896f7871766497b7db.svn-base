package cn.bnsr.edu_yun.frontstage.base.mapper;

import java.util.List;

import cn.bnsr.edu_yun.backstage.base.view.UserStatsView;
import cn.bnsr.edu_yun.frontstage.base.po.UserInfo;
import cn.bnsr.edu_yun.frontstage.base.view.CertificateView;
import cn.bnsr.edu_yun.frontstage.train.view.TeacherView;



public interface UserInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbggenerated Wed Dec 14 14:03:40 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbggenerated Wed Dec 14 14:03:40 CST 2016
     */
    int insert(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbggenerated Wed Dec 14 14:03:40 CST 2016
     */
    int insertSelective(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbggenerated Wed Dec 14 14:03:40 CST 2016
     */
    UserInfo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbggenerated Wed Dec 14 14:03:40 CST 2016
     */
    int updateByPrimaryKeySelective(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbggenerated Wed Dec 14 14:03:40 CST 2016
     */
    int updateByPrimaryKeyWithBLOBs(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbggenerated Wed Dec 14 14:03:40 CST 2016
     */
    int updateByPrimaryKey(UserInfo record);

	UserInfo getByUserId(Long userId);
	
	List<UserInfo> selectByBack(CertificateView certificateView);

	int selectCountByBack(CertificateView certificateView);
	
	List<TeacherView> findTeacher(TeacherView teacherView);
	
	Integer countTeacher(TeacherView teacherView);
	
	List<String> findTitles(Long userId);
	
	void updateDefaultSet(UserInfo userInfo);
	
	List<UserStatsView> ageDistribution(UserStatsView condition);
	
	Integer querySexNum(UserStatsView condition);
	
	List<UserStatsView> queryAgeByStu(UserStatsView condition);
}