package cn.bnsr.edu_yun.frontstage.train.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import cn.bnsr.edu_yun.backstage.train.view.CourseNoteView;
import cn.bnsr.edu_yun.frontstage.base.view.NoteView;
import cn.bnsr.edu_yun.frontstage.train.po.CourseNote;
import cn.bnsr.edu_yun.frontstage.train.view.TrainDetailView;

public interface CourseNoteMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_note
     *
     * @mbggenerated Wed Nov 02 13:55:51 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_note
     *
     * @mbggenerated Wed Nov 02 13:55:51 CST 2016
     */
    int insert(CourseNote record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_note
     *
     * @mbggenerated Wed Nov 02 13:55:51 CST 2016
     */
    int insertSelective(CourseNote record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_note
     *
     * @mbggenerated Wed Nov 02 13:55:51 CST 2016
     */
    CourseNote selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_note
     *
     * @mbggenerated Wed Nov 02 13:55:51 CST 2016
     */
    int updateByPrimaryKeySelective(CourseNote record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_note
     *
     * @mbggenerated Wed Nov 02 13:55:51 CST 2016
     */
    int updateByPrimaryKeyWithBLOBs(CourseNote record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_note
     *
     * @mbggenerated Wed Nov 02 13:55:51 CST 2016
     */
    int updateByPrimaryKey(CourseNote record);
    
    int selectCountByCourseId(@Param("course_id")long course_id,@Param("course_hour_id")String course_hour_id);
    
    List<CourseNote>  selectByCourseId(@Param("course_id")long course_id,@Param("course_hour_id")String course_hour_id,@Param("sort")String sort,@Param("start")long start,@Param("pageSize")long pageSize);
   
    CourseNote selectByHourIdAndUserId(@Param("user_id")long user_id,@Param("course_hour_id")long course_hour_id);
    
    //后台
    List<CourseNoteView> search(CourseNoteView courseNoteView);
    
    Long count(CourseNoteView courseNoteView);
    
    CourseNoteView getById(Long id);
    
    List<NoteView> queryMyNote(NoteView view);
    int queryMyNoteCount(NoteView view);
    List<NoteView> queryMyCourseNote(NoteView view);
    int queryMyCourseNoteCount(NoteView view);

    List<CourseNoteView> queryCourseIdsNote(TrainDetailView trainDetailView);
	int queryTotalCourseIdsNote(TrainDetailView trainDetailView);

}