package cn.bnsr.edu_yun.frontstage.train.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import cn.bnsr.edu_yun.frontstage.train.po.TeacherRelation;
import cn.bnsr.edu_yun.frontstage.train.view.TeacherRelationView;
import cn.bnsr.edu_yun.frontstage.train.view.TeacherView;

public interface TeacherRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher_relation
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher_relation
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int insert(TeacherRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher_relation
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int insertSelective(TeacherRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher_relation
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    TeacherRelation selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher_relation
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int updateByPrimaryKeySelective(TeacherRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher_relation
     *
     * @mbggenerated Tue Dec 20 15:07:28 CST 2016
     */
    int updateByPrimaryKey(TeacherRelation record);
    
    List<TeacherRelationView> queryTeacherRelation(@Param("sourceId")Long sourceId,@Param("sourceType")Integer sourceType,@Param("type")Integer type);

	Integer getLastSeq();
	
	List<TeacherView> queryTeacher(TeacherRelation teacherRelation);

	List<TeacherRelationView> queryAllTeacher(@Param("courseIds")List<String> courseIds);

	void deleteAllCourseId(@Param("type")int type,@Param("sourceId")Long sourceId,@Param("sourceType")Integer sourceType);
	
	List<TeacherRelationView> queryTeacherOfClass(TeacherRelationView teacherRelationView);
}