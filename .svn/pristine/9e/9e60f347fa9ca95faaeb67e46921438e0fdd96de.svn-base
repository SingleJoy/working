<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bnsr.edu_yun.frontstage.xbjy.mapper.LessonMapper">
	<resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.xbjy.po.Lesson">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="lesson_num" property="lesson_num" jdbcType="VARCHAR" />
		<result column="workshop_id" property="workshop_id" jdbcType="BIGINT" />
		<result column="lesson_pic" property="lesson_pic" jdbcType="VARCHAR" />
		<result column="period" property="period" jdbcType="INTEGER" />
		<result column="credit" property="credit" jdbcType="DOUBLE" />
		<result column="stage_id" property="stage_id" jdbcType="VARCHAR" />
		<result column="subject_id" property="subject_id" jdbcType="VARCHAR" />
		<result column="grade_id" property="grade_id" jdbcType="VARCHAR" />
		<result column="press_id" property="press_id" jdbcType="VARCHAR" />
		<result column="research_key" property="research_key" jdbcType="VARCHAR" />
		<result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
		<result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
		<result column="user_id" property="user_id" jdbcType="BIGINT" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="excellent" property="excellent" jdbcType="INTEGER" />
		<result column="scan_count" property="scan_count" jdbcType="INTEGER" />
		<result column="user_sk" property="user_sk" jdbcType="BIGINT" />
		<result column="user_sk_name" property="user_sk_name" jdbcType="VARCHAR" />
		<result column="open_status" property="open_status" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="cn.bnsr.edu_yun.frontstage.xbjy.po.Lesson" extends="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		<result column="research" property="research" jdbcType="LONGVARCHAR" />
		<result column="measures" property="measures" jdbcType="LONGVARCHAR" />
		<result column="self_evaluation" property="self_evaluation" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		id, name, lesson_num, workshop_id, lesson_pic, period, credit, stage_id, subject_id,
		grade_id, press_id, research_key, create_time, update_time, user_id, status, excellent, scan_count ,user_sk ,user_sk_name ,open_status
	</sql>
	<sql id="Blob_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		research, measures, self_evaluation
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from lesson
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		delete from lesson
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.po.Lesson">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into lesson (name, lesson_num, workshop_id,
		lesson_pic, period, credit,
		stage_id, subject_id, grade_id,
		press_id, research_key, create_time,
		update_time, user_id, status,
		excellent, scan_count, user_sk, user_sk_name, research, measures,
		self_evaluation)
		values (#{name,jdbcType=VARCHAR}, #{lesson_num,jdbcType=VARCHAR}, #{workshop_id,jdbcType=BIGINT},
		#{lesson_pic,jdbcType=VARCHAR}, #{period,jdbcType=INTEGER}, #{credit,jdbcType=DOUBLE},
		#{stage_id,jdbcType=VARCHAR}, #{subject_id,jdbcType=VARCHAR}, #{grade_id,jdbcType=VARCHAR},
		#{press_id,jdbcType=VARCHAR}, #{research_key,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP},
		#{update_time,jdbcType=TIMESTAMP}, #{user_id,jdbcType=BIGINT}, #{status,jdbcType=INTEGER},
		#{excellent,jdbcType=INTEGER}, #{scan_count,jdbcType=INTEGER}, #{user_sk,jdbcType=BIGINT}, #{user_sk_name,jdbcType=VARCHAR},#{research,jdbcType=LONGVARCHAR}, #{measures,jdbcType=LONGVARCHAR},
		#{self_evaluation,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.po.Lesson">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into lesson
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="lesson_num != null">
				lesson_num,
			</if>
			<if test="workshop_id != null">
				workshop_id,
			</if>
			<if test="lesson_pic != null">
				lesson_pic,
			</if>
			<if test="period != null">
				period,
			</if>
			<if test="credit != null">
				credit,
			</if>
			<if test="stage_id != null">
				stage_id,
			</if>
			<if test="subject_id != null">
				subject_id,
			</if>
			<if test="grade_id != null">
				grade_id,
			</if>
			<if test="press_id != null">
				press_id,
			</if>
			<if test="research_key != null">
				research_key,
			</if>
			<if test="create_time != null">
				create_time,
			</if>
			<if test="update_time != null">
				update_time,
			</if>
			<if test="user_id != null">
				user_id,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="excellent != null">
				excellent,
			</if>
			<if test="scan_count != null">
				scan_count,
			</if>
			<if test="user_sk != null">
				user_sk,
			</if>
			<if test="user_sk_name != null">
				user_sk_name,
			</if>
			<if test="research != null">
				research,
			</if>
			<if test="measures != null">
				measures,
			</if>
			<if test="self_evaluation != null">
				self_evaluation,
			</if>
			<if test="open_status != null">
				open_status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="lesson_num != null">
				#{lesson_num,jdbcType=VARCHAR},
			</if>
			<if test="workshop_id != null">
				#{workshop_id,jdbcType=BIGINT},
			</if>
			<if test="lesson_pic != null">
				#{lesson_pic,jdbcType=VARCHAR},
			</if>
			<if test="period != null">
				#{period,jdbcType=INTEGER},
			</if>
			<if test="credit != null">
				#{credit,jdbcType=DOUBLE},
			</if>
			<if test="stage_id != null">
				#{stage_id,jdbcType=VARCHAR},
			</if>
			<if test="subject_id != null">
				#{subject_id,jdbcType=VARCHAR},
			</if>
			<if test="grade_id != null">
				#{grade_id,jdbcType=VARCHAR},
			</if>
			<if test="press_id != null">
				#{press_id,jdbcType=VARCHAR},
			</if>
			<if test="research_key != null">
				#{research_key,jdbcType=VARCHAR},
			</if>
			<if test="create_time != null">
				#{create_time,jdbcType=TIMESTAMP},
			</if>
			<if test="update_time != null">
				#{update_time,jdbcType=TIMESTAMP},
			</if>
			<if test="user_id != null">
				#{user_id,jdbcType=BIGINT},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="excellent != null">
				#{excellent,jdbcType=INTEGER},
			</if>
			<if test="scan_count != null">
				#{scan_count,jdbcType=INTEGER},
			</if>
			<if test="user_sk != null">
				#{user_sk,jdbcType=BIGINT},
			</if>
			<if test="user_sk_name != null">
				#{user_sk_name,jdbcType=VARCHAR},
			</if>
			<if test="research != null">
				#{research,jdbcType=LONGVARCHAR},
			</if>
			<if test="measures != null">
				#{measures,jdbcType=LONGVARCHAR},
			</if>
			<if test="self_evaluation != null">
				#{self_evaluation,jdbcType=LONGVARCHAR},
			</if>
			<if test="open_status != null">
				#{open_status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.po.Lesson">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		update lesson
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="lesson_num != null">
				lesson_num = #{lesson_num,jdbcType=VARCHAR},
			</if>
			<if test="workshop_id != null">
				workshop_id = #{workshop_id,jdbcType=BIGINT},
			</if>
			<if test="lesson_pic != null">
				lesson_pic = #{lesson_pic,jdbcType=VARCHAR},
			</if>
			<if test="period != null">
				period = #{period,jdbcType=INTEGER},
			</if>
			<if test="credit != null">
				credit = #{credit,jdbcType=DOUBLE},
			</if>
			<if test="stage_id != null">
				stage_id = #{stage_id,jdbcType=VARCHAR},
			</if>
			<if test="subject_id != null">
				subject_id = #{subject_id,jdbcType=VARCHAR},
			</if>
			<if test="grade_id != null">
				grade_id = #{grade_id,jdbcType=VARCHAR},
			</if>
			<if test="press_id != null">
				press_id = #{press_id,jdbcType=VARCHAR},
			</if>
			<if test="research_key != null">
				research_key = #{research_key,jdbcType=VARCHAR},
			</if>
			<if test="create_time != null">
				create_time = #{create_time,jdbcType=TIMESTAMP},
			</if>
			<if test="update_time != null">
				update_time = #{update_time,jdbcType=TIMESTAMP},
			</if>
			<if test="user_id != null">
				user_id = #{user_id,jdbcType=BIGINT},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="excellent != null">
				excellent = #{excellent,jdbcType=INTEGER},
			</if>
			<if test="scan_count != null">
				scan_count = #{scan_count,jdbcType=INTEGER},
			</if>
			<if test="user_sk != null">
				user_sk = #{user_sk,jdbcType=BIGINT},
			</if>
			<if test="user_sk_name != null">
				user_sk_name = #{user_sk_name,jdbcType=VARCHAR},
			</if>
			<if test="research != null">
				research = #{research,jdbcType=LONGVARCHAR},
			</if>
			<if test="measures != null">
				measures = #{measures,jdbcType=LONGVARCHAR},
			</if>
			<if test="self_evaluation != null">
				self_evaluation = #{self_evaluation,jdbcType=LONGVARCHAR},
			</if>
			<if test="open_status != null">
				open_status = #{open_status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.po.Lesson">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		update lesson
		set name = #{name,jdbcType=VARCHAR},
		lesson_num = #{lesson_num,jdbcType=VARCHAR},
		workshop_id = #{workshop_id,jdbcType=BIGINT},
		lesson_pic = #{lesson_pic,jdbcType=VARCHAR},
		period = #{period,jdbcType=INTEGER},
		credit = #{credit,jdbcType=DOUBLE},
		stage_id = #{stage_id,jdbcType=VARCHAR},
		subject_id = #{subject_id,jdbcType=VARCHAR},
		grade_id = #{grade_id,jdbcType=VARCHAR},
		press_id = #{press_id,jdbcType=VARCHAR},
		research_key = #{research_key,jdbcType=VARCHAR},
		create_time = #{create_time,jdbcType=TIMESTAMP},
		update_time = #{update_time,jdbcType=TIMESTAMP},
		user_id = #{user_id,jdbcType=BIGINT},
		status = #{status,jdbcType=INTEGER},
		excellent = #{excellent,jdbcType=INTEGER},
		scan_count =
		#{scan_count,jdbcType=INTEGER},
		user_sk = #{user_sk,jdbcType=BIGINT},
		user_sk_name = #{user_sk_name,jdbcType=VARCHAR},
		research = #{research,jdbcType=LONGVARCHAR},
		measures = #{measures,jdbcType=LONGVARCHAR},
		self_evaluation = #{self_evaluation,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.po.Lesson">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Fri Mar 10 13:47:22 CST 2017. -->
		update lesson
		set name = #{name,jdbcType=VARCHAR},
		lesson_num = #{lesson_num,jdbcType=VARCHAR},
		workshop_id = #{workshop_id,jdbcType=BIGINT},
		lesson_pic = #{lesson_pic,jdbcType=VARCHAR},
		period = #{period,jdbcType=INTEGER},
		credit = #{credit,jdbcType=DOUBLE},
		stage_id = #{stage_id,jdbcType=VARCHAR},
		subject_id = #{subject_id,jdbcType=VARCHAR},
		grade_id = #{grade_id,jdbcType=VARCHAR},
		press_id = #{press_id,jdbcType=VARCHAR},
		research_key = #{research_key,jdbcType=VARCHAR},
		create_time = #{create_time,jdbcType=TIMESTAMP},
		update_time = #{update_time,jdbcType=TIMESTAMP},
		user_id = #{user_id,jdbcType=BIGINT},
		status = #{status,jdbcType=INTEGER},
		excellent = #{excellent,jdbcType=INTEGER},
		scan_count =
		#{scan_count,jdbcType=INTEGER},
		user_sk = #{user_sk,jdbcType=BIGINT},
		user_sk_name = #{user_sk_name,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="queryLesson" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">
		SELECT l.id,l.name,l.create_time,l.status,w.name as workshop_name,l.open_status,l.lesson_pic,
		u.username as lesson_username,g.grade_name as grade,
		sl.subjectName as subject,
		(SELECT COUNT(*) FROM recommended r WHERE r.source_id=l.id AND r.source_type=5 AND DATE_SUB(r.valid_time,INTERVAL -1 DAY)>NOW() ) as recommended
		FROM lesson l
		LEFT JOIN workshop w ON w.id=l.workshop_id
		left join lesson_user_identity lui on lui.lesson_id=l.id and lui.Identity=0
		left join user u on u.id=lui.user_id
		left join grade g on g.id=l.grade_id
		left join subject_list sl on sl.id=l.subject_id
		where l.workshop_id=${workshop_id}
		<if test="search!=null ">
			and l.name like "${search}"
		</if>
		ORDER BY
		<if test="sort!=null ">
			${sort}
		</if>
		<if test="sort==null ">
			l.create_time
		</if>
		<if test="order!=null ">
			${order}
		</if>
		<if test="order==null ">
			desc
		</if>
		<if test="rows!=null and rows!=0">
			LIMIT ${startLine},${rows}
		</if>

	</select>

	<select id="queryUserLesson" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">
		SELECT l.*,lui.Identity AS identity,w.name as workshop_name,
		(select count(*) from lesson_user_task lut where lut.lesson_id=l.id ) as all_count,
		(select count(*) from lesson_user_task lut1 where lut1.lesson_id=l.id and lut1.status=2 ) as finish_count,
		u.username as lesson_username,g.grade_name as grade,
		sl.subjectName as subject
		FROM lesson l
		LEFT JOIN lesson_user_identity lui ON l.id = lui.lesson_id
		LEFT JOIN workshop w ON w.id=l.workshop_id
		left join user u on u.id=lui.user_id
		left join grade g on g.id=l.grade_id
		left join subject_list sl on sl.id=l.subject_id
		WHERE lui.user_id =#{user_id,jdbcType=BIGINT}
		<if test="identity !=null ">
			AND lui.identity=${identity}
			</if>
		<if test="status ==0 ">
			AND l.status=0
		</if>
		<if test="status ==1 ">
			AND l.status=1
		</if>
		<if test="status ==2 ">
			AND l.status=2
		</if>
		<if test="status ==-2 ">
			AND l.status!=0
			and l.open_status=0
		</if>
		GROUP BY id
		ORDER BY create_time desc
		LIMIT ${startLine},${rows}
	</select>

	<select id="queryTotalLesson" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM lesson
		where workshop_id=${workshop_id}
	</select>

	<select id="countUserLesson" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM lesson l
		LEFT JOIN lesson_user_identity lui ON l.id = lui.lesson_id
		WHERE lui.user_id =#{user_id,jdbcType=BIGINT}
		<if test="identity !=null ">
			AND lui.identity=${identity}
			</if>
		<if test="status != -1">
			<if test="status ==0 ">
				AND l.status=0
			</if>
			<if test="status ==1 ">
				AND l.status=1
			</if>
			<if test="status ==2 ">
				AND l.status=2
			</if>
		</if>
		<if test="status ==-2 ">
			AND l.status!=0
			and l.open_status=0
		</if>
	</select>

	<select id="findPK" parameterType="java.lang.Long" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">
		SELECT *
		FROM lesson
		WHERE user_id =#{user_id,jdbcType=BIGINT}
		ORDER BY create_time DESC LIMIT 1
	</select>
	<select id="queryLessonView" parameterType="java.lang.Long" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">
		SELECT l.user_id,l.name,l.id,pl.versionName,g.grade_name,s1.subjectName as stageName,s.subjectName,u.username,ui.school,l.open_status,
		l.lesson_pic,(select count(*) from lesson_user_task lut where lut.lesson_id=l.id ) as all_count,
		(select count(*) from lesson_user_task lut1 where lut1.lesson_id=l.id and lut1.status=2 ) as finish_count,
		w.name as workshop_name,l.user_sk_name
		FROM lesson l
		LEFT JOIN pubver_list pl ON pl.id=l.press_id
		LEFT JOIN grade g ON g.id=l.grade_id
		LEFT JOIN subject_list s1 ON s1.id=l.stage_id
		LEFT JOIN subject_list s ON s.id=l.subject_id
		LEFT JOIN USER u ON u.id=l.user_sk
		LEFT JOIN user_info ui ON ui.user_id=u.id
		LEFT JOIN workshop w ON w.id=l.workshop_id
		WHERE l.id=#{id,jdbcType=BIGINT}
	</select>

	<update id="updateExcellent" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">

		update lesson
		set excellent = #{excellent,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateStatus" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">

		update lesson
		set status = #{status,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<update id="saveLessonSelf" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">

		update lesson
		set self_evaluation = #{self_evaluation,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="queryLessonMain" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">
		SELECT l.*,s1.subjectName as stageName,s.subjectName,
		(select count(*) from lesson_user_task lut where lut.lesson_id=l.id ) as all_count,
		(select count(*) from lesson_user_task lut1 where lut1.lesson_id=l.id and lut1.status=2 ) as finish_count,
		w.name as workshop_name
		FROM lesson l
		LEFT JOIN pubver_list pl ON pl.id=l.press_id
		LEFT JOIN grade g ON g.id=l.grade_id
		LEFT JOIN subject_list s1 ON s1.id=l.stage_id
		LEFT JOIN subject_list s ON s.id=l.subject_id
		LEFT JOIN workshop w ON w.id=l.workshop_id
		LEFT JOIN recommended r ON r.source_id=l.id AND r.source_type=5 AND DATE_SUB(r.valid_time,INTERVAL -1 DAY)>NOW()
		WHERE 1=1
		and l.open_status=0
		and l.status!=0
		<if test="press_id != null  and press_id!=''">
			and l.press_id='${press_id}'
		</if>
		<if test="grade_id != null and grade_id!=''">
			and l.grade_id='${grade_id}'
		</if>
		<if test="subject_id != null  and subject_id!=''">
			and l.subject_id='${subject_id}'
		</if>
		<if test="stage_id != null  and stage_id!=''">
			and l.stage_id='${stage_id}'
		</if>
		<if test="list =='finish'">
			and l.status=2
		</if>
		<if test="list =='unfinish'">
			and l.status!=2
		</if>
		<if test="list =='best'">
			and excellent=1
		</if>
		<if test="list =='recommended'">
			and r.seq IS NOT NULL
		</if>
		<if test="sort!=null">
			<if test="sort!='recommended'">
				order by ${sort} desc
			</if>
			<if test="sort=='recommended'">
				order by
				CASE WHEN r.seq IS NULL THEN 1 ELSE 0 END ,r.seq
				desc
			</if>
		</if>
		<if test="rows!=null and rows!=0">
			LIMIT ${startLine},${rows}
		</if>
	</select>
	<select id="queryLessonMainCount" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM lesson l
		LEFT JOIN pubver_list pl ON pl.id=l.press_id
		LEFT JOIN grade g ON g.id=l.grade_id
		LEFT JOIN subject_list s1 ON s1.id=l.stage_id
		LEFT JOIN subject_list s ON s.id=l.subject_id
		LEFT JOIN USER u ON u.id=l.user_sk
		LEFT JOIN user_info ui ON ui.user_id=u.id
		WHERE 1=1
		and l.open_status=0
		and l.status!=0
		<if test="press_id != null">
			and l.press_id='${press_id}'
		</if>
		<if test="grade_id != null">
			and l.grade_id='${grade_id}'
		</if>
		<if test="subject_id != null">
			and l.subject_id='${subject_id}'
		</if>
		<if test="stage_id != null">
			and l.stage_id='${stage_id}'
		</if>
		<if test="list =='finish'">
			and l.status=2
		</if>
		<if test="list =='unfinish'">
			and l.status!=2
		</if>
		<if test="list =='best'">
			and excellent=1
		</if>

	</select>
	<select id="queryCommunityLesson" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">
		SELECT l.id,l.name,l.create_time,l.status,w.name as workshop_name,l.open_status,l.lesson_pic,
		u.username as lesson_username,g.grade_name as grade,
		sl.subjectName as subject,
		(select count(*) from lesson_user_task lut where lut.lesson_id=l.id ) as all_count,
		(select count(*) from lesson_user_task lut1 where lut1.lesson_id=l.id and lut1.status=2 ) as finish_count,
		r.seq as recommended
		FROM lesson l
		LEFT JOIN workshop w ON w.id=l.workshop_id
		left join lesson_user_identity lui on lui.lesson_id=l.id and lui.Identity=0
		left join user u on u.id=lui.user_id
		left join grade g on g.id=l.grade_id
		left join subject_list sl on sl.id=l.subject_id
		LEFT JOIN recommended r ON r.source_id=l.id AND r.source_type=5 AND
		DATE_SUB(r.valid_time,INTERVAL -1 DAY)>NOW()
		WHERE 1=1
		and l.status!=0
		<if test="sourceType==0">
			and w.community_id=${id}
		</if>
		<if test="sourceType==1">
			and w.id=${id}
		</if>
		<if test="grade_id != null and grade_id!=''">
			and l.grade_id='${grade_id}'
		</if>
		<if test="subject_id != null and subject_id!=''">
			and l.subject_id='${subject_id}'
		</if>
		<if test="stage_id != null and stage_id!=''">
			and l.stage_id='${stage_id}'
		</if>
		<if test="search!=null ">
			and l.name like "${search}"
		</if>
		<if test="status ==1">
			and l.status=1
		</if>
		<if test="status ==2">
			and l.status=2
		</if>
		<if test="open_status ==-1">
			and l.open_status=0
		</if>
		ORDER BY
		<if test="sort!=null ">
			${sort}
		</if>
		<if test="sort==null  and sortType==0">
			l.create_time
		</if>
		<if test="sortType==1 ">
			l.scan_count
		</if>
		<if test="sortType==2 ">
			CASE WHEN r.seq IS NULL THEN 1 ELSE 0 END ,r.seq
		</if>
		<if test="order!=null ">
			${order}
		</if>
		<if test="order==null  and sortType!=2 ">
			desc
		</if>
		<if test="rows!=0">
			LIMIT ${startLine},${rows}
		</if>
	</select>
	<select id="queryTotalCommunityLesson" parameterType="cn.bnsr.edu_yun.frontstage.train.view.CommunityCenterView" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM lesson l
		LEFT JOIN workshop w ON w.id=l.workshop_id
		WHERE 1=1
		and l.status!=0
		<if test="status ==1">
			and l.status=1
		</if>
		<if test="status ==2">
			and l.status=2
		</if>
		<if test="open_status ==-1">
			and l.open_status=0
		</if>
		<if test="sourceType==0">
			and w.community_id=${id}
		</if>
		<if test="sourceType==1">
			and w.id=${id}
		</if>
		<if test="grade_id != null and grade_id!=''">
			and l.grade_id='${grade_id}'
		</if>
		<if test="subject_id != null and subject_id!=''">
			and l.subject_id='${subject_id}'
		</if>
		<if test="stage_id != null and stage_id!=''">
			and l.stage_id='${stage_id}'
		</if>
		<if test="search!=null ">
			and l.name like "${search}"
		</if>
	</select>

	<select id="lessonDataStats" resultType="cn.bnsr.edu_yun.frontstage.train.view.DataStatsView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.DataStatsView">
		SELECT DATE_FORMAT(l.create_time, '%Y-%m-%d') days, COUNT(l.id) AS newNum,
		t.countNum, tt.completeNum
		FROM lesson l , (
		SELECT COUNT(*) as countNum
		FROM lesson ll
		<where>
			<if test="dataType == 0">
				AND ll.workshop_id in (
				SELECT w.id FROM workshop w
				WHERE w.community_id = ${id}
				)
			</if>
			<if test="dataType == 1">
				AND ll.workshop_id = ${id}
			</if>
		</where>
		) t , (
		SELECT COUNT(*) as completeNum
		FROM lesson le
		<where>
			<if test="dataType == 0">
				AND le.workshop_id in (
				SELECT w.id FROM workshop w
				WHERE w.community_id = ${id}
				)
			</if>
			<if test="dataType == 1">
				AND le.workshop_id = ${id}
			</if>
			AND le.`status` = 2
		</where>
		) tt
		<where>
			<if test="dataType == 0">
				AND l.workshop_id in (
				SELECT w.id FROM workshop w
				WHERE w.community_id = ${id}
				)
			</if>
			<if test="dataType == 1">
				AND l.workshop_id = ${id}
			</if>
			<if test="monthType == 0 or monthType == 1 ">
			<![CDATA[AND l.create_time LIKE  '%${days}%']]>
			</if>
			<if test="monthType == 2 or monthType == 3 ">
		 	<![CDATA[ AND (l.create_time >= ${startTime} or l.create_time <= ${endTime} )]]>
			</if>
		</where>
		GROUP BY days
	</select>
	<select id="queryUserLessonCreate" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">
		SELECT l.*,lui.Identity AS identity,w.name as workshop_name,
		(select count(*) from lesson_user_task lut where lut.lesson_id=l.id ) as all_count,
		(select count(*) from lesson_user_task lut1 where lut1.lesson_id=l.id and lut1.status=2 ) as finish_count,
		u.username as lesson_username,g.grade_name as grade,
		sl.subjectName as subject
		FROM lesson l
		LEFT JOIN lesson_user_identity lui ON l.id = lui.lesson_id
		LEFT JOIN workshop w ON w.id=l.workshop_id
		left join user u on u.id=lui.user_id
		left join grade g on g.id=l.grade_id
		left join subject_list sl on sl.id=l.subject_id
		WHERE l.user_id =#{user_id,jdbcType=BIGINT}
		<if test="status ==0 ">
			AND l.status=0
			AND lui.identity=0
		</if>
		<if test="status ==1 ">
			AND l.status=1
		</if>
		<if test="status ==2 ">
			AND l.status=2
		</if>
		<if test="status ==-2 ">
			AND l.status!=0
			and l.open_status=0
		</if>
		GROUP BY id
		ORDER BY create_time desc
		LIMIT ${startLine},${rows}
	</select>
	<select id="countUserLessonCreate" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM lesson l
		<if test="status ==0 ">
			LEFT JOIN lesson_user_identity lui ON l.id = lui.lesson_id
		</if>
		WHERE l.user_id =#{user_id,jdbcType=BIGINT}
		<if test="status ==0 ">
			AND l.status=0
			AND lui.identity=0
		</if>
		<if test="status ==1 ">
			AND l.status=1
		</if>
		<if test="status ==2 ">
			AND l.status=2
		</if>
		<if test="status ==-2 ">
			AND l.status!=0
			and l.open_status=0
		</if>
	</select>
	<select id="queryLessonOne" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">
		SELECT l.id,l.name,l.create_time,l.status,w.name as workshop_name

		FROM lesson l
		LEFT JOIN workshop w ON w.id=l.workshop_id

		where l.id=${id}
	</select>
	<select id="queryLessonByArea" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.LessonView">
		SELECT l.id,l.name,s.subjectName,
		g.grade_name,
		c.name AS community_name
		FROM lesson l
		LEFT JOIN grade g ON g.id=l.grade_id
		LEFT JOIN subject_list s ON s.id=l.subject_id
		LEFT JOIN workshop w ON w.id=l.workshop_id
		LEFT JOIN community c ON w.community_id=c.id
		LEFT JOIN `area` a ON a.id=c.area_id
		WHERE 1=1
		AND l.open_status=0
		AND l.status!=0
		AND a.area_id LIKE "${area}"
		LIMIT 0,4
	</select>
	<select id="queryLessonHome" parameterType="cn.bnsr.edu_yun.frontstage.xbjy.view.SubjectLessonView" resultType="cn.bnsr.edu_yun.frontstage.xbjy.view.SubjectLessonView">
		SELECT l.*,s1.subjectName as stageName,s.subjectName,
		(select count(*) from lesson_user_task lut where lut.lesson_id=l.id ) as all_count,
		(select count(*) from lesson_user_task lut1 where lut1.lesson_id=l.id and lut1.status=2 ) as finish_count,
		w.name as workshop_name,u.username as lesson_username
		<if test="list =='recommended'">
		,la.update_time as opinion_time,la.opinion,u1.username as opinion_user,
		u1.icon as opinion_user_img,u1.id as opinion_user_id 
		</if>
		FROM lesson l
		LEFT JOIN pubver_list pl ON pl.id=l.press_id
		LEFT JOIN grade g ON g.id=l.grade_id
		LEFT JOIN subject_list s1 ON s1.id=l.stage_id
		LEFT JOIN subject_list s ON s.id=l.subject_id
		LEFT JOIN workshop w ON w.id=l.workshop_id
		LEFT JOIN community c ON w.community_id=c.id
		LEFT JOIN `area` a ON a.id=c.area_id
		LEFT JOIN lesson_user_identity lui ON l.id = lui.lesson_id and lui.Identity=0
		LEFT JOIN user u on u.id=lui.user_id
		<if test="list =='recommended'">
		LEFT JOIN recommended r ON r.source_id=l.id AND r.source_type=5 AND DATE_SUB(r.valid_time,INTERVAL -1 DAY)>NOW()
		LEFT JOIN lesson_assess la ON la.lesson_id=l.id
		LEFT JOIN user u1 on u1.id=la.user_id
		</if>
		WHERE 1=1
		and l.open_status=0
		and l.status!=0
		<if test="area !=null">
		AND a.area_id LIKE "${area}"
		</if>
		<if test="str !=null">
			and l.subject_id ${str}
		</if>
		<if test="list =='best'">
			and excellent=1
		</if>
		<if test="list =='recommended'">
			and r.seq IS NOT NULL
		</if>
		<if test="sort!=null">
			<if test="sort!='recommended'">
				order by ${sort} desc
			</if>
			<if test="sort=='recommended'">
				order by
				CASE WHEN r.seq IS NULL THEN 1 ELSE 0 END ,r.seq
				desc
			</if>
		</if>
		<if test="rows!=null and rows!=0">
			LIMIT ${startLine},${rows}
		</if>
	</select>
</mapper>