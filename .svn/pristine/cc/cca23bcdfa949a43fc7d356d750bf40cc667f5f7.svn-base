package cn.bnsr.edu_yun.frontstage.resource.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import cn.bnsr.edu_yun.frontstage.base.po.BookCat;
import cn.bnsr.edu_yun.frontstage.base.po.PubverList;
import cn.bnsr.edu_yun.frontstage.base.po.SubjectList;
import cn.bnsr.edu_yun.frontstage.base.service.BookCatService;
import cn.bnsr.edu_yun.frontstage.base.service.PubverListService;
import cn.bnsr.edu_yun.frontstage.base.service.SubjectListService;
import cn.bnsr.edu_yun.frontstage.resource.service.File_baseService;
import cn.bnsr.edu_yun.frontstage.resource.service.ResourceListService;
import cn.bnsr.edu_yun.frontstage.resource.view.ResourceView;
import cn.bnsr.edu_yun.util.NumUtil;

/**
 * 资源列表
 * @author fangxiongwei
 * @date 2016年8月22日
 */
@Controller
@RequestMapping("/resource_list")
public class ResourceListController {
	
	@Autowired
	private ResourceListService resourceListService;
	@Autowired
	private File_baseService fileBaseService;
	@Autowired
	private SubjectListService subjectListService;
	@Autowired
	private PubverListService pubverListService;
	@Autowired
	private BookCatService bookCatService;
	
	/**
	 * 跳转资源列表
	 */
	@RequestMapping("/to_resource_list")
	public ModelAndView toResourceList(HttpServletRequest request,ResourceView resourceView) throws Exception {
		
		//学段
		SubjectList subject = subjectListService.selectById(resourceView.getStageId());
		resourceView.setStage(subject.getSubjectName());
		//科目
		List<SubjectList> subjectList =  subjectListService.querySubject(resourceView.getStageId());
		//教材版本
		List<PubverList> editionList = null;
		if(subjectList.size()>0){
			if(resourceView.getSubjectId() == null){
				editionList = pubverListService.queryPubver(subjectList.get(0).getId());
				resourceView.setSubjectId(subjectList.get(0).getId());
			}else{
				editionList = pubverListService.queryPubver(resourceView.getSubjectId());
				resourceView.setSubjectId(resourceView.getSubjectId());
			}
			resourceView.setSubject(resourceView.getSubject()==null?subjectList.get(0).getSubjectName():resourceView.getSubject());
		}
		//年级
		List<BookCat> gradeList = null;
		if(editionList != null && editionList.size()>0){
			if(resourceView.getEditionId()==null){
				gradeList = bookCatService.queryBookCat(editionList.get(0).getId());
				resourceView.setEditionId(editionList.get(0).getId());
			}else{
				gradeList = bookCatService.queryBookCat(resourceView.getEditionId());
				resourceView.setEditionId(resourceView.getEditionId());
			}
			resourceView.setEdition(resourceView.getEdition()==null?editionList.get(0).getVersionName():resourceView.getEdition());
		}
		//章节
		List<BookCat> chapterList = null;
		if(gradeList != null && gradeList.size()>0){
			if(resourceView.getGradeId()==null){
				chapterList = bookCatService.queryBookCat(gradeList.get(0).getId());
				resourceView.setGradeId(gradeList.get(0).getId());
			}else{
				chapterList = bookCatService.queryBookCat(resourceView.getGradeId());
				resourceView.setGradeId(resourceView.getGradeId());
			}
		}
		//小节
		List<BookCat> sectionList = null;
		if(chapterList != null && chapterList.size()>0){
			if(resourceView.getChapterId()==null||resourceView.getChapterId().equals("")){
				sectionList = bookCatService.queryBookCat(chapterList.get(0).getId());
				resourceView.setChapterId(chapterList.get(0).getId());
			}else{
				sectionList = bookCatService.queryBookCat(resourceView.getChapterId());
				resourceView.setChapterId(resourceView.getChapterId());
			}
		}
		if(sectionList!=null && sectionList.size()>0){
			resourceView.setSectionId((resourceView.getSectionId()==null||resourceView.getSectionId().equals(""))?resourceView.getChapterId():resourceView.getSectionId());
		}else{
			resourceView.setSectionId(resourceView.getChapterId());
		}
		//教师推荐
		List<ResourceView> recommendList = fileBaseService.queryRecommend();
		int recommendTotal = 0;//推荐总数
		for(ResourceView recommend : recommendList){
			recommendTotal += Integer.parseInt(recommend.getScore());
		}
		resourceView.setSubjectList(subjectList);
		resourceView.setEditionList(editionList);
		resourceView.setGradeList(gradeList);
		resourceView.setChapterList(chapterList);
		resourceView.setSectionList(sectionList);
		resourceView.setRecommendTotal(recommendTotal);
		if(resourceView.getPage()==0){
			resourceView.setStartLine(0);
		}else{
			resourceView.setStartLine(resourceView.getPage()*resourceView.getRows());
		}
		resourceView.setRows(8);
		resourceView.setSort(resourceView.getSort()==null?"4":resourceView.getSort());
		resourceView.setType(resourceView.getType()==null?"0":resourceView.getType());
		resourceView.setIsNot("true");
		
		//资源列表
		List<ResourceView> resourceList = fileBaseService.queryResource(resourceView);
		//资源总数
		int total = fileBaseService.queryTotalResource(resourceView);
		resourceView.setTotal(total);
		//分页总页数
		resourceView.setTotalPage(NumUtil.totalPage(total,resourceView.getRows()));
		
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.addObject("resourceList", resourceList);
		modelAndView.addObject("recommendList", recommendList);
		modelAndView.addObject("resourceView", resourceView);
		modelAndView.setViewName("frontstage/resource/resource_list");
		modelAndView.addObject("head_title", "资源列表");
		return modelAndView;
	}
}
