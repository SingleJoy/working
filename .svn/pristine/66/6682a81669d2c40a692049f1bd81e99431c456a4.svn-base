<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bnsr.edu_yun.backstage.base.mapper.AuthMapper">
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.backstage.base.po.Auth">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 30 09:06:27 CST 2016.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="seq" jdbcType="DECIMAL" property="seq" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 30 09:06:27 CST 2016.
    -->
    id, name, seq, url, pid, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 30 09:06:27 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from auth
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 30 09:06:27 CST 2016.
    -->
    delete from auth
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.backstage.base.po.Auth">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 30 09:06:27 CST 2016.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auth (name, seq, url, 
      pid, remarks)
    values (#{name,jdbcType=VARCHAR}, #{seq,jdbcType=DECIMAL}, #{url,jdbcType=VARCHAR}, 
      #{pid,jdbcType=BIGINT}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.backstage.base.po.Auth">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 30 09:06:27 CST 2016.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=DECIMAL},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.backstage.base.po.Auth">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 30 09:06:27 CST 2016.
    -->
    update auth
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=DECIMAL},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.backstage.base.po.Auth">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 30 09:06:27 CST 2016.
    -->
    update auth
    set name = #{name,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=DECIMAL},
      url = #{url,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=BIGINT},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <select id="queryTree" parameterType="cn.bnsr.edu_yun.backstage.base.po.Auth" resultType="cn.bnsr.edu_yun.backstage.base.po.Auth">
   	SELECT 
    <include refid="Base_Column_List" />
    FROM auth t 
    <if test="id != null and id !=''">
    	WHERE	t.pid = #{id}
    </if>
    <if test="id == null">
   	 	WHERE	t.pid = 1
    </if>
    ORDER BY t.seq
  </select>
  
  <select id="queryTreeGrid" parameterType="cn.bnsr.edu_yun.backstage.base.po.Auth" resultType="cn.bnsr.edu_yun.backstage.base.view.TreeView">
  	SELECT a.id as id, a.name as name, a.seq as seq,
  		a.url as url, t.id as pid, t.name as pname
  	FROM auth a 
  	LEFT JOIN  (SELECT au.id,au.name FROM auth au) t  
  	ON a.pid= t.id
  	<if test="id != null and id !=''">
  		WHERE	a.pid = #{id}
  	</if>
  	<if test="id == null">
 		WHERE	a.pid = 1
	</if> 
	ORDER BY a.seq 
  </select>
  
  <select id="countChildren" parameterType="java.lang.String" resultType="java.lang.Long">
  	SELECT COUNT(*) FROM auth t where t.pid = #{pid}
  </select>
  
  <select id="getByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	SELECT  a.name as name , a.url as url 
  	FROM auth a 
  	WHERE exists(
		SELECT ra.auth_id 
		FROM role_auth ra 
		WHERE exists(
			SELECT  ur.role_id  as id 
			FROM user_role ur 
			WHERE ur.user_id = #{_parameter}
			AND ur.role_id = ra.role_id
		)
		AND ra.auth_id = a.id
	)
  </select>
</mapper>