<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bnsr.edu_yun.frontstage.train.mapper.TrainCourseMapper" >
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.train.po.TrainCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="source_id" property="source_id" jdbcType="BIGINT" />
    <result column="course_id" property="course_id" jdbcType="BIGINT" />
    <result column="is_required" property="is_required" jdbcType="INTEGER" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="source_type" property="source_type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    id, source_id, course_id, is_required, credit, seq, source_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from train_course
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    delete from train_course
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.train.po.TrainCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into train_course (source_id, course_id, is_required, 
      credit, seq, source_type
      )
    values (#{source_id,jdbcType=BIGINT}, #{course_id,jdbcType=BIGINT}, #{is_required,jdbcType=INTEGER}, 
      #{credit,jdbcType=INTEGER}, #{seq,jdbcType=INTEGER}, #{source_type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.TrainCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into train_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="source_id != null" >
        source_id,
      </if>
      <if test="course_id != null" >
        course_id,
      </if>
      <if test="is_required != null" >
        is_required,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="source_type != null" >
        source_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="source_id != null" >
        #{source_id,jdbcType=BIGINT},
      </if>
      <if test="course_id != null" >
        #{course_id,jdbcType=BIGINT},
      </if>
      <if test="is_required != null" >
        #{is_required,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="source_type != null" >
        #{source_type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.TrainCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    update train_course
    <set >
      <if test="source_id != null" >
        source_id = #{source_id,jdbcType=BIGINT},
      </if>
      <if test="course_id != null" >
        course_id = #{course_id,jdbcType=BIGINT},
      </if>
      <if test="is_required != null" >
        is_required = #{is_required,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="source_type != null" >
        source_type = #{source_type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.train.po.TrainCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    update train_course
    set source_id = #{source_id,jdbcType=BIGINT},
      course_id = #{course_id,jdbcType=BIGINT},
      is_required = #{is_required,jdbcType=INTEGER},
      credit = #{credit,jdbcType=INTEGER},
      seq = #{seq,jdbcType=INTEGER},
      source_type = #{source_type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="queryTrainCourse" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView" resultType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView">
  	SELECT t.*, c.title, co.img,u.realname as username,
  			<if test="flag == 1">
  				co.price as coursePrice
  			</if>
  			<if test="flag != 1">
	  			c.validity,
				count(cs.id) as studentNum,
				c.hours as hourNum
  			</if>
	FROM train_course t 
	LEFT JOIN course c ON t.course_id = c.id
 	LEFT JOIN course_info co ON  t.course_id = co.course_id
 	<if test="flag != 1">
		LEFT JOIN (
				SELECT us.learn_id,us.id 
				FROM user_study us 
				WHERE us.source_type=0 
				AND (us.status is null or us.status=0 or us.status=3)
			) cs ON t.course_id = cs.learn_id
	</if>
	LEFT JOIN user u ON c.user_id=u.id
	WHERE t.source_id=${source_id} 
		AND t.source_type = ${source_type} 
  	GROUP BY t.course_id
	ORDER BY t.seq asc
  </select>
  
  <select id="queryPhaseCourse" resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseView">
  	SELECT tc.source_id as phaseId,c.id, c.title,c.hours
	FROM  train_course tc 
	LEFT JOIN course c ON tc.course_id = c.id
	WHERE tc.source_type = 1
	AND is_required = #{isRequired}
	AND tc.source_id = #{phaseId}
	GROUP BY tc.course_id
  </select>
  
  <select id="deletePhaseCourse" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView">
 	DELETE FROM train_course
    WHERE source_id = #{phaseId}
   	<if test="list!=null">
		AND course_id in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
             #{item}  
       	</foreach>  
	</if>
    AND source_type = 1
  </select>
  
  <select id="queryRequiredCourse" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView" resultType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView" >
  	SELECT tc.course_id FROM train_course tc 
  	WHERE tc.is_required = 0 
	AND tc.source_id=${source_id} 
	AND tc.source_type = ${source_type} 
  </select>
  
  <select id="queryTrainCourseExam" resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseView">
  	SELECT *,(studentNum-unfinishedNum) AS finishedNum FROM(
  	SELECT tc.source_id AS phaseId,c.id, c.title,c.hours,cla.id AS class_id,
  	cla.type AS class_type,(SELECT COUNT(DISTINCT utc.user_id) 
  	FROM user_train_class utc
  	LEFT JOIN user_study us ON us.id=utc.user_study_id
  	WHERE utc.class_id=#{id} AND utc.source_id=tc.source_id AND utc.course_id=tc.course_id
  	AND utc.source_type=tc.source_type AND us.status NOT IN (1,2) ) AS studentNum,
  	(SELECT COUNT(DISTINCT utc.user_id) 
  	FROM user_train_class utc
  	LEFT JOIN user_study us ON us.id=utc.user_study_id
  	WHERE utc.is_studyed=0 AND utc.class_id=#{id} AND utc.source_id=tc.source_id AND utc.course_id=tc.course_id
  	AND utc.source_type=tc.source_type AND us.status NOT IN (1,2) ) AS unfinishedNum
	FROM  train_course tc 
	LEFT JOIN course c ON tc.course_id = c.id
    LEFT JOIN class_relation cr ON cr.source_id = c.id
    LEFT JOIN class cla ON cla.id= cr.class_id
	WHERE tc.source_type = #{trainType} AND cr.source_type=0 
	AND is_required = #{isRequired}	AND cla.type=2
	AND tc.source_id = #{phaseId}
	) a
	<!-- GROUP BY tc.course_id -->
  </select>
  
  <select id="queryTrainCourseOfTrainCount" resultType="java.lang.Integer" parameterType="cn.bnsr.edu_yun.frontstage.train.view.ClassView">
  	SELECT count(id) FROM train_course WHERE source_id=${source_id} AND source_type=${trainType} LIMIT 1
  </select>
  <!-- 只有简单培训有效，查询必修选修数据 -->
    <select id="queryCourseStudy" resultType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView">
  	SELECT tc.id,c.title,tc.course_id,tc.source_id,
	(SELECT COUNT(*) FROM user_train_class utc WHERE utc.source_id=${source_id} AND utc.course_id=tc.course_id AND utc.is_studyed=1) AS do_count,
	(SELECT COUNT(*) FROM user_train_class utc WHERE utc.source_id=${source_id} AND utc.course_id=tc.course_id AND utc.is_studyed=0) AS not_do_count
 	FROM train_course tc 
	LEFT JOIN course c ON c.id=tc.course_id
	WHERE tc.source_id=${source_id}
 	AND tc.source_type=0
 	and tc.is_required=${is_required}
  </select>
  <!-- 只有简单培训有效，查询必修选修数据 -->
    <select id="queryCount" resultType="java.lang.Integer" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView">
  	SELECT count(id) FROM train_course tc 
	WHERE tc.source_id=${source_id}
 	AND tc.source_type=0
 	and tc.is_required=${is_required}
  </select>
  
   <select id="queryUserCourseStudy" resultType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TrainCourseView">
  		SELECT c.title,utc.is_studyed FROM user_train_class utc
		LEFT JOIN train_course tc ON tc.source_id=utc.source_id 
		AND tc.source_type=0 AND utc.course_id=tc.course_id
		LEFT JOIN course c ON c.id=tc.course_id
 		WHERE utc.user_id=${user_id} 
 		AND utc.source_id=${source_id}  
 		AND utc.source_type=0 
 		AND tc.is_required=${is_required}

  </select>
</mapper>