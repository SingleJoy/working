package cn.bnsr.edu_yun.interceptor;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import cn.bnsr.edu_yun.backstage.base.po.SysLog;
import cn.bnsr.edu_yun.backstage.base.service.SysLogService;
import cn.bnsr.edu_yun.frontstage.base.service.AreaService;
import cn.bnsr.edu_yun.util.AddressUtils;
import cn.bnsr.edu_yun.util.IpUtil;

public class AreaInterceptor extends HandlerInterceptorAdapter {

	private final Logger log = LoggerFactory.getLogger(AreaInterceptor.class);

	@Autowired
	private AreaService areaService;
	@Autowired
	private SysLogService sysLogService;
	

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		log.info("===========AreaInterceptor.preHandle============");
		// 获取用户登录的外网IP
		String networkIp = IpUtil.getIpAddr(request);
		networkIp = StringUtils.isBlank(networkIp) ? "" : networkIp;
		if (!"".equals(networkIp)&&(!"本地".equals(networkIp)&&!"127.0.0.1".equals(networkIp))) {
			SysLog syslog = new SysLog();
			syslog.setRemote_ip(networkIp);
			syslog.setMsg("拦截测试ip");
			sysLogService.saveSysLog(syslog);
			HttpSession session = request.getSession();
			String theArea = (String) session.getAttribute(networkIp);
			if(theArea!=null&&theArea!=""){//找到允许访问过的ip 及 地址了
				return true;
			}else{//这是新的ip，需要验证
				// 地理位置 省市
				String address = "";
				Map<String, String> addressMap = AddressUtils.getAddress(networkIp, "utf-8");
				if (addressMap != null && (addressMap.get("region") != null)) {
					address = addressMap.get("region");
					syslog.setAddress(address);
					syslog.setMsg("拦截测试地址");
					sysLogService.saveSysLog(syslog);
					if (address!=""&&address!="内网IP") {
						String areas = areaService.selectCloseArea();
						if(areas.indexOf(address)!=-1){//该省暂未开放
							log.info("Interceptor："+address+"还未开放，敬请期待！");  
							request.setAttribute("msg", "<p style='font-size:12px;'>抱歉，"+address+"不再服务区内！</p>");
							request.getRequestDispatcher("../area_close.jsp").forward(request, response);  
							syslog.setMsg("拦截测试地区关闭");
							sysLogService.saveSysLog(syslog);
							return false;
						}else{
							//获取省、直辖市、自治区id
							String id = areaService.selectIdByName(address);
							syslog.setProvince_id(id);
							//该省已经开放,把市也加进去
							if(addressMap.get("city")!=null){
								address += addressMap.get("city");
							}
							session.setAttribute(networkIp, address);
							syslog.setMsg("拦截测试地区开放");
							sysLogService.saveSysLog(syslog);
							return true;
						}
					}
					if(address=="内网IP"){//没有找到地理位置，排除内网的情况
						return true;
					}
				}
			}
		}
		if(networkIp=="本地"||"127.0.0.1".equals(networkIp)){//公司内网要放过啦
			return true;
		}
		request.setAttribute("msg", "<p style='font-size:12px;'>抱歉，找不到您的地址了！</p>");
		request.getRequestDispatcher("../area_close.jsp").forward(request, response);  
		return false;
	}

}
