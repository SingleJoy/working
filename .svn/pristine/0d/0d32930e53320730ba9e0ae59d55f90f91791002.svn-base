<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bnsr.edu_yun.frontstage.train.mapper.UserStudyMapper" >
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.train.po.UserStudy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="add_time" property="add_time" jdbcType="TIMESTAMP" />
    <result column="validity_time" property="validity_time" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="source_type" property="source_type" jdbcType="INTEGER" />
    <result column="source_id" property="source_id" jdbcType="BIGINT" />
    <result column="is_studyed" property="is_studyed" jdbcType="INTEGER" />
    <result column="learn_id" property="learn_id" jdbcType="BIGINT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="complete_time" property="complete_time" jdbcType="TIMESTAMP" />
    <result column="last_browse_time" property="last_browse_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    id, user_id, remarks, add_time, validity_time, status, source_type, source_id, is_studyed, learn_id, reason, complete_time,last_browse_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_study
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    delete from user_study
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserStudy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_study (user_id, remarks, add_time, 
      validity_time, status, source_type, 
      source_id, is_studyed, learn_id,reason,complete_time,last_browse_time)
    values (#{user_id,jdbcType=BIGINT}, #{remarks,jdbcType=VARCHAR}, #{add_time,jdbcType=TIMESTAMP}, 
      #{validity_time,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{source_type,jdbcType=INTEGER}, 
      #{source_id,jdbcType=BIGINT}, #{is_studyed,jdbcType=INTEGER},#{learn_id,jdbcType=BIGINT},
      #{reason,jdbcType=VARCHAR},#{complete_time,jdbcType=TIMESTAMP},#{last_browse_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserStudy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_study
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="add_time != null" >
        add_time,
      </if>
      <if test="validity_time != null" >
        validity_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="source_type != null" >
        source_type,
      </if>
      <if test="source_id != null" >
        source_id,
      </if>
      <if test="is_studyed != null" >
        is_studyed,
      </if>
      <if test="learn_id != null" >
        learn_id,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="complete_time != null" >
        complete_time,
      </if>
      <if test="last_browse_time != null" >
        last_browse_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="add_time != null" >
        #{add_time,jdbcType=TIMESTAMP},
      </if>
      <if test="validity_time != null" >
        #{validity_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="source_type != null" >
        #{source_type,jdbcType=INTEGER},
      </if>
      <if test="source_id != null" >
        #{source_id,jdbcType=BIGINT},
      </if>
      <if test="is_studyed != null" >
        #{is_studyed,jdbcType=INTEGER},
      </if>
      <if test="learn_id != null" >
        #{learn_id,jdbcType=BIGINT},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="complete_time != null" >
        #{complete_time,jdbcType=TIMESTAMP},
      </if>
      <if test="last_browse_time != null" >
        #{last_browse_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserStudy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    update user_study
    <set >
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="add_time != null" >
        add_time = #{add_time,jdbcType=TIMESTAMP},
      </if>
      <if test="validity_time != null" >
        validity_time = #{validity_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="source_type != null" >
        source_type = #{source_type,jdbcType=INTEGER},
      </if>
      <if test="source_id != null" >
        source_id = #{source_id,jdbcType=BIGINT},
      </if>
      <if test="is_studyed != null" >
        is_studyed = #{is_studyed,jdbcType=INTEGER},
      </if>
      <if test="learn_id != null" >
        learn_id = #{learn_id,jdbcType=BIGINT},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="complete_time != null" >
        complete_time = #{complete_time,jdbcType=TIMESTAMP},
      </if>
      <if test="last_browse_time != null" >
        last_browse_time = #{last_browse_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserStudy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 20 15:07:28 CST 2016.
    -->
    update user_study
    set user_id = #{user_id,jdbcType=BIGINT},
      remarks = #{remarks,jdbcType=VARCHAR},
      add_time = #{add_time,jdbcType=TIMESTAMP},
      validity_time = #{validity_time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      source_type = #{source_type,jdbcType=INTEGER},
      source_id = #{source_id,jdbcType=BIGINT},
      is_studyed = #{is_studyed,jdbcType=INTEGER},
      learn_id = #{learn_id,jdbcType=BIGINT},
      reason = #{reason,jdbcType=VARCHAR},
      complete_time = #{complete_time,jdbcType=TIMESTAMP},
      last_browse_time = #{last_browse_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="countStudent" resultType="java.lang.Integer" parameterType="cn.bnsr.edu_yun.frontstage.train.view.UserStudyView" >
    SELECT 
    COUNT(*)
    FROM user_study
    WHERE status NOT IN (1,2)
 	<!-- <if test="sourceType==0">
    	status = 0
    </if>
    <if test="sourceType==1">
    	status = 3
    </if> -->
    <if test="userId != null" >
        AND user_id = #{userId}
    </if>
    <if test="sourceId != null" >
        AND source_id = #{sourceId}
    </if>
    <if test="sourceType != null" >
        AND source_type = #{sourceType}
    </if>
    <if test="learnId != null" >
        AND learn_id = #{learnId}
    </if>
    <if test="addTime != null">
        AND #{addTime} > add_time  
    </if>
  <if test="is_studyed != null">
        AND is_studyed = #{is_studyed}
    </if>
    
    
  </select>
  <select id="searchIsPay" resultType="cn.bnsr.edu_yun.frontstage.train.po.UserStudy" parameterType="cn.bnsr.edu_yun.frontstage.train.view.UserStudyView" >
  SELECT 
    us.status,us.id,us.source_id
    FROM user_study us 
    <if test="jumpType == 0">
    	LEFT JOIN class_belongs cb 
		ON cb.class_id=us.source_id
		AND cb.type=us.source_type 
    </if>
    WHERE 1=1
    <if test="userId != null" >
        AND us.user_id = #{userId}
    </if>
    <if test="sourceId != null" >
        AND us.source_id = #{sourceId}
    </if>
    <if test="sourceType != null" >
        AND us.source_type = #{sourceType}
    </if>
    <if test="learnId != null" >
        AND us.learn_id = #{learnId}
    </if>
    <if test="addTime != null">
        AND #{addTime} > us.add_time  
    </if>
 	<if test="is_studyed != null">
        AND us.is_studyed = #{is_studyed}
    </if>
     <if test="status != null">
        AND us.status = #{status}
    </if>
    <if test="status == null">
        AND us.status!=1 and us.status!=2
    </if>
    <choose>
		<when test="jumpType != 0">
			AND  exists (
				SELECT cb.class_id
				FROM class_belongs cb
				WHERE cb.source_type = ${jumpType-1}
				AND cb.source_id = ${jumpId}
				AND cb.`status` = 0
				AND cb.type = 0
				AND cb.class_id = us.source_id
			)
		</when>
		<when test="jumpType == 0">
			AND cb.id is null
		</when>
	</choose>
  </select>
  <select id="searchUserStudy" resultType="cn.bnsr.edu_yun.frontstage.train.po.UserStudy" parameterType="cn.bnsr.edu_yun.frontstage.train.view.UserStudyView" >
   	SELECT us.source_id, us.id,us.is_studyed  
   	FROM user_study us
    <if test="jumpType == 0">
    	LEFT JOIN class_belongs cb 
		ON cb.class_id=us.source_id
		AND cb.type=us.source_type 
    </if>
    WHERE 
    1=1
    <if test="sourceType==0">
   and  us.status = 0
    </if>
    <if test="sourceType==1">
    and us.status = 3
    </if>
    <if test="userId != null" >
        AND us.user_id = #{userId}
    </if>
    <if test="sourceType != null" >
        AND us.source_type = #{sourceType}
    </if>
    <if test="learnId != null" >
        AND us.learn_id = #{learnId}
    </if>
     <if test="sourceId != null" >
        AND us.source_id = #{sourceId}
    </if>
    <choose>
		<when test="jumpType != 0">
			AND  exists (
				SELECT cb.class_id
				FROM class_belongs cb
				WHERE cb.source_type = ${jumpType-1}
				AND cb.source_id = ${jumpId}
				AND cb.`status` = 0
				AND cb.type = 0
				AND cb.class_id = us.source_id
			)
		</when>
		<when test="jumpType == 0">
			AND cb.id is null
		</when>
	</choose>
  </select>
  
  
  <select id="searchStudent" resultType="cn.bnsr.edu_yun.frontstage.train.view.UserStudyView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.UserStudyView" >
     SELECT (CASE WHEN u.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 2 AND defaulted = 0 order by upload_time desc limit 1) ELSE u.icon END) AS icon, u.username as studentName, u.id as userId, u.realname as realName, 
		s.remarks, s.add_time as addTime, s.validity_time as validityTime, s.id,
                s.source_id as sourceId, s.source_type as sourceType,s.learn_id as learnId,
		TIMESTAMPDIFF(HOUR, s.add_time,s.validity_time) as overTime,
		ui.profile, p.attent_count as attentNum, p.is_attented_count as fansNum
  	FROM user_study s 
  	LEFT JOIN user u ON  u.id = s.user_id
  	LEFT JOIN user_info ui ON  ui.user_id = s.user_id
  	LEFT JOIN user_property p ON p.id = u.property_id
  	WHERE s.source_id = ${sourceId} AND s.source_type=${sourceType}
  	AND s.learn_id = ${learnId}
  	AND s.status NOT IN (1,2)
  	<if test="studentName != null and studentName !='' ">
	      <![CDATA[AND  u.username LIKE '%${studentName}%']]>  
	</if>
	ORDER BY s.id desc
	<if test="paging != null and paging == 1 ">
	LIMIT ${startLine},${rows}
	</if>
  </select>
  <!-- distinct 防止建班老师同一门课有多个班级 -->
  <select id="countMyClass" resultType="java.lang.Integer" parameterType="cn.bnsr.edu_yun.frontstage.train.view.StudyCenterView" >
    SELECT 
    COUNT(DISTINCT(s.learn_id))
  	FROM user_study s 
  	WHERE s.status=0
  	<if test="user_id != null" >
        AND s.user_id = #{user_id,jdbcType=BIGINT}
    </if>
    <if test="is_studyed != null" >
        AND s.is_studyed=#{is_studyed,jdbcType=INTEGER}
    </if>
  </select>
  
  <select id="countUserSutdy" parameterType="cn.bnsr.edu_yun.frontstage.train.view.StudyView" resultType="java.lang.Integer">
  	SELECT <if test="is_studyed !=-1 " >COUNT(DISTINCT us.learn_id)</if>
  	<if test="is_studyed ==-1 " >COUNT(*)</if>
  	FROM user_study us 
  	<if test="source_type ==0 " >
  		LEFT JOIN course c ON c.id = us.learn_id
		LEFT JOIN course_info u ON u.course_id = c.id
		LEFT JOIN class cl on us.source_id = cl.id 
  	</if>
  	<if test="source_type ==1 " >
		INNER JOIN train t ON t.id = us.learn_id AND us.user_id = #{user_id,jdbcType=BIGINT}
		LEFT JOIN class cl ON cl.id = us.source_id AND cl.type = 1
  	</if>
  	
	WHERE us.user_id = #{user_id,jdbcType=BIGINT}
	AND us.source_type =  #{source_type,jdbcType=INTEGER}
	<if test="is_studyed ==-1 " >
	AND us.status!=1 AND us.status!=2
	</if>
 	<if test="source_type ==0 " >
 	<if test="is_studyed !=-1 " >
		AND us.status=0
		</if>
	</if>
 	<if test="source_type ==1 " >
 	<if test="is_studyed !=-1 " >
		AND us.status=3
		</if>
	</if>
	<choose>
		<when test="is_studyed ==0">
  			AND cl.close_time >= DATE_FORMAT(NOW(),'%Y-%m-%d')
  			AND us.is_studyed=#{is_studyed,jdbcType=INTEGER}
  		</when>
		<when test="is_studyed == 1">
			AND (cl.close_time &lt; DATE_FORMAT(NOW(),'%Y-%m-%d')
			OR us.is_studyed=#{is_studyed,jdbcType=INTEGER})
		</when>
		<otherwise>
		<if test="is_studyed !=-1 " >
  			AND us.is_studyed=#{is_studyed,jdbcType=INTEGER}
  			</if>
  		</otherwise>
	</choose>
  </select>
  <select id="queryUserStudy" parameterType="cn.bnsr.edu_yun.frontstage.train.view.StudyView" resultType="cn.bnsr.edu_yun.frontstage.train.view.StudyView">
  	<if test="source_type ==0 " >
  	<if test="is_studyed ==-1">
  	SELECT us.add_time,c.title AS name
  	FROM user_study us 
  	LEFT JOIN course c ON c.id = us.learn_id
  	</if>
  	<!-- -2是用于移动端的学习列表 -->
  		<if test="is_studyed ==0 or is_studyed==-2">
 			SELECT us.add_time,us.is_studyed,c.id,(CASE WHEN u.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 3 AND defaulted = 0 order by upload_time desc limit 1) ELSE u.img END) AS img,c.title AS name,cl.close_time as end_time,us.id as user_study_id,c.hours,cl.id as classId
	  		FROM user_study us 
			LEFT JOIN course c ON c.id = us.learn_id
			LEFT JOIN course_info u ON u.course_id = c.id
			LEFT JOIN class cl on us.source_id = cl.id 
		</if>
		<if test="is_studyed ==1">
			SELECT us.add_time,us.is_studyed,c.id,(CASE WHEN u.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 3 AND defaulted = 0 order by upload_time desc limit 1) ELSE u.img END) AS img,c.title AS name,cl.close_time as end_time,uc.score,cf.id as cert_id,cf.cert_name,us.id as user_study_id,c.hours,uc.score 
	  		FROM user_study us 
			LEFT JOIN course c ON c.id = us.learn_id
			LEFT JOIN course_info u ON u.course_id = c.id
			LEFT JOIN class cl on us.source_id = cl.id
			LEFT JOIN user_cert uc on us.id = uc.user_study_id
			LEFT JOIN certificate cf on cf.id = uc.cert_id
		</if>
  	</if>
  	<if test="source_type ==1 " >
	  	SELECT us.add_time,us.is_studyed,t.id,t.type,(CASE WHEN t.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 4 AND defaulted = 0 order by upload_time desc limit 1) ELSE t.img END) AS img,t.`name`,us.id as user_study_id,cf.id as cert_id,cl.close_time as end_time,cl.id as classId
	  	<if test="type ==0">
	  	,tes.total_required as allNum
	  	</if>
	  	FROM user_study us 
		INNER JOIN train t ON t.id = us.learn_id AND us.user_id = #{user_id,jdbcType=BIGINT}
		LEFT JOIN class cl ON cl.id = us.source_id AND cl.type = 1
		LEFT JOIN user_cert uc on us.id = uc.user_study_id
		LEFT JOIN certificate cf on cf.id = uc.cert_id
		<if test="type ==0">
			LEFT JOIN train_exam_standard tes ON t.id = tes.train_id
		</if>
  	</if>
	WHERE us.user_id = #{user_id,jdbcType=BIGINT}
	AND us.source_type =  #{source_type,jdbcType=INTEGER}
	<if test="is_studyed ==-1 " >
	AND us.status!=1 AND us.status!=2
	</if>
	<if test="source_type ==0 " >
	<if test="is_studyed !=-1 " >
		AND us.status=0
		</if>
		<choose>
			<when test="is_studyed ==0">
  				AND cl.close_time >= DATE_FORMAT(NOW(),'%Y-%m-%d')
  				AND us.is_studyed=#{is_studyed,jdbcType=INTEGER}
  			</when>
  			<when test="is_studyed ==1">
  				AND (cl.close_time &lt; DATE_FORMAT(NOW(),'%Y-%m-%d')
  				OR us.is_studyed=#{is_studyed,jdbcType=INTEGER})
  			</when>
  			<when test="is_studyed ==-2">
  			</when>
  			<otherwise>
  			<if test="is_studyed !=-1 " >
  				AND us.is_studyed=#{is_studyed,jdbcType=INTEGER}
  				</if>
  			</otherwise>
  		</choose>
	</if>
  	<if test="source_type ==1 " >
  	<if test="is_studyed !=-1 " >
  		AND us.status=3
  		</if>
  		<choose>
  			<when test="is_studyed ==0">
  				AND cl.close_time >= DATE_FORMAT(NOW(),'%Y-%m-%d') 
  				AND us.is_studyed=#{is_studyed,jdbcType=INTEGER}
  			</when>
  			<when test="is_studyed ==1">
  				AND (cl.close_time &lt; DATE_FORMAT(NOW(),'%Y-%m-%d')
  				OR us.is_studyed=#{is_studyed,jdbcType=INTEGER})
  			</when>
  			<otherwise>
  			<if test="is_studyed !=-1 " >
  				AND us.is_studyed=#{is_studyed,jdbcType=INTEGER}
  				</if>
  			</otherwise>
  		</choose>
	</if>
	<if test="is_studyed !=-1 " >
	GROUP BY us.learn_id
	</if>
	<choose>
		<when test="sortEndTime==1">
			ORDER BY cl.close_time desc
		</when>
		<otherwise>
			ORDER BY us.last_browse_time desc
		</otherwise>
	</choose>
	<if test="rows>0">
		LIMIT ${startLine},${rows}
	</if>
  </select>
  
   <select id="selectUserDetail" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserStudy"  resultType="cn.bnsr.edu_yun.frontstage.base.view.UserDetailView">
  	SELECT u.id as userId, u.username as userName, u.phone,
  	u.email, u.wealth, u.score, u.realname as realName,
  	us.remarks,u.user_type as userType, ui.sex FROM user u 
  	LEFT JOIN user_info ui ON u.id=ui.user_id
  	LEFT JOIN user_study us ON us.user_id=u.id
  	WHERE u.id = ${user_id} AND us.source_id=${source_id} AND us.source_type=${source_type}
  </select>
  
  <select id="userStudyContentStati" resultType="cn.bnsr.edu_yun.backstage.content.view.ContentStatiView" parameterType="cn.bnsr.edu_yun.backstage.content.view.ContentStatiView">
  	SELECT DATE_FORMAT(add_time, '%Y-%m-%d') days, COUNT(us.id) AS newNum
	FROM user_study us
	<choose>
		<when test="source_type==0">
			INNER JOIN course cou ON us.learn_id = cou.id AND cou.type=${type }
		</when>
		<when test="source_type==1">
			INNER JOIN train t ON t.id = us.learn_id AND t.type = ${type }
		</when>
	</choose>
	WHERE us.source_type= ${source_type }
		<if  test="monthType == 0 or monthType == 1 ">
			<![CDATA[AND us.add_time LIKE  '${days}%']]>
		</if>
		<if  test="monthType == 2 or monthType == 3 ">
		 	<![CDATA[ AND (us.add_time >= '${startTime}' AND us.add_time <= '${endTime}' )]]>
		</if>
	GROUP BY days
  </select>
  
  <select id="queryStuArea" resultType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView">
      SELECT COUNT(DISTINCT us.id) AS newNum,a.area_name AS province 
      FROM user_study us 
	  INNER JOIN sys_log sl ON us.user_id=sl.user_id
	  INNER JOIN area a ON a.id=sl.province_id
	  WHERE us.source_type=0 AND sl.log_type=0 AND sl.do_from != 2
		<if  test="startTime != '' and endTime != '' ">
		 	<![CDATA[ AND us.add_time >= '${startTime}' AND us.add_time < '${endTime}' ]]>  
		</if>
		<if  test="days != '' ">
			<![CDATA[AND us.add_time LIKE '${days}%' ]]>  
		</if>
	  GROUP BY province
  
  </select>
</mapper>