<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bnsr.edu_yun.backstage.base.mapper.SysLogMapper">
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.backstage.base.po.SysLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="user_name" />
    <result column="user_id" jdbcType="BIGINT" property="user_id" />
    <result column="log_type" jdbcType="INTEGER" property="log_type" />
    <result column="do_url" jdbcType="VARCHAR" property="do_url" />
    <result column="do_from" jdbcType="VARCHAR" property="do_from" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="local_ip" jdbcType="VARCHAR" property="local_ip" />
    <result column="remote_ip" jdbcType="VARCHAR" property="remote_ip" />
    <result column="browser" jdbcType="VARCHAR" property="browser" />
    <result column="sys_name" jdbcType="VARCHAR" property="sys_name" />
    <result column="do_id" jdbcType="BIGINT" property="do_id" />
    <result column="do_type" jdbcType="INTEGER" property="do_type" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="device" jdbcType="INTEGER" property="device" />
    <result column="province_id" jdbcType="VARCHAR" property="province_id" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.bnsr.edu_yun.backstage.base.po.SysLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    <result column="msg" jdbcType="LONGVARCHAR" property="msg" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    id, user_name, user_id, log_type, do_url, do_from, create_time, local_ip, remote_ip, 
    browser, sys_name, do_id, do_type, address, device, province_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    delete from sys_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.backstage.base.po.SysLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_log (user_name, user_id, log_type, 
      do_url, do_from, create_time, 
      local_ip, remote_ip, browser, 
      sys_name, do_id, do_type, 
      msg,address,device,province_id)
    values (#{user_name,jdbcType=VARCHAR}, #{user_id,jdbcType=BIGINT}, #{log_type,jdbcType=INTEGER}, 
      #{do_url,jdbcType=VARCHAR}, #{do_from,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{local_ip,jdbcType=VARCHAR}, #{remote_ip,jdbcType=VARCHAR}, #{browser,jdbcType=VARCHAR}, 
      #{sys_name,jdbcType=VARCHAR}, #{do_id,jdbcType=BIGINT}, #{do_type,jdbcType=INTEGER}, 
      #{msg,jdbcType=LONGVARCHAR}, #{address,jdbcType=VARCHAR}, #{device,jdbcType=INTEGER}, #{province_id,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.backstage.base.po.SysLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_name != null">
        user_name,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="log_type != null">
        log_type,
      </if>
      <if test="do_url != null">
        do_url,
      </if>
      <if test="do_from != null">
        do_from,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="local_ip != null">
        local_ip,
      </if>
      <if test="remote_ip != null">
        remote_ip,
      </if>
      <if test="browser != null">
        browser,
      </if>
      <if test="sys_name != null">
        sys_name,
      </if>
      <if test="do_id != null">
        do_id,
      </if>
      <if test="do_type != null">
        do_type,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="device != null">
        device,
      </if>
      <if test="province_id != null">
        province_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_name != null">
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="log_type != null">
        #{log_type,jdbcType=INTEGER},
      </if>
      <if test="do_url != null">
        #{do_url,jdbcType=VARCHAR},
      </if>
      <if test="do_from != null">
        #{do_from,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="local_ip != null">
        #{local_ip,jdbcType=VARCHAR},
      </if>
      <if test="remote_ip != null">
        #{remote_ip,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        #{browser,jdbcType=VARCHAR},
      </if>
      <if test="sys_name != null">
        #{sys_name,jdbcType=VARCHAR},
      </if>
      <if test="do_id != null">
        #{do_id,jdbcType=BIGINT},
      </if>
      <if test="do_type != null">
        #{do_type,jdbcType=INTEGER},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=LONGVARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="device != null">
        #{device,jdbcType=INTEGER},
      </if>
      <if test="province_id != null">
        #{province_id,jdbcType=VARCHAR},
      </if>
      
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.backstage.base.po.SysLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    update sys_log
    <set>
      <if test="user_name != null">
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="log_type != null">
        log_type = #{log_type,jdbcType=INTEGER},
      </if>
      <if test="do_url != null">
        do_url = #{do_url,jdbcType=VARCHAR},
      </if>
      <if test="do_from != null">
        do_from = #{do_from,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="local_ip != null">
        local_ip = #{local_ip,jdbcType=VARCHAR},
      </if>
      <if test="remote_ip != null">
        remote_ip = #{remote_ip,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        browser = #{browser,jdbcType=VARCHAR},
      </if>
      <if test="sys_name != null">
        sys_name = #{sys_name,jdbcType=VARCHAR},
      </if>
      <if test="do_id != null">
        do_id = #{do_id,jdbcType=BIGINT},
      </if>
      <if test="do_type != null">
        do_type = #{do_type,jdbcType=INTEGER},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=LONGVARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="device != null">
        device = #{device,jdbcType=INTEGER},
      </if>
      <if test="province_id != null">
        province_id = #{province_id,jdbcType=VARCHAR},
      </if>
      
      
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.bnsr.edu_yun.backstage.base.po.SysLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    update sys_log
    set user_name = #{user_name,jdbcType=VARCHAR},
      user_id = #{user_id,jdbcType=BIGINT},
      log_type = #{log_type,jdbcType=INTEGER},
      do_url = #{do_url,jdbcType=VARCHAR},
      do_from = #{do_from,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      local_ip = #{local_ip,jdbcType=VARCHAR},
      remote_ip = #{remote_ip,jdbcType=VARCHAR},
      browser = #{browser,jdbcType=VARCHAR},
      sys_name = #{sys_name,jdbcType=VARCHAR},
      do_id = #{do_id,jdbcType=BIGINT},
      do_type = #{do_type,jdbcType=INTEGER},
      msg = #{msg,jdbcType=LONGVARCHAR},
      address = #{address,jdbcType=VARCHAR},
      device =  #{device,jdbcType=INTEGER},
      province_id = #{province_id,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.backstage.base.po.SysLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 27 10:43:27 CST 2017.
    -->
    update sys_log
    set user_name = #{user_name,jdbcType=VARCHAR},
      user_id = #{user_id,jdbcType=BIGINT},
      log_type = #{log_type,jdbcType=INTEGER},
      do_url = #{do_url,jdbcType=VARCHAR},
      do_from = #{do_from,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      local_ip = #{local_ip,jdbcType=VARCHAR},
      remote_ip = #{remote_ip,jdbcType=VARCHAR},
      browser = #{browser,jdbcType=VARCHAR},
      sys_name = #{sys_name,jdbcType=VARCHAR},
      do_id = #{do_id,jdbcType=BIGINT},
      do_type = #{do_type,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      device = #{device,jdbcType=INTEGER},
      province_id =  #{province_id,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="sysLogSql">
  	 <if test="do_from != null and do_from != ''">
    	AND do_from = ${do_from}
     </if>
     <if test="user_name != null and user_name != ''">
    	<![CDATA[AND user_name LIKE '%${user_name}%']]>  
     </if>
     <if test="time_start != null and time_start != ''">
   		<![CDATA[ AND create_time >= '${time_start}']]>  
     </if>
     <if test="time_end != null and time_end !='' ">
      	<![CDATA[ AND create_time <= '${time_end}']]>  
     </if>
  </sql>
  <select id="find" parameterType="cn.bnsr.edu_yun.backstage.base.view.SysLogView" resultMap="BaseResultMap">
	SELECT 
	<include refid="Base_Column_List" />
    FROM sys_log 
  	<where>
		<include refid="sysLogSql" />
	</where>
    <if test="sort !=null and order != null">
    	ORDER BY ${sort} ${order}
    </if>
    LIMIT ${page},${rows}
  </select>
  
  <select id="count" parameterType="cn.bnsr.edu_yun.backstage.base.view.SysLogView" resultType="java.lang.Long">
  	SELECT COUNT(*) FROM sys_log 
  	<where>
		<include refid="sysLogSql" />
	</where>
  </select>
  
  <select id="dataStats" resultType="cn.bnsr.edu_yun.frontstage.train.view.DataStatsView" parameterType="cn.bnsr.edu_yun.frontstage.train.view.DataStatsView">
  	SELECT DATE_FORMAT(sr.create_time, '%Y-%m-%d') days, COUNT(sr.id) AS newNum, t.countNum
	FROM sys_log sr
	LEFT JOIN (
		SELECT COUNT(*) AS countNum, s.do_id
		FROM sys_log s
		WHERE s.do_id = ${id} 
			AND s.do_type = ${dataType}
	) t ON t.do_id = sr.do_id
	WHERE sr.do_id = ${id}
		AND sr.do_type = ${dataType} 
		<if  test="monthType == 0 or monthType == 1 ">
			<![CDATA[AND sr.create_time LIKE  '${days}%']]>  
		</if>
		<if  test="monthType == 2 or monthType == 3 ">
		 	<![CDATA[ AND (sr.create_time >= '${startTime}' AND sr.create_time <= '${endTime}' )]]>  
		</if>
	GROUP BY days
  </select>
  <!-- 用户日志 -->
  <select id="searchUserLog" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserLogView" resultType="cn.bnsr.edu_yun.backstage.base.view.UserLogView">
    SELECT s.id,s.user_id,s.user_name AS username,u.phone,s.create_time,s.remote_ip AS login_ip,s.address
	FROM sys_log s 
	INNER JOIN `user` u ON u.id=s.user_id
	WHERE s.log_type=1
	<if test="user_id != null ">
    	AND s.user_id = ${user_id}
    </if>
	<if test="username != null and username != ''">
    	<![CDATA[AND s.user_name LIKE '%${username}%']]>  
    </if>
    <if test="phone != null and phone != ''">
    	<![CDATA[AND u.phone LIKE '%${phone}%']]>  
    </if>
    <if test="timeStart != null and timeStart != ''">
   		<![CDATA[ AND s.create_time >= '${timeStart}']]>  
    </if>
    <if test="timeEnd != null and timeEnd !='' ">
      	<![CDATA[ AND s.create_time <= '${timeEnd}']]>  
    </if>
	<if test="sort !=null and order != null">
    	ORDER BY ${sort} ${order}
    </if>
    LIMIT ${page},${rows}
  </select>
  
  <select id="countUserLog" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserLogView" resultType="java.lang.Long">
    SELECT COUNT(*)
	FROM sys_log s 
	INNER JOIN `user` u ON u.id=s.user_id
	WHERE s.log_type=1
	<if test="user_id != null ">
    	AND s.user_id = ${user_id}
    </if>
	<if test="username != null and username != ''">
    	<![CDATA[AND s.user_name LIKE '%${username}%']]>  
    </if>
    <if test="phone != null and phone != ''">
    	<![CDATA[AND u.phone LIKE '%${phone}%']]>  
    </if>
    <if test="timeStart != null and timeStart != ''">
   		<![CDATA[ AND s.create_time >= '${timeStart}']]>  
    </if>
    <if test="timeEnd != null and timeEnd !='' ">
      	<![CDATA[ AND s.create_time <= '${timeEnd}']]>  
    </if>
  </select>
  <!-- 统计登陆用户 -->
   <select id="queryloginStats" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView" resultType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView">
	SELECT DATE_FORMAT(sl.create_time, <if test="timeType != 4">'%Y-%m-%d'</if><if test="timeType == 4">'%H'</if>) days, 
	COUNT(DISTINCT sl.user_id) AS newNum, ${timeType} AS timeType
	FROM sys_log sl
	WHERE sl.log_type=1 
		<if  test="timeType == 0 or timeType == 1 ">
			<![CDATA[AND sl.create_time LIKE  '${days}%']]>  
		</if>
		<if  test="timeType == 2 or timeType == 3 ">
		 	<![CDATA[ AND sl.create_time >= '${startTime}' AND sl.create_time <= '${endTime}' ]]>  
		</if>
		<if  test="timeType == 4 ">
			<![CDATA[AND sl.create_time LIKE  '${days}%']]>  
		</if>
	GROUP BY days
  </select>
  
  <!-- 统计登陆用户留存数 -->
   <select id="queryloginRemain" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView" resultType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView">
	SELECT DATE_FORMAT(<if test="remain_type == 0">'${oneDay}'</if><if test="remain_type == 1">sl.create_time</if>, '%Y-%m-%d') days, 
	COUNT(DISTINCT sl.user_id) AS newNum,${countNum}-COUNT(DISTINCT sl.user_id) AS lossNum,${sort} AS sort,
	COUNT(DISTINCT sl.user_id)/${countNum}*100 AS remainRatio,(${countNum}-COUNT(DISTINCT sl.user_id))/${countNum}*100 AS lossRatio
	FROM sys_log sl INNER JOIN (SELECT u.id 
	FROM `user` u 
	WHERE u.user_type IN (1,3) AND u.status =1 
	AND u.create_time LIKE  '${days}%') x ON x.id=sl.user_id
	LEFT JOIN user_info ui ON ui.user_id=x.id
	WHERE sl.log_type=1 AND sl.user_id IS NOT NULL 
    AND sl.create_time BETWEEN '${startTime}' AND '${endTime}'
    <if test="sex != 0">
	    <!-- sex=0时查询全部，此条件也不需要了 -->
	    AND ui.sex = ${sex}
	</if>
    <if test="remain_type == 1">
	GROUP BY days
	</if>
  </select>
  
  
   <select id="queryActiveUserByMouth" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView" resultType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView">
	SELECT COUNT(DISTINCT a.user_id) AS activeNum,RIGHT(a.mouths,2) AS days FROM 
	(SELECT DISTINCT user_id,DATE_FORMAT(create_time,'%Y%m') AS mouths FROM sys_log WHERE log_type=1 AND create_time LIKE '${year}%') a 
	INNER JOIN 
	(SELECT DISTINCT user_id,DATE_FORMAT(create_time,'%Y%m') AS mouths FROM sys_log WHERE log_type=1 <![CDATA[AND create_time BETWEEN '${startTime}' AND '${endTime}']]>) b 
	ON a.user_id=b.user_id AND period_add(a.mouths,-1)=b.mouths
	GROUP BY days
  </select>
  
  <select id="queryReturnUserByMouth" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView" resultType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView">
	SELECT COUNT(DISTINCT a.user_id) AS returnNum,RIGHT(a.mouths,2) AS days FROM 
	(SELECT DISTINCT user_id,DATE_FORMAT(create_time,'%Y%m') AS mouths FROM sys_log WHERE log_type=1 AND create_time LIKE '${year}%') a 
	LEFT JOIN 
	(SELECT DISTINCT user_id,DATE_FORMAT(create_time,'%Y%m') AS mouths FROM sys_log WHERE log_type=1 <![CDATA[AND create_time BETWEEN '${startTime}' AND '${endTime}']]>) b 
	ON a.user_id=b.user_id AND period_add(a.mouths,-1)=b.mouths 
	INNER JOIN (SELECT DISTINCT user_id,DATE_FORMAT(create_time,'%Y%m') AS mouths FROM sys_log WHERE log_type=1 <![CDATA[AND create_time<'${returnTime}' ]]>) c
	ON a.user_id=c.user_id AND period_add(a.mouths,-1)>c.mouths
	WHERE b.user_id IS NULL
	GROUP BY days
  </select>
  
  <select id="queryUserAddTrend" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView" resultType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView">
	SELECT  
	<choose>
	<!-- 按小时 -->
	<when test="timeUnit == 0">DATE_FORMAT(s.create_time,'%H')</when>
	<!-- 按天 -->
	<when test="timeUnit == 1">DATE_FORMAT(s.create_time,'%Y-%m-%d')</when>
	<!-- 按周 -->
	<when test="timeUnit == 2">DATE_FORMAT(SUBDATE(s.create_time,DATE_FORMAT(s.create_time,'%w')-1),'%Y-%m-%d')</when>
	<!-- 按月 -->
	<when test="timeUnit == 3">CONCAT(DATE_FORMAT(LAST_DAY(s.create_time),'%Y-%m-'),'01')</when>
	</choose>
	AS days,COUNT(s.user_id) AS newNum
	FROM sys_log s INNER JOIN `user` u ON u.id=s.user_id
	WHERE u.user_type IN (1,3) AND u.status='1' AND s.do_from !='2' AND s.log_type=0
	<if test="province_id != null and province_id!='' and province_id!='0'.toString()">
    	<!-- 按省查询 province_id = '0'时为全国，此条件也不需要了${province_id}   '0'会被mybatis强制转换成数字，即使有'',只有toString()才可以避免-->
    	AND s.province_id = "${province_id}"
	</if>
	<if test="device != null and device !=-1">
	    <!-- device=0时查询全部，此条件也不需要了 -->
	    AND s.device = ${device}
	</if>
	<if  test="startTime != '' and endTime != '' ">
	 	<![CDATA[ AND s.create_time >= '${startTime}' AND s.create_time <= '${endTime}' ]]>  
	</if>
	<if  test="days != '' ">
		<![CDATA[AND s.create_time LIKE  '${days}%']]>  
	</if>
	GROUP BY days;
  </select>
  <select id="queryUserloginTrend" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView" resultType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView">
	SELECT  
	<choose>
	<!-- 按小时 -->
	<when test="timeUnit == 0">DATE_FORMAT(s.create_time,'%H')</when>
	<!-- 按天 -->
	<when test="timeUnit == 1">DATE_FORMAT(s.create_time,'%Y-%m-%d')</when>
	<!-- 按周 -->
	<when test="timeUnit == 2">DATE_FORMAT(SUBDATE(s.create_time,DATE_FORMAT(s.create_time,'%w')-1),'%Y-%m-%d')</when>
	<!-- 按月 -->
	<when test="timeUnit == 3">CONCAT(DATE_FORMAT(LAST_DAY(s.create_time),'%Y-%m-'),'01')</when>
	</choose>
	AS days,COUNT(DISTINCT s.user_id) AS newNum
	FROM sys_log s INNER JOIN `user` u ON u.id=s.user_id
	WHERE u.user_type IN (1,3) AND u.status='1' AND s.do_from !='2' AND s.log_type=1
	<if test="province_id != null and province_id != '' and province_id!='0'.toString()">
	    <!-- 按省查询 province_id = '0'时为全国，此条件也不需要了-->
	    AND s.province_id = "${province_id}"
	</if> 
	<if test="device != null and device !=-1">
	    <!-- device=0时查询全部，此条件也不需要了 -->
	    AND s.device = ${device}
	</if>
	<if  test="startTime != '' and endTime != '' ">
	 	<![CDATA[ AND s.create_time >= '${startTime}' AND s.create_time <= '${endTime}' ]]>  
	</if>
	<if  test="days != '' ">
		<![CDATA[AND s.create_time LIKE  '${days}%']]>  
	</if>
	GROUP BY days;
  </select>
  
    <select id="countAddUser" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView" resultType="java.lang.Long">
	SELECT COUNT(s.user_id) 
	FROM sys_log s INNER JOIN `user` u ON u.id=s.user_id
	WHERE u.user_type IN (1,3) AND u.status='1' AND s.do_from !='2' AND s.log_type=0
	<if test="province_id != null and province_id != '' and province_id!='0'.toString()">
	    AND s.province_id = "${province_id}"
	</if>
	<if test="device != null and device !=-1">
	    <!-- device=0时查询全部，此条件也不需要了 -->
	    AND s.device = ${device}
	</if>
	<if  test="startTime != '' and endTime != '' ">
	 	<![CDATA[ AND s.create_time >= '${startTime}' AND s.create_time <= '${endTime}' ]]>  
	</if>
	<if  test="days != '' ">
		<![CDATA[AND s.create_time LIKE  '${days}%']]>  
	</if>
  </select>
  
   <select id="countLoginUser" parameterType="cn.bnsr.edu_yun.backstage.base.view.UserStatsView" resultType="java.lang.Long">
	SELECT COUNT(DISTINCT s.user_id) 
	FROM sys_log s INNER JOIN `user` u ON u.id=s.user_id
	WHERE u.user_type IN (1,3) AND u.status='1' AND s.do_from !='2' AND s.log_type=1
	<if test="province_id != null and province_id != '' and province_id!='0'.toString()">
	    AND s.province_id = "${province_id}"
	</if>
	<if test="device != null and device !=-1">
	    <!-- device=0时查询全部，此条件也不需要了
	    AND s.device = ${device} -->
	</if>
	<if  test="startTime != '' and endTime != '' ">
	 	<![CDATA[ AND s.create_time >= '${startTime}' AND s.create_time <= '${endTime}' ]]>  
	</if>
	<if  test="days != '' ">
		<![CDATA[AND s.create_time LIKE  '${days}%']]>  
	</if>
  </select>
  
</mapper>