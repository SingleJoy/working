<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bnsr.edu_yun.frontstage.train.mapper.CourseNoteMapper" >
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.train.po.CourseNote" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="course_id" property="course_id" jdbcType="BIGINT" />
    <result column="course_hour_id" property="course_hour_id" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="note_time" property="note_time" jdbcType="TIMESTAMP" />
    <result column="agree" property="agree" jdbcType="INTEGER" />
    <result column="is_share" property="is_share" jdbcType="TINYINT" />
     <result column="note_content" property="note_content" jdbcType="LONGVARCHAR" />
    <association property="user" resultMap="user"/>
    <association property="course_hour" resultMap="course_hour"/>
  </resultMap>
  <resultMap id="course_hour" type="cn.bnsr.edu_yun.frontstage.train.po.CourseHour">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 01 16:09:58 CST 2016.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="hour_title" jdbcType="VARCHAR" property="hour_title" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="minute" jdbcType="INTEGER" property="minute" />
    <result column="second" jdbcType="INTEGER" property="second" />
    <result column="is_free" jdbcType="INTEGER" property="is_free" />
    <result column="hour_type" jdbcType="INTEGER" property="hour_type" />
    <result column="is_release" jdbcType="INTEGER" property="is_release" />
    <result column="attribute_type" jdbcType="INTEGER" property="attribute_type" />
    <result column="hour_code" jdbcType="VARCHAR" property="hour_code" />
    <result column="hour_seq" jdbcType="INTEGER" property="hour_seq" />
    <result column="course_file_id" jdbcType="BIGINT" property="course_file_id" />
    <result column="parent_id" jdbcType="BIGINT" property="parent_id" />
    <result column="course_id" jdbcType="BIGINT" property="course_id" />
  </resultMap>
  <resultMap id="user" type="cn.bnsr.edu_yun.frontstage.base.po.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 30 15:33:41 CST 2016.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="last_login_time" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="login_count" jdbcType="INTEGER" property="login_count" />
    <result column="user_type" jdbcType="VARCHAR" property="user_type" />
    <result column="wealth" jdbcType="DOUBLE" property="wealth" />
    <result column="property_id" jdbcType="BIGINT" property="property_id" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="score" jdbcType="BIGINT" property="score" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  
   </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.bnsr.edu_yun.frontstage.train.po.CourseNote" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    <result column="note_content" property="note_content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    id, course_id, course_hour_id, user_id, note_time, agree, is_share
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    note_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course_note
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    delete from course_note
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.train.po.CourseNote" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_note (course_id, course_hour_id, user_id, 
      note_time, agree, is_share, 
      note_content)
    values (#{course_id,jdbcType=BIGINT}, #{course_hour_id,jdbcType=BIGINT}, #{user_id,jdbcType=BIGINT}, 
      #{note_time,jdbcType=TIMESTAMP}, #{agree,jdbcType=INTEGER}, #{is_share,jdbcType=TINYINT}, 
      #{note_content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.CourseNote" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_note
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="course_id != null" >
        course_id,
      </if>
      <if test="course_hour_id != null" >
        course_hour_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="note_time != null" >
        note_time,
      </if>
      <if test="agree != null" >
        agree,
      </if>
      <if test="is_share != null" >
        is_share,
      </if>
      <if test="note_content != null" >
        note_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="course_id != null" >
        #{course_id,jdbcType=BIGINT},
      </if>
      <if test="course_hour_id != null" >
        #{course_hour_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="note_time != null" >
        #{note_time,jdbcType=TIMESTAMP},
      </if>
      <if test="agree != null" >
        #{agree,jdbcType=INTEGER},
      </if>
      <if test="is_share != null" >
        #{is_share,jdbcType=TINYINT},
      </if>
      <if test="note_content != null" >
        #{note_content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.CourseNote" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    update course_note
    <set >
      <if test="course_id != null" >
        course_id = #{course_id,jdbcType=BIGINT},
      </if>
      <if test="course_hour_id != null" >
        course_hour_id = #{course_hour_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="note_time != null" >
        note_time = #{note_time,jdbcType=TIMESTAMP},
      </if>
      <if test="agree != null" >
        agree = #{agree,jdbcType=INTEGER},
      </if>
      <if test="is_share != null" >
        is_share = #{is_share,jdbcType=TINYINT},
      </if>
      <if test="note_content != null" >
        note_content = #{note_content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.bnsr.edu_yun.frontstage.train.po.CourseNote" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    update course_note
    set course_id = #{course_id,jdbcType=BIGINT},
      course_hour_id = #{course_hour_id,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=BIGINT},
      note_time = #{note_time,jdbcType=TIMESTAMP},
      agree = #{agree,jdbcType=INTEGER},
      is_share = #{is_share,jdbcType=TINYINT},
      note_content = #{note_content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.train.po.CourseNote" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 02 13:55:51 CST 2016.
    -->
    update course_note
    set course_id = #{course_id,jdbcType=BIGINT},
      course_hour_id = #{course_hour_id,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=BIGINT},
      note_time = #{note_time,jdbcType=TIMESTAMP},
      agree = #{agree,jdbcType=INTEGER},
      is_share = #{is_share,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
      <select id="selectByCourseId"  resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 04 09:22:21 CST 2016.
    -->
    SELECT 
    * FROM 
    course_note,user,course_hour
    WHERE  course_note.user_id=user.id and course_note.course_id=#{course_id,jdbcType=BIGINT}
    and course_note.course_hour_id=course_hour.id
    and course_note.is_share=1
     <if test="course_hour_id != null" >
      and course_note.course_hour_id = ${course_hour_id}
     </if>
    
    ORDER BY ${sort}  desc  LIMIT  #{start,jdbcType=BIGINT},#{pageSize,jdbcType=BIGINT} 
    
  </select>
  <select id="selectCountByCourseId"  resultType="java.lang.Integer">
  SELECT COUNT(*)  FROM course_note,user
    WHERE  course_note.user_id=user.id and course_note.course_id=#{course_id,jdbcType=BIGINT}
   and course_note.is_share=1
   <if test="course_hour_id != null" >
      and course_note.course_hour_id = ${course_hour_id}
     </if>
  </select>
   <select id="selectByHourIdAndUserId"  resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 04 09:22:21 CST 2016.
    -->
    SELECT 
    * FROM 
    course_note,user,course_hour
    WHERE  course_note.user_id=user.id
    and 
    course_note.user_id=#{user_id,jdbcType=BIGINT}
    and
    course_note.course_hour_id=course_hour.id
    and
    course_note.course_hour_id = #{course_hour_id,jdbcType=BIGINT}
  </select>
  
  <select id="search" parameterType="cn.bnsr.edu_yun.backstage.train.view.CourseNoteView" resultType="cn.bnsr.edu_yun.backstage.train.view.CourseNoteView">
    SELECT a.*,b.title as course_name,c.hour_title as course_hour_name,d.username as author_name ,
    (CASE WHEN a.id=${openId} THEN a.id ELSE 0 END) AS openId
    FROM course_note a 
    LEFT JOIN course b ON a.course_id=b.id
    LEFT JOIN course_hour c ON a.course_hour_id=c.id
    LEFT JOIN user d ON a.user_id=d.id
    WHERE 1=1 
    <if test="course_id != null and course_id !='' ">
	      <![CDATA[AND a.course_id = #{course_id,jdbcType=BIGINT}]]>
	</if>
    <if test="course_hour_id != null and course_hour_id !='' ">
	      <![CDATA[AND a.course_hour_id = #{course_hour_id,jdbcType=BIGINT}]]>
	</if>
	<if test="course_name != null and course_name !='' ">
	      <![CDATA[AND  b.title LIKE '%${course_name}%']]>  
	</if>
	<if test="note_content != null and note_content !='' ">
	      <![CDATA[AND  a.note_content LIKE '%${note_content}%']]>  
	</if>
	<if test="author_name != null and author_name !='' ">
	      <![CDATA[AND  d.username LIKE '%${author_name}%']]>  
	</if>
	<if test="sort !=null and order != null">
	      ORDER BY ${sort} ${order}
	</if>
	LIMIT ${page},${rows}
  </select>
  
  <select id="count" parameterType="cn.bnsr.edu_yun.backstage.train.view.CourseNoteView" resultType="java.lang.Long">
    SELECT COUNT(*) 
    FROM course_note a
    LEFT JOIN course b ON a.course_id=b.id
    LEFT JOIN course_hour c ON a.course_hour_id=c.id
    LEFT JOIN user d ON a.user_id=d.id
    WHERE 1=1 
    <if test="course_id != null and course_id !='' ">
	      <![CDATA[AND a.course_id = #{course_id,jdbcType=BIGINT}]]>
	</if>
    <if test="course_hour_id != null and course_hour_id !='' ">
	      <![CDATA[AND a.course_hour_id = #{course_hour_id,jdbcType=BIGINT}]]>
	</if>
	<if test="course_name != null and course_name !='' ">
	      <![CDATA[AND  b.title LIKE '%${course_name}%']]>  
	</if>
	<if test="note_content != null and note_content !='' ">
	      <![CDATA[AND  a.note_content LIKE '%${note_content}%']]>  
	</if>
	<if test="author_name != null and author_name !='' ">
	      <![CDATA[AND  d.username LIKE '%${author_name}%']]>  
	</if>
  </select>
  
  <select id="getById" parameterType="java.lang.Long" resultType="cn.bnsr.edu_yun.backstage.train.view.CourseNoteView">
    SELECT a.*,b.title as course_name,c.hour_title as course_hour_name,d.username as author_name 
    FROM course_note a 
    LEFT JOIN course b ON a.course_id=b.id
    LEFT JOIN course_hour c ON a.course_hour_id=c.id
    LEFT JOIN user d ON a.user_id=d.id
    WHERE a.id=#{id,jdbcType=BIGINT}
  </select>
  
     <select id="queryMyNote" resultType="cn.bnsr.edu_yun.frontstage.base.view.NoteView">
	SELECT DISTINCT c.id as course_id, (CASE WHEN info.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 3 AND defaulted = 0 order by upload_time desc limit 1) ELSE info.img END) AS course_picture,c.title AS course_title,
	(  SELECT  COUNT(*)
  	FROM course_note n1
   WHERE n1.user_id = #{user_id,jdbcType=BIGINT}
   AND n1.course_id=c.id
   ) AS noteNum,
   (  SELECT  n2.note_time
  	FROM course_note n2
   WHERE n2.user_id = #{user_id,jdbcType=BIGINT}
   AND n2.course_id=c.id
   ORDER BY n2.note_time DESC LIMIT 1
   ) AS noteTime
	FROM  course_note n 
  	LEFT JOIN course c ON  c.id = n.course_id
  	LEFT JOIN course_info info ON  info.course_id = c.id 
   WHERE n.user_id  = #{user_id,jdbcType=BIGINT}
  	ORDER BY n.id desc
	LIMIT ${startLine},${rows}
  </select>
  
   <select id="queryMyNoteCount" resultType="java.lang.Integer">
    SELECT  COUNT(DISTINCT n.course_id)
  	FROM course_note n
   WHERE n.user_id = #{user_id,jdbcType=BIGINT}
  	</select>
  
  <select id="queryMyCourseNote" resultType="cn.bnsr.edu_yun.frontstage.base.view.NoteView">
	SELECT h.id as course_hour_id, h.hour_title as course_hour_title,
	(CASE WHEN info.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 3 AND defaulted = 0 order by upload_time desc limit 1) ELSE info.img END) AS course_picture,n.note_content as noteContent,c.title AS course_title,
	n.id as note_id,n.note_time as noteTime
	FROM  course_note n 
  	LEFT JOIN course_hour h ON  h.id = n.course_hour_id
  	LEFT JOIN course c ON  c.id = n.course_id
  	LEFT JOIN course_info info ON  info.course_id = c.id 
   WHERE n.user_id  = #{user_id,jdbcType=BIGINT}
   <if test="course_id!=0">
   and n.course_id=#{course_id,jdbcType=BIGINT}
   </if>
  	ORDER BY n.id desc
  	<if test="rows!=null and rows!=0">
	LIMIT ${startLine},${rows}
	</if>
  </select>
  <select id="queryMyCourseNoteCount" resultType="java.lang.Integer">
    SELECT  COUNT(*)
  	FROM course_note n
   WHERE n.user_id = #{user_id,jdbcType=BIGINT}
    <if test="course_id!=0">
   and n.course_id=#{course_id,jdbcType=BIGINT}
   </if>
  	</select>
  	
  <select id="queryCourseIdsNote" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TrainDetailView" resultType="cn.bnsr.edu_yun.backstage.train.view.CourseNoteView">
  	SELECT
		u.username as author_name,(CASE WHEN u.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 2 AND defaulted = 0 order by upload_time desc limit 1) ELSE u.icon END) as user_icon,
		c.title as course_name,t.*
	FROM
		course_note t
	LEFT JOIN user u ON u.id = t.user_id
	LEFT JOIN course c ON c.id = t.course_id
	WHERE
		t.course_id IN
		<foreach item="item" index="index" collection="courseIds" open="(" separator="," close=")">  
      	 	#{item}  
		</foreach>  
  	ORDER BY
   	 <if test="sort == 0 ">
  		t.note_time 
   	 </if>
   	 <if test="sort == 1 ">
   	 	t.agree
   	 </if>
   	 desc
	LIMIT ${startLine},${rows}
  </select>
  <select id="queryTotalCourseIdsNote" parameterType="cn.bnsr.edu_yun.frontstage.train.view.TrainDetailView" resultType="java.lang.Integer">
	SELECT COUNT(*) FROM
		course_note t
	WHERE
		t.course_id IN
		<foreach item="item" index="index" collection="courseIds" open="(" separator="," close=")">  
      	 	#{item}  
		</foreach>
  </select>
  <select id="queryNoteM"  resultType="cn.bnsr.edu_yun.frontstage.train.view.CourseNoteView">
	SELECT cn.id as note_id,cn.note_content,cn.agree,DATE_FORMAT(cn.note_time,'%Y-%m-%d') as note_time,u.username,ch.hour_title,
	(SELECT COUNT(*) FROM course_note_agree cna WHERE cna.user_id=${user_id} AND cna.note_id=cn.id)!=0 AS is_agree
	 FROM course_note cn
	 LEFT JOIN user u on u.id=cn.user_id
	 LEFT JOIN course_hour ch ON ch.id=cn.course_hour_id
	 WHERE cn.course_id=${course_id}
     <if test="status==0">
     	and cn.is_share=1
     </if>
 	<if test="status==1">
     	and cn.user_id=${user_id}
     </if>
	ORDER BY cn.id desc
	</select>
</mapper>