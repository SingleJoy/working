<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bnsr.edu_yun.frontstage.train.mapper.UserAppraiseMapper" >
  <resultMap id="BaseResultMap" type="cn.bnsr.edu_yun.frontstage.train.po.UserAppraise" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="source_id" property="source_id" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="TINYINT" />
    <result column="appraise_time" property="appraise_time" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="source_type" property="source_type" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.bnsr.edu_yun.frontstage.train.po.UserAppraise" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    <result column="appraise_content" property="appraise_content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    id, source_id, user_id, score, appraise_time, status, source_type
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    appraise_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_appraise
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    delete from user_appraise
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserAppraise" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_appraise (source_id, user_id, score, 
      appraise_time, status, source_type, 
      appraise_content)
    values (#{source_id,jdbcType=BIGINT}, #{user_id,jdbcType=BIGINT}, #{score,jdbcType=TINYINT}, 
      #{appraise_time,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{source_type,jdbcType=INTEGER}, 
      #{appraise_content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserAppraise" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_appraise
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="source_id != null" >
        source_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="appraise_time != null" >
        appraise_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="source_type != null" >
        source_type,
      </if>
      <if test="appraise_content != null" >
        appraise_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="source_id != null" >
        #{source_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=TINYINT},
      </if>
      <if test="appraise_time != null" >
        #{appraise_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="source_type != null" >
        #{source_type,jdbcType=INTEGER},
      </if>
      <if test="appraise_content != null" >
        #{appraise_content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserAppraise" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    update user_appraise
    <set >
      <if test="source_id != null" >
        source_id = #{source_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=TINYINT},
      </if>
      <if test="appraise_time != null" >
        appraise_time = #{appraise_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="source_type != null" >
        source_type = #{source_type,jdbcType=INTEGER},
      </if>
      <if test="appraise_content != null" >
        appraise_content = #{appraise_content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserAppraise" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    update user_appraise
    set source_id = #{source_id,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=BIGINT},
      score = #{score,jdbcType=TINYINT},
      appraise_time = #{appraise_time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      source_type = #{source_type,jdbcType=INTEGER},
      appraise_content = #{appraise_content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bnsr.edu_yun.frontstage.train.po.UserAppraise" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 19 09:40:07 CST 2017.
    -->
    update user_appraise
    set source_id = #{source_id,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=BIGINT},
      score = #{score,jdbcType=TINYINT},
      appraise_time = #{appraise_time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      source_type = #{source_type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectBySourceId"  resultType="cn.bnsr.edu_yun.frontstage.train.view.UserAppraisView">
    SELECT 
	    ua.id,ua.user_id,u.username,(CASE WHEN u.is_default_img=0 THEN (SELECT path FROM cert_model_picture WHERE type= 2 AND defaulted = 0 order by upload_time desc limit 1) ELSE u.icon END) AS icon,ua.appraise_time,ua.source_id,
	    ua.source_type,ua.score,ua.status,ua.appraise_content,datediff(NOW(),ua.appraise_time) as now_dif
    FROM user_appraise ua ,user u
    WHERE  ua.status=0 AND ua.user_id=u.id 
    	AND ua.source_id = #{sourceId,jdbcType=BIGINT}
    	AND ua.source_type = #{sourceType,jdbcType=INTEGER}
    ORDER BY ua.appraise_time  DESC  
    LIMIT  #{start,jdbcType=BIGINT}, #{pageSize,jdbcType=BIGINT} 
    
  </select>
  <select id="selectCountBySourceId"  resultType="java.lang.Long">
  	SELECT COUNT(*)  
  	FROM user_appraise
    WHERE  user_appraise.status=0
    	AND user_appraise.source_id = #{sourceId,jdbcType=BIGINT}
    	AND user_appraise.source_type = #{sourceType,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCourseIdAndUserId"  resultMap="BaseResultMap">
    SELECT * 
    FROM user_appraise 
    WHERE status=0 AND user_appraise.user_id=#{user_id,jdbcType=BIGINT} 
    AND user_appraise.source_id=#{source_id,jdbcType=BIGINT}
    AND user_appraise.source_type=#{source_type,jdbcType=INTEGER}
     LIMIT 1
  </select>
  
  <select id="search" parameterType="cn.bnsr.edu_yun.backstage.train.view.UserAppraiseView" resultType="cn.bnsr.edu_yun.backstage.train.view.UserAppraiseView">
    	SELECT * FROM (SELECT a.id,a.source_id,a.user_id,a.score,u.username as authorName,a.source_type,
    		(CASE WHEN a.source_type=0 THEN (SELECT c.title FROM course c WHERE c.id=a.source_id) 
    		WHEN a.source_type=1 THEN (SELECT c.name FROM train c WHERE c.id=a.source_id)
    		WHEN a.source_type=3 THEN (SELECT c.name FROM lesson c WHERE c.id=a.source_id) 
    		WHEN a.source_type=4 THEN (SELECT c.filename FROM file_base c WHERE c.id=a.source_id) END)
    		AS sourceName,a.appraise_content,a.appraise_time,a.status
    	FROM user_appraise a 
    	LEFT JOIN user u ON a.user_id=u.id 
    	WHERE a.status !=2 
	    <if test=" status != null">
	     AND a.status=#{status,jdbcType=TINYINT}
	    </if>
	    <if test=" source_type != null">
	     AND a.source_type=#{source_type,jdbcType=INTEGER}
	    </if>
	    <if test="score != null and score!='' ">
	      AND a.score = #{score,jdbcType=TINYINT}
	    </if>
	    <if test="timeStart != null and timeStart != ''">
	   		<![CDATA[ AND a.appraise_time >= '${timeStart}']]>  
	    </if>
	    <if test="timeEnd != null and timeEnd !='' ">
	      	<![CDATA[ AND a.appraise_time <= '${timeEnd}']]>  
	    </if>
	    <if test="authorName != null and authorName!='' ">
	      <![CDATA[AND u.username LIKE '%${authorName}%']]>  
	    </if>
	    <if test="appraise_content != null and appraise_content!='' ">
	      <![CDATA[AND a.appraise_content LIKE '%${appraise_content}%']]> 
	    </if>
	    ) y WHERE 1=1 
	    <if test="sourceName != null and sourceName!='' ">
	      <![CDATA[AND  y.sourceName LIKE '%${sourceName}%' ]]>  
	    </if>
	    <if test="sort !=null and order != null">
	      ORDER BY y.${sort} ${order}
	    </if>
	    LIMIT ${page},${rows}
  </select> 
  
  <select id="getById"  resultType="cn.bnsr.edu_yun.backstage.train.view.UserAppraiseView">
    SELECT a.id,a.source_id,a.source_type,a.user_id,a.score,u.username as authorName,
    a.appraise_content,a.appraise_time,a.status,
    <choose>
    <when test="source_type==0">c.title</when>
    <otherwise>c.name</otherwise>
    </choose> as sourceName
    FROM user_appraise a JOIN user u ON a.user_id=u.id 
    <choose>
    <when test="source_type==0">JOIN course c ON a.source_id=c.id</when>
    <when test="source_type==1">JOIN train c ON a.source_id=c.id</when>
    <when test="source_type==2">JOIN class c ON a.source_id=c.id</when>
    <when test="source_type==3">JOIN lesson c ON a.source_id=c.id</when>
    </choose>
     where a.id = ${id} 
  </select>
  
  <select id="count" parameterType="cn.bnsr.edu_yun.backstage.train.view.UserAppraiseView" resultType="java.lang.Long">
    SELECT COUNT(*) FROM 
    (SELECT (CASE WHEN a.source_type=0 THEN (SELECT c.title FROM course c WHERE c.id=a.source_id) 
    		WHEN a.source_type=1 THEN (SELECT c.name FROM train c WHERE c.id=a.source_id)
    		WHEN a.source_type=3 THEN (SELECT c.name FROM lesson c WHERE c.id=a.source_id) END) AS sourceName
    FROM user_appraise a 
    LEFT JOIN user u ON a.user_id=u.id 
    WHERE a.status !=2
    <if test=" status !=null">
        AND a.status=#{status,jdbcType=TINYINT}
    </if>
    <if test=" source_type != null">
        AND a.source_type=#{source_type,jdbcType=INTEGER}
    </if>
    <if test="score != null and score!='' ">
	    AND a.score = #{score,jdbcType=TINYINT}
    </if>
     <if test="timeStart != null and timeStart != ''">
   		<![CDATA[ AND a.appraise_time >= '${timeStart}']]>  
    </if>
    <if test="timeEnd != null and timeEnd !='' ">
      	<![CDATA[ AND a.appraise_time <= '${timeEnd}']]>  
    </if>
    <if test="authorName != null and authorName!='' ">
      <![CDATA[AND u.username LIKE '%${authorName}%']]>  
    </if>
    <if test="appraise_content != null and appraise_content!='' ">
      <![CDATA[AND a.appraise_content LIKE '%${appraise_content}%']]> 
    </if>
    ) y WHERE 1=1 
    <if test="sourceName != null and sourceName!='' ">
      <![CDATA[AND  y.sourceName LIKE '%${sourceName}%' ]]>  
    </if>
  </select>
  
   <select id="selectTotalScore"  resultType="java.lang.Integer">
	 SELECT SUM(score)  
	 FROM user_appraise 
	 WHERE user_appraise.source_id = #{sourceId,jdbcType=BIGINT}
	 	AND user_appraise.source_type = #{sourceType,jdbcType=INTEGER}
	 	AND user_appraise.status=0
   </select>
  	
   <select id="userAppriContentStati" resultType="cn.bnsr.edu_yun.backstage.content.view.ContentStatiView" parameterType="cn.bnsr.edu_yun.backstage.content.view.ContentStatiView">
  	SELECT DATE_FORMAT(appraise_time, '%Y-%m-%d') days, COUNT(id) AS newNum
	FROM user_appraise
	WHERE 1=1 
		<if  test="monthType == 0 or monthType == 1 ">
			<![CDATA[AND appraise_time LIKE  '${days}%']]>  
		</if>
		<if  test="monthType == 2 or monthType == 3 ">
		 	<![CDATA[ AND (appraise_time >= '${startTime}' AND appraise_time <= '${endTime}' )]]>  
		</if>
	GROUP BY days
  </select>
</mapper>