package cn.bnsr.edu_yun.frontstage.train.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import cn.bnsr.edu_yun.frontstage.train.service.CertificateService;
import cn.bnsr.edu_yun.frontstage.train.service.TrainCourseService;
import cn.bnsr.edu_yun.frontstage.train.service.TrainExamStandardService;
import cn.bnsr.edu_yun.frontstage.train.service.TrainPhaseService;
import cn.bnsr.edu_yun.frontstage.train.service.TrainService;
import cn.bnsr.edu_yun.frontstage.train.view.CertificatesView;
import cn.bnsr.edu_yun.frontstage.train.view.TrainExamStandardView;
import cn.bnsr.edu_yun.frontstage.train.view.TrainView;
import cn.bnsr.edu_yun.util.ExceptionUtil;

@Controller
@RequestMapping("/train_exam_standard")
public class TrainExamStandardController {

	private final Logger log = LoggerFactory.getLogger(TrainExamStandardController.class);
	
	@Autowired
	private TrainExamStandardService trainExamStandardService;
	@Autowired
	private CertificateService certificateService;
	@Autowired
	private TrainService trainService;
	@Autowired 
	private TrainCourseService trainCourseService;
	@Autowired
	private TrainPhaseService trainPhaseService;
	
	@RequestMapping("/to_train_exam_standard")
	public ModelAndView toTrainExamStandard(TrainView trainView){
		ModelAndView mv = new ModelAndView();
		try{
			Long trainId = trainView.getId();
			String sign = trainView.getSign();
			String flag = trainView.getFlag();
			
			if(trainId!=null){
				trainView = trainService.getByTrain(trainView);
				CertificatesView certificatesView = new CertificatesView();
				certificatesView.setSource_id(trainId.toString());
				certificatesView.setSource_type("0");
				//fangxiongwei 20170111 根据培训id查询培训信息、必修选修课时数
				List<TrainExamStandardView> tesvList = trainExamStandardService.queryExamStandard(trainId,trainView.getType());
				TrainExamStandardView tesv = new TrainExamStandardView();
				if(tesvList.size()>0){//有课程
					tesv = tesvList.get(0);//赋值考核标准
				}
				for(int i=0;i<tesvList.size();i++){//赋值学时
					if(tesvList.get(i).getType()==0){//必修
						tesv.setRequiredHours(tesvList.get(i).getTotalHours());//必修学时
					}else{//选修
						tesv.setOptionHours(tesvList.get(i).getTotalHours());//选修学时
					}
				}
				//总学时
				tesv.setTotalHours(tesv.getRequiredHours()+tesv.getOptionHours());
				
				if(tesv.getId()==null){//没有课程 只查询考核标准
					tesv = trainExamStandardService.queryByTrainId(trainId);
				}
				
				//查询该培训所有阶段总学时要求
				if(trainView.getType()==1){//阶段培训
					int total_required = trainPhaseService.searchTotalHours(trainId);
					tesv.setTotal_required(total_required);
				}
				List<CertificatesView> certList =  certificateService.findAll(certificatesView);
				if(certList.size()>0){
					mv.addObject("certificate",certList.get(0));
				}
				mv.addObject("trainExamStandardView", tesv);
			}
			trainView.setSign(sign);
			trainView.setFlag(flag);
			mv.addObject("trainView", trainView);
			
		}catch(Exception e){
			e.printStackTrace();
			log.error("跳转简单培训考核页面失败", ExceptionUtil.getExceptionMessage(e));
		}
		mv.setViewName("frontstage/train/train/train_exam_standard");
		return mv;
	}
	
	@RequestMapping("/transaction_train_exam_standard")
	public ModelAndView saveOrUpdateExamStandard(HttpServletRequest request,TrainExamStandardView standardView,CertificatesView certificatesView){
		String id = request.getParameter("train_id");
		String sign = request.getParameter("sign");
		try{
			trainExamStandardService.saveOrUpdate(standardView);
			certificateService.saveOrUpdate1(certificatesView);
		}catch(Exception e){
			e.printStackTrace();
			log.error("保存考核标准设置失败", ExceptionUtil.getExceptionMessage(e));
		}
		return new ModelAndView("redirect:/train_exam_standard/to_train_exam_standard.action?id="
				+ id + "&flag=1&sign="+sign);
	}
	
	
}



































